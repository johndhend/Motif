! 
! @OPENGROUP_COPYRIGHT@
! COPYRIGHT NOTICE
! Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
! Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
! ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
! the full copyright text.
! 
! This software is subject to an open license. It may only be
! used on, with or for operating systems which are themselves open
! source systems. You must contact The Open Group for a license
! allowing distribution and sublicensing of this software on, with,
! or for operating systems which are not Open Source programs.
! 
! See http://www.opengroup.org/openmotif/license for full
! details of the license agreement. Any use, reproduction, or
! distribution of the program constitutes recipient's acceptance of
! this agreement.
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
! PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
! KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
! WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
! OR FITNESS FOR A PARTICULAR PURPOSE
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
! NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
! INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
! AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
! LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
! ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
! EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
! POSSIBILITY OF SUCH DAMAGES.
! 
! 
! HISTORY
! 
!   $XConsortium: GSyntax2.uil /main/8 1995/07/13 20:39:59 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive
        objects = {
                XmSeparator = gadget ;
                XmLabel = gadget ;
                XmPushButton = gadget ;
                XmToggleButton = gadget ;
                XmArrowButton = gadget ;
                XmCascadeButton = gadget ;
                }

  include file "GSyntax2.msg";
  
  procedure
          exit_test();
	  Report_Callback(string);
	  CreateCallback();

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {
  
              arguments {
                  XmNx = 0;
                  XmNy = 0;
                  XmNdialogTitle =  compound_string ("Gadget Syntax Test");
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
                  XmBulletinBoard    Bulletin_Board;
  	      };
	      callbacks {
		  MrmNcreateCallback = procedure CreateCallback();
	      };
  	  };

  value
        sky_blue: color ('SkyBlue');
        black: color ('black');
	align_value: XmALIGNMENT_END;

  object
        Bulletin_Board :  XmBulletinBoard {
            arguments {
		XmNborderWidth = 1;
                XmNbackground =  sky_blue;
                XmNmarginWidth =  20;
                XmNmarginHeight =  20;
                XmNdefaultPosition =  false;
                XmNnoResize =  true;
		XmNresizePolicy = XmRESIZE_GROW;
		XmNshadowType = XmSHADOW_ETCHED_OUT;
		XmNshadowThickness = 10;
            };
	    controls {
		XmArrowButton		ArrowButton1;
		XmArrowButtonGadget	ArrowButton2;
		XmMenuBar		MenuBar;
		XmLabel			Label1;
		XmLabelGadget		Label2;
		XmPushButton		PushButton1;
		XmPushButtonGadget	PushButton2;
		XmSeparator		Sep1;
		XmSeparatorGadget	Sep2;
		XmToggleButton		ToggleButton1;
		XmToggleButtonGadget	ToggleButton2;
	    };
        };

	ArrowButton1 : XmArrowButton {
	    arguments {
		XmNx = 30;
		XmNy = 30;
	    };
	};

	ArrowButton2 : XmArrowButtonGadget {
	    arguments {
		XmNx = 300;
		XmNy = 30;
	    };
	};

	MenuBar : XmMenuBar {
	    arguments {
		XmNx = 30;
		XmNy = 57;
 	    };
	    controls {
		XmCascadeButton		CascadeButton1;
		XmCascadeButtonGadget	CascadeButton2;
	    };
	};

	CascadeButton1 : XmCascadeButton gadget {
	    arguments {
		XmNborderWidth = 2;
		XmNlabelString = "XmCascadeButton gadget                  ";
	    };
	};

	CascadeButton2 : XmCascadeButtonGadget {
	    arguments {
		XmNborderWidth = 2;
		XmNlabelString = "XmCascadeButtonGadget";
	    };
	};

	Label1 : XmLabel {
	    arguments {
		XmNx = 30;
		XmNy = 90;
		XmNborderWidth = 2;
		XmNlabelString = "XmLabel (gadget in header)";
	    };
	};

	Label2 : XmLabelGadget {
	    arguments {
		XmNx = 300;
		XmNy = 90;
		XmNborderWidth = 2;
		XmNlabelString = "XmLabelGadget";
	    };
	};

	PushButton1 : XmPushButton {
	    arguments {
		XmNx = 30;
		XmNy = 120;
		XmNshadowThickness = 2;
		XmNlabelString = "XmPushButton (gadget in header)";
	    };
	};

	PushButton2 : XmPushButtonGadget {
	    arguments {
		XmNx = 300;
		XmNy = 120;
		XmNshadowThickness = 2;
		XmNlabelString = "XmPushButtonGadget";
	    };
	};

	Sep1 : XmSeparator {
	    arguments {
		XmNx = 30;
		XmNy = 160;
		XmNwidth = 220;
		XmNshadowThickness = 2;
	    };
	};

	Sep2 : XmSeparatorGadget {
	    arguments {
		XmNx = 300;
		XmNy = 160;
		XmNwidth = 120;
		XmNshadowThickness = 2;
	    };
	};

	ToggleButton1 : XmToggleButton {
	    arguments {
		XmNx = 30;
		XmNy = 180;
		XmNshadowThickness = 2;
		XmNlabelString = "XmToggleButton (gadget in header)";
	    };
	};

	ToggleButton2 : XmToggleButtonGadget {
	    arguments {
		XmNx = 300;
		XmNy = 180;
		XmNshadowThickness = 2;
		XmNlabelString = "XmToggleButtonGadget";
	    };
	};


object
	explanation : XmBulletinBoardDialog {
			arguments { 
				  XmNx = 550;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton widget {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel widget {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};
		

object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;  
				  XmNheight = 300;
				  XmNwidth = 400;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };
				   
		};
end module;
