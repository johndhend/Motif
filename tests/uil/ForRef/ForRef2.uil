! 
! @OPENGROUP_COPYRIGHT@
! COPYRIGHT NOTICE
! Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
! Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
! ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
! the full copyright text.
! 
! This software is subject to an open license. It may only be
! used on, with or for operating systems which are themselves open
! source systems. You must contact The Open Group for a license
! allowing distribution and sublicensing of this software on, with,
! or for operating systems which are not Open Source programs.
! 
! See http://www.opengroup.org/openmotif/license for full
! details of the license agreement. Any use, reproduction, or
! distribution of the program constitutes recipient's acceptance of
! this agreement.
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
! PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
! KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
! WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
! OR FITNESS FOR A PARTICULAR PURPOSE
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
! NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
! INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
! AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
! LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
! ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
! EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
! POSSIBILITY OF SUCH DAMAGES.
! 
! 
! HISTORY
! 
!   $XConsortium: ForRef2.uil /main/7 1995/07/13 20:29:34 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "ForRef2.msg";
  
!
! Colors used in tests
!

value
	yellow		: exported color(yellow_string, foreground);
	red		: exported color('red', background);
	blue		: exported color('blue', background);

value
        yellow_string	: 'yellow';

!
! Color table for icons
!

value
	button_ct	: color_table(	yellow='o',
					red='.',
					blue='~',
					background color = 'b',
					foreground color = 'f');

!
! Icon declarations
!

	test_icon: exported test_icon2;

        test_icon2: exported icon(color_table=button_ct,
		'...........................',
		'...........................',
		'..oooo..ooooo.o...o..ooo...',
		'..o...o...o...oo..o.o...o..',
		'..oooo....o...o.o.o....o...',
		'..o...o...o...o..oo...o....',
		'..oooo....o...o...o.ooooo..',
		'...........................',
		'...........................',
		'...........................',
		'..ooooo.ooooo.ooooo.ooooo..',
		'....o...o.....o.......o....',
		'....o...ooo...ooooo...o....',
		'....o...o.........o...o....',
		'....o...ooooo.ooooo...o....',
		'...........................',
		'...........................',
		'...........................',
		'............~~~............',
		'...........~...~...........',
		'..............~............',
		'.............~.............',
		'...........~~~~~...........',
		'...........................',
		'...........................');

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          TopManager : XmBulletinBoard {
  
              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmDrawnButton    		Drawn_Button;
		  XmLabel			font_test;
		  XmLabel			font_test2;
    	      };
  	  };

  value
        sky_blue: color ('sky blue');

  object
        Drawn_Button :  XmDrawnButton {
            arguments {
                XmNx =  0;
                XmNy =  0;
                XmNwidth =  118;
                XmNheight =  118;
                XmNborderWidth =  4;
                XmNhighlightThickness =  1;
                XmNmarginWidth =  50;
                XmNmarginHeight =  50;
                XmNmarginLeft =  50;
                XmNmarginRight =  50;
                XmNmarginTop =  50;
                XmNmarginBottom =  50;
                XmNpushButtonEnabled =  true;
		XmNbackgroundPixmap = test_icon;
            };
        };


value
	boolean1: true;

object
	font_test :	XmLabel {
			arguments {
				  XmNx = 10;
				  XmNy = 150;
				  XmNfontList = bold_font;
				  XmNlabelString = 
					compound_string(text_string1, separate=boolean1) & 
					text_string2;
				  };
			};

value
	bold_font: font('8x13bold');
	text_string1: "Bold";
	text_string2: "font";

object
	font_test2 :	XmLabel {
			arguments {
				  XmNx = 10;
				  XmNy = 180;
				  XmNfontList = font_table(bold_font);
				  XmNlabelString = 
				    compound_string("forward reference test");
				  };
			};

end module;
