! 
! @OPENGROUP_COPYRIGHT@
! COPYRIGHT NOTICE
! Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
! Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
! ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
! the full copyright text.
! 
! This software is subject to an open license. It may only be
! used on, with or for operating systems which are themselves open
! source systems. You must contact The Open Group for a license
! allowing distribution and sublicensing of this software on, with,
! or for operating systems which are not Open Source programs.
! 
! See http://www.opengroup.org/openmotif/license for full
! details of the license agreement. Any use, reproduction, or
! distribution of the program constitutes recipient's acceptance of
! this agreement.
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
! PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
! KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
! WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
! OR FITNESS FOR A PARTICULAR PURPOSE
! 
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
! NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
! INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
! AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
! LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
! ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
! EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
! POSSIBILITY OF SUCH DAMAGES.
! 
! 
! HISTORY
! 
!   $XConsortium: ResInd.uil /main/4 1995/07/13 20:38:04 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "ResInd.msg";
  
  procedure
          exit_test();
	  Report_Callback(string);
	  Change_Parent_Bkgd ();

  value
	  wheat	 : color('wheat');
	  navy	 : color('navy');
	  black  : color('black',foreground);
	  white  : color('white',background);
	  green  : color('green',background);
	  blue   : color('blue',background);
	  yellow : color('yellow',background);
	  orange : color('orange',background);
	  violet : color('violet',background);
	  red    : color('red',background);
	

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmForm {
  
              arguments {
                  XmNx = 0;
                  XmNy = 0;
                  XmNdialogTitle =  compound_string ("BBoard Test");
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
                  XmBulletinBoard    board1;
                  XmBulletinBoard    board2;
                  XmBulletinBoard    board3;

  	      };
  	  };

  object
        board1 :  XmBulletinBoard {
            arguments {
                XmNbackground =  navy;
		XmNunitType = XmPIXELS;
		XmNwidth = 10;
		XmNheight = 100;
            };
        };

  object
        board2 :  XmBulletinBoard {
            arguments {
                XmNbackground =  orange;
		XmNunitType = Xm1000TH_INCHES;
		XmNwidth = 1000;
		XmNheight = 4000;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = board1;
            };
        };

  object
        board3 :  XmBulletinBoard {
            arguments {
                XmNbackground =  red;
		XmNunitType = Xm100TH_MILLIMETERS;
		XmNwidth = 1000;
		XmNheight = 100;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = board2;
            };
        };




object
	explanation : XmBulletinBoardDialog {
			arguments { 
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};
		

object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;  
				  XmNheight = 350;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };
				   
		};
end module;
