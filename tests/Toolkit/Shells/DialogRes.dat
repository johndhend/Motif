/* 
 *  @OPENGROUP_COPYRIGHT@
 *  COPYRIGHT NOTICE
 *  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
 *  Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
 *  ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
 *  the full copyright text.
 *  
 *  This software is subject to an open license. It may only be
 *  used on, with or for operating systems which are themselves open
 *  source systems. You must contact The Open Group for a license
 *  allowing distribution and sublicensing of this software on, with,
 *  or for operating systems which are not Open Source programs.
 *  
 *  See http://www.opengroup.org/openmotif/license for full
 *  details of the license agreement. Any use, reproduction, or
 *  distribution of the program constitutes recipient's acceptance of
 *  this agreement.
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 *  PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 *  WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 *  OR FITNESS FOR A PARTICULAR PURPOSE
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
 *  NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
 *  EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGES.
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: DialogRes.dat /main/5 1995/07/13 19:20:27 drk $"
*/
/*
 * "OSF/Motif: @(#)DialogRes.dat	1.1 91/09/12";
 */

#) This is a test testing the setting VendorShell resources on a
   DialogShell.

#) There should be a control panel shown with a button saying "Post Dialog",
   and all the window decoration resources available to be set by the user. 
   Also, there should be a button "ApplyDecorations" and it should be 
   insensitive.

#) First of all, click on "Post Dialog". This should create and post a
   modeless message dialog as a child of Shell1. The dialog should have
   its OK and Cancel buttons not visible, and Help button label changed to
   "Destroy Me". "Post Dialog" button should now be insensitive and the
   button "ApplyDecorations" should now be sensitive.

C)

#) To modify the window decorations of DialogShell1, click on the various
   decoration resource toggle buttons, and then click on "ApplyDecorations"
   button. Note that changing the state of "Minimize" and "Maximize" buttons
   should not have any effect on the decorations of the dialogshell.
   Decor_All sets or resets the MWM_DECOR_ALL bit in the mwmDecorations.

#) Click on Decor_All to set MWM_DECOR_ALL bit to 1. Now, all the decorations
   that you specify by toggling the respective values to True, will
   disappear from the set of decorations.

#) Click on ResizeH to select it.

#) Click on "ApplyDecorations". DialogShell1 gets unmapped and mapped and
   the resize handles should not be present.

#) Click on "Border".

#) Click on "ApplyDecorations". DialogShell1 gets unmapped and mapped and
   the window border should disappear.

C)

#) Click on "SystemMenu".

#) Click on "ApplyDecorations". DialogShell1 gets unmapped and mapped and
   the window system menu button should disppear.

#) Click on "Title".

#) Click on "ApplyDecorations". DialogShell1 gets unmapped and mapped and
   the window title should disappear.

#) Click on "Decor_All".

#) Click on "ApplyDecorations". DialogShell1 gets unmapped and mapped and
   the window decorations should be back in full (except Minimize and
   Maximize buttons).

C)

#) The control panel should now be expanded to contain window menu function
   resource toggle buttons and the pushbutton "ApplyFunctions".

#) To modify the window decorations of DialogShell1, click on the various
   function resource toggle buttons, and then click on "ApplyFunctions"
   button. Note that changing the state of "Iconify" and "MaximumSize" buttons
   should not have any effect on the functions of the Dialogshell1 menu.
   Func_All sets or resets the MWM_FUNC_ALL bit in the mwmFunctions.

#) Click on Func_All to set MWM_FUNC_ALL bit to 1. Now, all the functions
   that you specify by toggling the respective values to True, will
   disappear from the window menu of DialogShell1.

#) Click on "Size" to select it.

#) Click on "ApplyFunctions". DialogShell1 gets unmapped and mapped and
   the "Size" item should disappear from the window menu of DialogShell1.

C)

#) Click on "Move".

#) Click on "ApplyFunctions". DialogShell1 gets unmapped and mapped and
   the "Move" item should disappear from the window menu of DialogShell1.

#) Click on "Close".

#) Click on "ApplyFunctions". DialogShell1 gets unmapped and mapped and
   the "Close" item should disappear from the window menu of DialogShell1.

#) Click on "Func_All".

#) Click on "ApplyFunctions". DialogShell1 gets unmapped and mapped and
   the window menu should be back in full (except Iconify and Maximize 
   items).

C)

#) This is to test PIR 2133. Post the window menu from DialogShell1.
   Select "Close" from the menu. You should get a message on your
   xterm saying "Close window message sent.". If yes, the bug about
   not being able to trap f.kill is fixed.

C)

E)
