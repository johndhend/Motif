@) This test confirms that setting the resources 
XmNdefaultButtonShadowThickness and XmNshowAsDefault on
a PushButton and PushButtonGadget before they are realized does not 
cause those widgets to draw into an unrealized window.

#) You should see the two objects displayed. 
If no X errors (BadDrawable from X_PolyFillRectangle request) 
have been reported, the test has passed.

C)
#) A client with a pushbutton should appear. It should be labeled
   'Push Here' with marginWidth and marginHeight set at 20.
   All other resources will be set by default. 
#) Click MB1 on the pushbutton. The pushbutton should set showAsDefault
   to 5 which will place a second shadow region around the pushbutton
   to visually mark it as a default button. 
#) Click MB1 on the pushbutton again. Now, showAsDefault will be set at 10 and
   and the shadow region around the pushbutton will grow to 10 pixels. 
C)

#) Double and triple click on the button. You will get only
   one callback for each click, and the click_count will always be 1. 
C)

#) Multi-click on button. You will get a separate callback
   for each click, which will look like a series with counts 1,2,3,etc 

C)
#) A bulletinBoard with several pushButtons should appear.  Mnemonics have
   been added to the push Buttons.  Verify that the mnemonics work.  With
   focus in the window, type <Alt> mnemonic character.  You should 
   get a message to the term window describing which button was selected.
   Try both 'R' and 'r', to verify for case sensitivity.


C)
#) Click on the first push button.  The remaining pushbuttons should be
   destroyed with no core dumps occurring.

C)

E)
