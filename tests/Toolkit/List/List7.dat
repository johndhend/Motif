/* 
 *  @OPENGROUP_COPYRIGHT@
 *  COPYRIGHT NOTICE
 *  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
 *  Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
 *  ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
 *  the full copyright text.
 *  
 *  This software is subject to an open license. It may only be
 *  used on, with or for operating systems which are themselves open
 *  source systems. You must contact The Open Group for a license
 *  allowing distribution and sublicensing of this software on, with,
 *  or for operating systems which are not Open Source programs.
 *  
 *  See http://www.opengroup.org/openmotif/license for full
 *  details of the license agreement. Any use, reproduction, or
 *  distribution of the program constitutes recipient's acceptance of
 *  this agreement.
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 *  PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 *  WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 *  OR FITNESS FOR A PARTICULAR PURPOSE
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
 *  NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
 *  EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGES.
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: List7.dat /main/5 1995/07/13 18:20:30 drk $"
*/
#) A client with two lists, two push buttons, and a scale should appear.
   The list on the far left should have a list of function names, and the
   list on the far right should have a list of items (1 - 9)
#) Select XmListAddItems() from the Functions list, and then select Item1,
   Item2, and Item3 from the Action List.
#) Click MB1 in the Call Function push button. The Action list should
   now contain vertical scrollbars, and Item1, Item2, and Item3 should be
   appended (selected) the end of the Action List.
C)
#) Click MB1 in the Clear Args push button.
#) Select XmListDeleteItems() from the Functions list, and then
   select Item4, Item5, and Item6 from the Action List.
#) Click MB1 in the Call Funtion push button. Item4, Item5, and Item6
   should be deleted from the Action List, and the vertical scrollbar
   should disappear.
#) Click MB1 in the Call Function push button again. Three warning messages
   should be printed in the term window.
C)

#) Click MB1 in the Clear Args push button.
#) Select XmListDeleteItemsPos() from the Functions List, and then select
   Item1 from the Action List.
#) Move the slider on the scale till the scale reads 2.
#) Click MB1 in the Call Function push button. Item1 and Item2 should be
   deleted from the Action List.
#) Click MB1 in the last item in the Action List (Item3).
#) Click MB1 in the Call Funtion push button. The last item (Item3) should
   be deleted from the list.
#) Click MB1 in the Call Funtion push button again. A warning message
   should be printed in the term window.
#) Move the slider scale to 0.
#) Click MB1 in the Call Function push button. No change will be visible.
C)
#) Click MB1 in the Clear Args push button.
#) Select XmListAddItem() from the Functions List, and then select Item7
   from the Action List.
#) Move the Scale slider to 6.
#) Click MB1 in the Call Function push button, Item7 should be added (selected)
   in the sixth position in the List.
#) Move the Scale slider to 0.
#) Click MB1 in the Call Funtion push button. Item7 should be added (selected)
   to the end of the list.
C)
#) Click MB1 in the Clear Args push button.
#) Select XmListDeleteItem() from the Functions List, and then select
   Item9 in the Action List.
#) Click MB1 in the Call Function push button, Item9 should be deleted
   from the Action List.
#) Click MB1 in the Call Function push button again. A warning message should
   be printed in the term window.
C)
#) Click MB1 in the Clear Args push button.
#) Select XmListDeleteAllItems() from the Functions List.
#) Click MB1 in the Call Function push button, all Items should be
   deleted and the List should be empty. The list should not increase in size.
#) Click MB1 in the Call Function push button. There should be no visible
   change.
E)
