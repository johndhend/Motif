/* 
 *  @OPENGROUP_COPYRIGHT@
 *  COPYRIGHT NOTICE
 *  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
 *  Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
 *  ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
 *  the full copyright text.
 *  
 *  This software is subject to an open license. It may only be
 *  used on, with or for operating systems which are themselves open
 *  source systems. You must contact The Open Group for a license
 *  allowing distribution and sublicensing of this software on, with,
 *  or for operating systems which are not Open Source programs.
 *  
 *  See http://www.opengroup.org/openmotif/license for full
 *  details of the license agreement. Any use, reproduction, or
 *  distribution of the program constitutes recipient's acceptance of
 *  this agreement.
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 *  PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 *  WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 *  OR FITNESS FOR A PARTICULAR PURPOSE
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
 *  NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
 *  EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGES.
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: Text5.dat /main/7 1995/07/13 19:29:38 drk $"
*/
/* another test case for PIR 3175 - type returns first, then
text, it should grow correctly - I'll add a real test later */
#) Move the pointer into the Text window.  It should be sized
   just large enough to fix the text in it.  Type some new text
   including a few newlines.  The window should grow to
   accommodate the text horizontally and vertically. 
#) Now backspace from the end of the text until the remaining text
   is just one or two words on the first line.  The window should
   shrink back to be only one row high.
C)
@) A single line text widget with the string 'Sample Text' will appear in
   the test window. The text is red on a white background. 
/* test case for PIR 3175 - should not need to do this step if fixed */
   (If the text widget is not visible, resize the window larger to
   expose it.)
/* end of test case for PIR 3175 */
#) Move the pointer into the Text window and press the return key.
   It should have no effect. 
C)
#) Move the pointer into the text widget and press ANY key. No matter
   what key was pressed, an 'A' will appear. 
#) Press another key. This time a 'B' will appear in the text widget. 
#) Repeat this cycle and you will print out the entire alphabet. 
C)
#) Move the pointer into the test window, and again press return.
   The text will change to the string \"Welcome to OSF/Motif\". 
C)
/* test case for PIR 2230 */
#) Move the pointer into the text widget and press ANY key. No matter
   what key was pressed, an 'A' followed by a very long series of
   digits will appear inserted in the original string before the
   characters \"Motif\".
#) Press another key. This time a 'B' followed by a very long series
   of digits will appear in the text widget.
#) Repeat this cycle ten times and it will print out more letters
of the alphabet each
followed by a long digit series.
(This may be slow to watch - after typing the keys, use osfEndData
to jump to the end of the text and check that it has updated correctly.)
/* end of test case for PIR 2230 */

C)

/* test case for CR 5380 */

@) The text widget has been changed to have a variable font. 
The number of columns for the Text widget has been set to 20.
A dialog shell should appear with a scale for changing the
width of the text widget. Also two pushbuttons \"Set String\"
and \"Get Values\".  

#) Select the pushbutton labelled \"Get Values\". The number of
columns and the width of the text widget should both be printed
to the terminal window.

#) Decrease the width until just the letter\"I\" is displayed.
Select the button \"Set String\". This will change the character \"I\"
to the character \"W\". Increase the width of the text widget until
the entire character \"W\" can be displayed.

#) Try typing other characters into the text widget and changing
the width of the text widget. Verify that no errors occur. 
Change the width of the text widget to zero. Verify that no error occurs.
/* end test case for CR 5380 */

C)

E)
