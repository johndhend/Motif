/* 
 *  @OPENGROUP_COPYRIGHT@
 *  COPYRIGHT NOTICE
 *  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
 *  Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
 *  ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
 *  the full copyright text.
 *  
 *  This software is subject to an open license. It may only be
 *  used on, with or for operating systems which are themselves open
 *  source systems. You must contact The Open Group for a license
 *  allowing distribution and sublicensing of this software on, with,
 *  or for operating systems which are not Open Source programs.
 *  
 *  See http://www.opengroup.org/openmotif/license for full
 *  details of the license agreement. Any use, reproduction, or
 *  distribution of the program constitutes recipient's acceptance of
 *  this agreement.
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 *  PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 *  WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 *  OR FITNESS FOR A PARTICULAR PURPOSE
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
 *  NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
 *  EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGES.
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: TextWcs1.dat /main/6 1995/07/13 19:37:43 drk $"
*/
@) A client with a list of functions, a control panel and a Text widget to 
be acted upon should appear.
@) The Action Text widget should initially contain the string 
"This is the starting string".
#) Drag MB1 in the Action Text widget to make a small selection.
#) Select the XmTextGetSelectionWcs() function, and click Call Function.
The selected string from Action Text should appear
in the status widget.
C)
#) Click the Clear Args PushButton to reset the control panel.
#) Select the XmTextInsertWcs() function.  Set the Num Arg 1 Scale to 3.
#) Click in the Status/Input widget and type in a new string like "NEW".
#) Click the Call Function PushButton.  The string in the Status/Input
widget should get inserted after the third character in the Action Text 
widget.
C)
#) Select and call the XmTextGetStringWcs() function.  The entire string from
the Action Text widget should appear in the Status/Input widget.  Note that
the string may be wider than the Status widget width.  Use the arrow
keys to move to the hidden text.
#) Click the Clear Args PushButton to reset the control panel.
#) Select the XmTextSetStringWcs() function.  
#) Click in the Status/Input widget and type "Here is a new string". 
#) Click the Call Function PushButton.  The new text from the Status
widget should replace all the text that was previously in the Action
Text widget.
#) Click the Clear Args PushButton.
#) Select the XmTextReplaceWcs() function.  Set the Num Arg 1 Scale to 2
and the Num Arg 2 Scale to 7.
#) Click in the Status/Input widget and type "y wheres".
#) Click the Call Function PushButton.  The Action Text widget should
now read "Hey wheres a new string".
C)
#) Click the Clear Args PushButton.
#) Select the XmTextFindStringWcs() function.
#) Click in the Status/Input widget and type "new".
#) Click the Call Function PushButton.  The Status/Input widget should
indicate the string was found.  The Action Text widget should have the
search string selected.
#) Click the Clear Args PushButton.
#) Select the XmTextFindStringWcs() function.
#) Click in the Status/Input widget and type "old", and click Call Function.
#) The Status/Input widget should indicate that the string was not found.
#) Click the Clear Args PushButton.
#) Select the XmTextFindStringWcs() function.
#) Set Num Arg 1 to 28.  Toggle the Forward/Backward Arg to Backward.
#) Click in the Status widget and type "ey", and click Call Function.
#) The Status widget should indicate the string was found and the Action
Text should have the search string selected.
C)
#) Click the Clear Args PushButton.
#) Select the XmTextGetSubstringWcs() function.
#) Set the Num Arg 1 Scale to 5, the Num Arg 2 Scale to 4, and
the Num Arg 3 Scale to 5.
#) Click the Call Function PushButton.  The Status/Input widget should
contain the substring "here".
#) Set the Num Arg 1 Scale to 20, the Num Arg 2 Scale to 4, and
the Num Arg 3 Scale to 5.
#) Click the Call Function PushButton.  The Status/Input widget should
contain the substring "(XmCOPY_TRUNCATED) ing".
#) Set the Num Arg 1 Scale to 5, the Num Arg 2 Scale to 4, and
the Num Arg 3 Scale to 3.
#) Click the Call Function PushButton.  The Status/Input widget should
contain the substring "Return: XmCOPY_FAILED".
E)
