# $XConsortium: TextWcs1.scr /main/5 1995/07/17 20:43:21 drk $
# 
# @OPENGROUP_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
# ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
# the full copyright text.
# 
# This software is subject to an open license. It may only be
# used on, with or for operating systems which are themselves open
# source systems. You must contact The Open Group for a license
# allowing distribution and sublicensing of this software on, with,
# or for operating systems which are not Open Source programs.
# 
# See http://www.opengroup.org/openmotif/license for full
# details of the license agreement. Any use, reproduction, or
# distribution of the program constitutes recipient's acceptance of
# this agreement.
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
# PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
# WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
# OR FITNESS FOR A PARTICULAR PURPOSE
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
# NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
# EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES.
# 
# 
# HISTORY
# 

#  @) A client with a list of functions, a control panel and a Text widget to 
#  be acted upon should appear.
#  @) The Action Text widget should initially contain the string 
#  "This is the starting string".
WindowRaise Shell1
CompareVisual Text1

#  #) Drag MB1 in the Action Text widget to make a small selection.
LocatePointer Text1 RTextChar 5
DragComponent Text1 RTextChar 9

#  #) Select the XmTextGetSelectionWcs() function, and click Call Function.
#  The selected string from Action Text should appear
#  in the status widget.
LocatePointer List1 RListItem 0
ClickMB Btn1
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText

#  C)
Continue
WindowRaise Shell1

#  #) Click the Clear Args PushButton to reset the control panel.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextInsertWcs() function.  Set the Num Arg 1 Scale to 3.
LocatePointer List1 RListItem 0
ClickMB Btn1
LocatePointer Scale1 RScaleSlider
DragSliderValue Right 3

#  #) Click in the Status/Input widget and type in a new string like "NEW".
LocatePointer StatText
ClickMB Btn1
InputString "NEW"

#  #) Click the Call Function PushButton.  The string in the Status/Input
#  widget should get inserted after the third character in the Action Text 
#  widget.
LocatePointer ApplyB
ClickMB Btn1
CompareVisual Text1

#  C)
Continue
WindowRaise Shell1

#  #) Select and call the XmTextGetStringWcs() function.  The entire string from
#  the Action Text widget should appear in the Status/Input widget.  Note that
#  the string may be wider than the Status widget width.  Use the arrow
#  keys to move to the hidden text.
LocatePointer List1 RListItem 0
ClickMB Btn1
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText
LocatePointer StatText
ClickMB Btn1
ClickKey KEndData
CompareVisual StatText

#  #) Click the Clear Args PushButton to reset the control panel.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextSetStringWcs() function.  
LocatePointer List1 RListItem 1
ClickMB Btn1

#  #) Click in the Status/Input widget and type "Here is a new string". 
LocatePointer StatText
ClickMB Btn1
InputString "Here is a new string"

#  #) Click the Call Function PushButton.  The new text from the Status
#  widget should replace all the text that was previously in the Action
#  Text widget.
LocatePointer ApplyB
ClickMB Btn1
CompareVisual Text1

#  #) Click the Clear Args PushButton.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextReplaceWcs() function.  Set the Num Arg 1 Scale to 2
#  and the Num Arg 2 Scale to 7.
LocatePointer List1 RListItem 2
ClickMB Btn1
LocatePointer Scale1 RScaleSlider
DragSliderValue Right 2
LocatePointer Scale2 RScaleSlider
DragSliderValue Right 7

#  #) Click in the Status/Input widget and type "y wheres".
LocatePointer StatText
ClickMB Btn1
InputString "y wheres"

#  #) Click the Call Function PushButton.  The Action Text widget should
#  now read "Hey wheres a new string".
LocatePointer ApplyB
ClickMB Btn1
CompareVisual Text1

#  C)
Continue
WindowRaise Shell1

#  #) Click the Clear Args PushButton.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextFindStringWcs() function.
LocatePointer List1 RListItem 0
ClickMB Btn1

#  #) Click in the Status/Input widget and type "new".
LocatePointer StatText
ClickMB Btn1
InputString "new"

#  #) Click the Call Function PushButton.  The Status/Input widget should
#  indicate the string was found.  The Action Text widget should have the
#  search string selected.
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText
CompareVisual Text1

#  #) Click the Clear Args PushButton.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextFindStringWcs() function.
LocatePointer List1 RListItem 0
ClickMB Btn1

#  #) Click in the Status/Input widget and type "old", and click Call Function.
LocatePointer StatText
ClickMB Btn1
InputString "old"
LocatePointer ApplyB
ClickMB Btn1

#  #) The Status/Input widget should indicate that the string was not found.
CompareVisual StatText

#  #) Click the Clear Args PushButton.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextFindStringWcs() function.
LocatePointer List1 RListItem 0
ClickMB Btn1

#  #) Set Num Arg 1 to 28.  Toggle the Forward/Backward Arg to Backward.
LocatePointer Scale1 RScaleSlider
DragSliderValue Right 28
LocatePointer ToggleB2
ClickMB Btn1

#  #) Click in the Status widget and type "ey", and click Call Function.
LocatePointer StatText
ClickMB Btn1
InputString "ey"
LocatePointer ApplyB
ClickMB Btn1

#  #) The Status widget should indicate the string was found and the Action
#  Text should have the search string selected.
CompareVisual StatText
CompareVisual Text1

#  C)
Continue
WindowRaise Shell1

#  #) Click the Clear Args PushButton.
LocatePointer ClearB
ClickMB Btn1

#  #) Select the XmTextGetSubstringWcs() function.
LocatePointer List1 RListItem 0
ClickMB Btn1

#  #) Set the Num Arg 1 Scale to 5, the Num Arg 2 Scale to 4, and
#  the Num Arg 3 Scale to 5.
LocatePointer Scale1 RScaleSlider
DragSliderValue Right 5
LocatePointer Scale2 RScaleSlider
DragSliderValue Right 4
LocatePointer Scale3 RScaleSlider
DragSliderValue Right 5

#  #) Click the Call Function PushButton.  The Status/Input widget should
#  contain the substring "here".
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText

#  #) Set the Num Arg 1 Scale to 20, the Num Arg 2 Scale to 4, and
#  the Num Arg 3 Scale to 5.
LocatePointer Scale1 RScaleSlider
DragSliderValue Right 20

#  #) Click the Call Function PushButton.  The Status/Input widget should
#  contain the substring "(XmCOPY_TRUNCATED) ing".
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText
LocatePointer StatText
ClickMB Btn1
ClickKey KEndData
CompareVisual StatText

#  #) Set the Num Arg 1 Scale to 5, the Num Arg 2 Scale to 4, and
#  the Num Arg 3 Scale to 3.
LocatePointer Scale1 RScaleSlider
DragSliderValue Left 5
LocatePointer Scale3 RScaleSlider
DragSliderValue Left 3

#  #) Click the Call Function PushButton.  The Status/Input widget should
#  contain the substring "Return: XmCOPY_FAILED".
LocatePointer ApplyB
ClickMB Btn1
CompareVisual StatText


#  E)
Exit

