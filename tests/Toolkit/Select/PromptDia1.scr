# $XConsortium: PromptDia1.scr /main/6 1995/07/17 20:38:05 drk $
# 
# @OPENGROUP_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
# ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
# the full copyright text.
# 
# This software is subject to an open license. It may only be
# used on, with or for operating systems which are themselves open
# source systems. You must contact The Open Group for a license
# allowing distribution and sublicensing of this software on, with,
# or for operating systems which are not Open Source programs.
# 
# See http://www.opengroup.org/openmotif/license for full
# details of the license agreement. Any use, reproduction, or
# distribution of the program constitutes recipient's acceptance of
# this agreement.
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
# PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
# WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
# OR FITNESS FOR A PARTICULAR PURPOSE
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
# NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
# EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES.
# 
# 
# HISTORY
# 

# OSF/Motif: @(#)PromptDia1.scr	1.2  92/01/28

# A Prompt Dialog will appear. The text field will contain the string
# \"MessageDialog\" and the selectionLabelString will 
# read \"Select a Dialog:\". 
# The PromtDialog will be 200x200, this will force the Help button
# to be be positioned in a row below the OK and Cancel buttons.
# Continue to insert callbacks and continue testing. 

LocatePointer PromptDia
CompareVisual PromptDia

# C)

Continue

# Click MB1 on the OK pushbutton. A message will be printed in the term
# window stating what the contents of text field is, and the Apply button
# will become managed. 

LocatePointer PromptDia ROkButton
ClickMB Btn1

CompareVisual PromptDia

# Click MB1 on the Apply button. A Message Dialog will appear. It will
# be positioned at (100,100). The messageString will read \"Pick a
# Dialog, Any Dialog\". 

LocatePointer PromptDia RApplyButton
ClickMB Btn1

# Click MB1 on Cancel button of the Message Dialog. The Dialog will
# disappear. 

CompareVisual ApplyMessage

LocatePointer ApplyMessage RCancelButton
ClickMB Btn1

CompareVisual PromptDia

# Move the cursor into the text field and use the left and right arrow keys
# to move through the entry. Then, use the up and down arrow keys. Nothing
# should happen. 

LocatePointer PromptDia RSelectionTextChar 0
ClickMB Btn1
ClickKey KRight
ClickKey KRight
ClickKey KRight
ClickKey KLeft
ClickKey KLeft
ClickKey KLeft
ClickKey KUp
ClickKey KDown

CompareVisual PromptDia

# Click MB1 on the Cancel button. The textString should clear and the
# Apply button should become unmanaged. 

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia

# C)

Continue

# In the text field type the name of any of the following Dialogs
# (InformationDialog, ErrorDialog, WarningDialog, WorkingDialog,
# MessageDialog). 

LocatePointer PromptDia RSelectionText
ClickMB Btn1
InputString "InformationDialog"


# Click MB1 on the OK pushbutton. A message will be printed in the term
# window stating what the contents of text field is. Also, the Apply
# button will become managed. 

LocatePointer PromptDia ROkButton 
ClickMB Btn1

# Click MB1 on the Apply button. The Dialog name that you typed into the
# text field will appear and will be positioned at (100,100). The
# messageString will read \"Pick a Dialog, Any Dialog\". 

LocatePointer PromptDia RApplyButton
ClickMB Btn1

CompareVisual ApplyInfo

#) Click MB1 on Cancel button of the Dialog. The Dialog will disappear. 

LocatePointer ApplyInfo RCancelButton
ClickMB Btn1

# Click MB1 on the Cancel button. The textString should clear and the
# Apply button should become unmanaged. 

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia

# Repeat these steps with each of the Dialogs in the list 

LocatePointer PromptDia RSelectionText
ClickMB Btn1
InputString "ErrorDialog"

LocatePointer PromptDia ROkButton 
ClickMB Btn1

LocatePointer PromptDia RApplyButton
ClickMB Btn1

CompareVisual ApplyError

LocatePointer ApplyError RCancelButton
ClickMB Btn1

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia

LocatePointer PromptDia RSelectionText
ClickMB Btn1
InputString "QuestionDialog"

LocatePointer PromptDia ROkButton 
ClickMB Btn1

LocatePointer PromptDia RApplyButton
ClickMB Btn1

CompareVisual ApplyQuestion

LocatePointer ApplyQuestion RCancelButton
ClickMB Btn1

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia


LocatePointer PromptDia RSelectionText
ClickMB Btn1
InputString "WarningDialog"

LocatePointer PromptDia ROkButton 
ClickMB Btn1

LocatePointer PromptDia RApplyButton
ClickMB Btn1

CompareVisual ApplyWarning

LocatePointer ApplyWarning RCancelButton
ClickMB Btn1

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia


LocatePointer PromptDia RSelectionText
ClickMB Btn1
InputString "WorkingDialog"

LocatePointer PromptDia ROkButton 
ClickMB Btn1

LocatePointer PromptDia RApplyButton
ClickMB Btn1

CompareVisual ApplyWorking

LocatePointer ApplyWorking RCancelButton
ClickMB Btn1

LocatePointer PromptDia RCancelButton
ClickMB Btn1

CompareVisual PromptDia

# C)

Continue

# Click MB1 on the Help push button. A Message Dialog positioned at (50,50)
# will appear. The messageString will read \"Help!!!! - Has now arrived\". 

LocatePointer PromptDia RHelpButton 
ClickMB Btn1

CompareVisual Help

# Press MB1 on the Cancel pushbutton of the Message Dialog. The Dialog
# will disappear. 

LocatePointer Help RCancelButton
ClickMB Btn1

# C)

Continue

# Give the dialog window focus. The highlight (keyboard focus) should be on
# the OK button.

LocatePointer PromptDia
CompareVisual PromptDia

# Press Cancel button. The dialog is unmanaged.

LocatePointer PromptDia RCancelButton 
ClickMB Btn1

# We want to get warning. 

LocatePointer PromptDia

# C)

Continue
# Give the dialog window focus.

LocatePointer PromptDia

# Focus should be on the Text widget.

CompareVisual PromptDia

# Press Cancel button. The dialog is unmanaged.

LocatePointer PromptDia RCancelButton
ClickMB Btn1

# We want to get warning. 

LocatePointer PromptDia

# C)

Continue

# Give the dialog window focus.

LocatePointer PromptDia

# MOTIF1_1
# Normally, the focus would be on the Cancel button. However, we have forced
# the focus programmatically onto the OK button. That is where the defaultShadow
# and the highlight (location cursor) should be.
# MOTIF1_2
# Normally, the focus would be on the text field. However, we have forced
# the focus programmatically onto the OK button. That is where the defaultShadow
# and the highlight (location cursor) should be.

CompareVisual PromptDia

# E) 

Exit
