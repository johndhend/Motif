#!/bin/sh
# @OPENGROUP_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
# ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
# the full copyright text.
# 
# This software is subject to an open license. It may only be
# used on, with or for operating systems which are themselves open
# source systems. You must contact The Open Group for a license
# allowing distribution and sublicensing of this software on, with,
# or for operating systems which are not Open Source programs.
# 
# See http://www.opengroup.org/openmotif/license for full
# details of the license agreement. Any use, reproduction, or
# distribution of the program constitutes recipient's acceptance of
# this agreement.
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
# PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
# WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
# OR FITNESS FOR A PARTICULAR PURPOSE
# 
# EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
# NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
# EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES.
#
# HISTORY

CURR_MWM=../../../clients/mwm/mwm

SYSTEM=`uname -a | awk -F' ' '{print $1}'`

# print out error message

	case $# in
		0) echo "Usage : RunUITest [executable]" 
		exit
	esac


# print out warnings and question
	echo; echo
	echo "This is the execution script for the Mwm UI tests."
	echo
	echo "To begin this test, the window manager \"mwm\" will be"
	echo "killed and restarted with a new resource database."
        echo "You will then be asked to hit return when the new \"mwm\" is"
	echo "up and running.  Then, the actual test will be run, and upon"
	echo "completion, the original \"mwm\" will be restarted with it's"
	echo "original resource database intact."
	echo
	echo "It is assumed the original \"mwm\" running was ${TEST_MWM}," 
	echo "and, therefore, that is what will be restarted."
	echo

if [ ${SYSTEM} = "HP-UX" ] || [ ${SYSTEM} = "IRIX" ] 
then
# HP version
	echo "Do you want to continue? (n) \c"
else
# others, like DEC version
	echo "Do you want to continue? (n) "
fi

	read ANS
	ANS2=".${ANS}"
	if [ ${ANS2} != ".y" ]
	then
		echo "Cancelling test."
		exit
	fi



# merge in new resources into database
	xrdb -edit /tmp/oldxdef$$
	xrdb -load < $1."Xdefs"

# get the wm process and kill it
#	look for " mwm" or ".../mwm"
#	this should give you only things that really are mwm
#	remove all leading whitespace and replace multiple
#	tabs/spaces with 1 space
if [ ${SYSTEM} = "HP-UX" ] || [ ${SYSTEM} = "IRIX" ] 
then
# HP version
	MWM_LINE=`ps -ef | egrep ' mwm|/mwm' | grep -v egrep`
	BETTER_MWM_LINE=`echo ${MWM_LINE} | sed -e 's/^[	 ]*//
		s/[	 ][	 ]*/ /g'`
	MWM_PID=`echo ${BETTER_MWM_LINE} | cut -d' ' -f2`
	MWM_CMD=`echo ${BETTER_MWM_LINE} | cut -d' ' -f8-`
	MWM_OPTS=`echo ${BETTER_MWM_LINE} | cut -d' ' -f9-`
fi
if [ ${SYSTEM} = "OSF1" ] 
then
	MWM_LINE=`ps -a | egrep ' mwm|/mwm' | grep -v egrep`
	BETTER_MWM_LINE=`echo ${MWM_LINE} | sed -e 's/^[	 ]*//
		s/[	 ][	 ]*/ /g'`
	MWM_PID=`echo ${BETTER_MWM_LINE} | awk '{print $1}'`
	MWM_CMD=`echo ${BETTER_MWM_LINE} | cut -d' ' -f8-`
	MWM_OPTS=`echo ${BETTER_MWM_LINE} | cut -d' ' -f9-`
fi
if [ ${SYSTEM} = "SunOS" ] 
then
# others, like DEC version
    MWM_LINE=`ps axw | egrep ' mwm|/mwm' | grep -v egrep`
	BETTER_MWM_LINE=`echo ${MWM_LINE} | sed -e 's/^[   ]*//
		s/[  ][  ]*/ /g'`
	MWM_PID=`echo ${BETTER_MWM_LINE} | cut -d' ' -f1`
	MWM_CMD=`echo ${BETTER_MWM_LINE} | cut -d' ' -f5-`
	MWM_OPTS=`echo ${BETTER_MWM_LINE} | cut -d' ' -f6-`
fi

	kill -9 ${MWM_PID}


# start new wm and then start test
	${CURR_MWM} ${MWM_OPTS} >/dev/null 2>&1 &
	sleep 10

if [ ${SYSTEM} = "HP-UX" ] || [ ${SYSTEM} = "IRIX" ]
then
# HP version
	echo "Hit return after the new \"mwm\" is up and running. (CR) \c"
else
# others, like DEC version
	echo -n "Hit return after the new \"mwm\" is up and running. (CR) "
fi



if [ ${SYSTEM} = "HP-UX" ] || [ ${SYSTEM} = "IRIX" ] || [ ${SYSTEM} = "OSF1" ] 
then
# HP version
TEST_MWM_PID=`ps -eaf | egrep ' mwm|/mwm' | grep -v egrep | awk -F' ' '{print $2}'`
else
TEST_MWM_PID=`ps -axw | egrep ' mwm|/mwm' | grep -v egrep | awk -F' ' '{print $1}'`
fi

# now start the test program
	$1

# restore old resource database, kill new wm and restart old one
	echo "The original \"mwm\" is being restored..."


if [ -s /tmp/oldxdef$$ ]
then
	xrdb /tmp/oldxdef$$
else
	xrdb -remove	
fi


 kill -9 ${TEST_MWM_PID}
 ${CURR_MWM} ${MWM_OPTS}>/dev/null 2>&1 &
	sleep 10

	rm -f /tmp/oldxdef$$*

# end of script




