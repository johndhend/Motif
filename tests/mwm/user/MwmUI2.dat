/* $XConsortium: MwmUI2.dat /main/4 1995/07/17 10:26:20 drk $ */
/*
 *  @OPENGROUP_COPYRIGHT@
 *  COPYRIGHT NOTICE
 *  Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
 *  Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
 *  ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
 *  the full copyright text.
 *  
 *  This software is subject to an open license. It may only be
 *  used on, with or for operating systems which are themselves open
 *  source systems. You must contact The Open Group for a license
 *  allowing distribution and sublicensing of this software on, with,
 *  or for operating systems which are not Open Source programs.
 *  
 *  See http://www.opengroup.org/openmotif/license for full
 *  details of the license agreement. Any use, reproduction, or
 *  distribution of the program constitutes recipient's acceptance of
 *  this agreement.
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
 *  PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
 *  WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
 *  OR FITNESS FOR A PARTICULAR PURPOSE
 *  
 *  EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
 *  NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
 *  EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGES.
*/
/*
 * HISTORY
*/
#) This is the MwmUI2 test.
#) In the next panel, a client window will appear on the screen
   which enables interactive placement. Place the window at a convenient
   location on the screen. Note the appearance of the client window when
   you place it.
#) The cleanText resource has been set to False, which may render the
   titles for windows difficult to read. Henceforth, when "TestWindow1" is
   referred to, it refers to the window containing "PB1". The same applies
   for "TestWindow2", "TestWindow3", "TestWindow4" 
   ("PB2", "PB3", "PB4" respectively).
#) Please iconify all windows on the screen except for the test instruction
   panel, and the term window the test was started from.
C)

#) The client window should have had the focus for an instant when it was 
   placed.
@) /* CR 5934 */
#) Set the focus to the instruction panel.
#) The background of the frame of the client window should now have a 
   pixmap of vertical lines alternating between black and white. 
#) The bottom shadow color color of the window should be orange. The top shadow
   color should be aquamarine.
#) The title of the window should be "TestWindow1"; this should be in black.
#) The title of the window should be drawn directly on the stipple of
   the pixmap.
#) The border width of the frame should be 20 pixels.
#) The window should have all window decorations on it : i.e, the 
   maximize button, the minimize button, the window menu button
   the resize handles, the window border, and the title. Click once on the
   window menu button. It should post and remain posted. It should have the
   have the following options : Restore, Move, Size, Minimize, Maximize, Lower
   and Close. You should be able to traverse the window items using the
   Up and Down arrow keys on the keyboard.
#) The font used for the window menu and title string should be 6x12.
#) In the next panel, another client window which enables interactive 
   placement will appear on the screen. Place the window at a convenient
   location on the screen.
C)


#) This panel tests focus policies.
#) Click on "TestWindow1". It should get the focus. The frame 
   of the window should have a background pixmap of diagnol lines slanting 
   right  alternating between black and white.  
#) The bottom shadow color of the window should be yellow. The top shadow color
   should be purple.
#) The title string of the window should now be in white.
#) The title of the window should be drawn directly on the stipple of
   the pixmap.
#) Now, click on "TestWindow2". It should get the focus, and a 
   message should appear on the term window.

   "The button press event has been passed to the client".

#) Iconify "TestWindow2". The icon should appear on the bottom right of
   of the screen, above any existing icons. The focus should now be on 
   "TestWindow1".
#) Normalize "TestWindow2" by double-clicking on the icon. 
   The focus should now be on "TestWindow2".
#) Move "TestWindow2" until it partially covers "TestWindow1". 
#) Click on any part of "TestWindow1". It should get the focus, and be 
   raised above "TestWindow2".
#) Click on the part of "TestWindow2" which is inside the frame. It should be
   raised above "TestWindow1".
C)

#) This panel tests size and position resources.
#) Resize "TestWindow1" as big as possible. It shouldn't allow you to
   resize it beyond 300x300 pixels. You should get feedback information 
   while resizing, indicating the current size of the window. 
#) Resize "TestWindow1" back to a regular size.
#) Press MB2 on the frame of "TestWindow1". Slide the pointer slowly along the
   frame. About 100 pixels from the initial position, a drag operation should
   be initiated.
C)

#) This panel tests icon configuration resources.
#) Iconify "TestWindow1". The icon should appear on the bottom right corner
   of the screen, above existing icons.
#) Iconify "TestWindow2". The icon should appear above the icon of 
   "TestWindow1".
#) The icon for TestWindow2 should have the "smiley" bitmap 
   as its icon image. It should should have a black foreground
   and white background.
#) The top shadow color of the icon image should be blue. The bottom shadow 
   color should be red. The top shadow pixmap of the icon image (upper and left
   3-D bevels) should be vertical lines alternating between blue and red.
@) /* ignore this for the time being - a reminder to myself. */
   /* SEEMS_NOT_WORKING. */. 
  /* DESCRIBE COLOR AND CONTENT OF PIXMAPS. NEED TO FIGURE OUT COLORS. */
#) Both the label and the image of the icons should be visible. 
   Click MB1 on one of the icons to activate it. The full label should be 
   visible. The icon menu should post and remain posted. Unpost the menu by 
   clicking on the root window.
#) Normalize the icons for "TestWindow1" and "TestWindow2".
#) In the next panel, a client window which enables interactive placement 
   will appear on the screen. Place the window at a convenient location on the
   screen.
C)


#) This panel tests button and key bindings to various Mwm functions.
#) A window titled "TestWindow3" with a text child should have appeared on
   the screen.
#) Give focus to "TestWindow3", and type 'a' in the Text widget. The letter
   'a' should be displayed ; if it isn't, then CR 3117   hasn't been fixed.
#) Move the pointer to any of the test windows.
#) Press <Ctrl> MB1. The window should be iconified.
#) Press <Ctrl> MB3 on the icon. The icon should be normalized.
#) Press <Ctrl> MB2 on any of the test windows EXCEPT TestWindow1. The window 
   should be maximized to 1000x1000 pixels.
   Press <Ctrl> MB3 on the maximized window to normalize it.
#) Press <Shift> MB1 on any of the test windows. You should hear a beep, 
   if your bell is on.
C)

#) Move the pointer to the window menu button of "TestWindow1". Double-click
   on it rapidly with MB1. The window should close.
#) Close "TestWindow2" and "TestWindow3" via the window menu.
E)





   






