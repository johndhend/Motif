! @OPENGROUP_COPYRIGHT@
! COPYRIGHT NOTICE
! Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
! Copyright (c) 1996, 1997, 1998, 1999, 2000 The Open Group
! ALL RIGHTS RESERVED (MOTIF). See the file named COPYRIGHT.MOTIF for
! the full copyright text.
!
! This software is subject to an open license. It may only be
! used on, with or for operating systems which are themselves open
! source systems. You must contact The Open Group for a license
! allowing distribution and sublicensing of this software on, with,
! or for operating systems which are not Open Source programs.
!
! See http://www.opengroup.org/openmotif/license for full
! details of the license agreement. Any use, reproduction, or
! distribution of the program constitutes recipients acceptance of
! this agreement.
!
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS
! PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
! KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY
! WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY
! OR FITNESS FOR A PARTICULAR PURPOSE
!
! EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT
! NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT,
! INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
! DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED
! AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
! LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
! ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
! EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
! POSSIBILITY OF SUCH DAMAGES.
!
! HISTORY

!
! This file defines the Motif UIL language
!

!
! UIL data types
!
DataType
    integer;
    string      { InternalLiteral = char_8; };
    boolean     { InternalLiteral = bool; };
    pixmap;
    float;
    font;
    translation_table
                { InternalLiteral = trans_table;
                  DocName = "translation table"; };
    widget_ref  { DocName = "widget reference"; };
    any;
    color;
    compound_string { DocName = "compound string"; };
    string_table    { DocName = "string table"; };
    font_table    { DocName = "font table"; };
    icon;
    color_table    { DocName = "color table"; };
    class_rec_name    { DocName = "class record name"; };
    argument;
    reason;
    identifier;
    asciz_table    { DocName = "asciz table"; };
    integer_table    { DocName = "integer table"; };
    xbitmapfile    { DocName = "X bitmap file"; };
    single_float    { DocName = "Single float"; };
    keysym;
    rgb;
    localized_string
            { DocName = "localized string"; };
    wide_character     { InternalLiteral = wchar_string;
                  DocName = "wide character string"; };
    fontset;
    horizontal_integer;
    vertical_integer;
    horizontal_float;
    vertical_float;

!
! UIL character sets
!
CharacterSet
    iso_latin1
        { XmStringCharsetName = "ISO8859-1";
          Alias = "ISOLatin1";
          Alias = "88591";
          Alias = "ASCII"; };
    iso_latin2
        { XmStringCharsetName = "ISO8859-2";
          Alias = "ISOLatin2";
          Alias = "88592"; };
    iso_latin3
        { XmStringCharsetName = "ISO8859-3";
          Alias = "ISOLatin3";
          Alias = "88593"; };
    iso_latin4
        { XmStringCharsetName = "ISO8859-4";
          Alias = "ISOLatin4";
          Alias = "88594"; };
    iso_latin5
        { XmStringCharsetName = "ISO8859-5";
          Alias = "ISOLatin5";
          Alias = "88595"; };
    iso_cyrillic
        { XmStringCharsetName = "ISO8859-5"; };
    iso_arabic
        { XmStringCharsetName = "ISO8859-6";
          Alias = "iso_latin6";
          Alias = "ISOLatin6";
          Alias = "88596";
          Direction = RightToLeft; };
    iso_arabic_lr
        { XmStringCharsetName = "ISO8859-6";
          Alias = "iso_latin6_lr";
          Direction = RightToLeft;
          ParseDirection = LeftToRight; };
    iso_greek
        { XmStringCharsetName = "ISO8859-7";
          Alias = "iso_latin7";
          Alias = "ISOLatin7";
          Alias = "88597";  };
    iso_hebrew
        { XmStringCharsetName = "ISO8859-8";
          Alias = "iso_latin8";
          Alias = "ISOLatin8";
          Alias = "88598";
          Direction = RightToLeft; };
    iso_hebrew_lr
        { XmStringCharsetName = "ISO8859-8";
          Alias = "iso_latin8_lr";
          Direction = RightToLeft;
          ParseDirection = LeftToRight; };
    jis_katakana
        { XmStringCharsetName = "JISX0201.1976-0"; };
    euc
        { XmStringCharsetName = ""; };
    big5
        { XmStringCharsetName = ""; };
    gb_hanzi
                { XmStringCharsetName = "GB2312.1980-0";
                  Alias = "gb_chinese";
                  Alias = "gb_hanzi_gl";
                  CharacterSize = TwoByte; };
    jis_kanji
                { XmStringCharsetName = "JISX0208.1983-0";
                  Alias = "jis_japanese";
                  Alias = "jis_kanji_gl";
                  CharacterSize = TwoByte; };
    ksc_hangul
                { XmStringCharsetName = "KSC5601.1987-0";
                  Alias = "ksc_korean";
                  Alias = "ksc_hangul_gl";
                  CharacterSize = TwoByte; };
    gb_hanzi_gr
                { XmStringCharsetName = "GB2312.1980-1";
                  CharacterSize = TwoByte; };
    jis_kanji_gr
                { XmStringCharsetName = "JISX0208.1983-1";
                  CharacterSize = TwoByte; };
    ksc_hangul_gr
                { XmStringCharsetName = "KSC5601.1987-1";
                  CharacterSize = TwoByte; };
    XmFONTLIST_DEFAULT_TAG
        { FontListElementTag = XmFONTLIST_DEFAULT_TAG; };

    _MOTIF_DEFAULT_LOCALE
        { FontListElementTag = _MOTIF_DEFAULT_LOCALE; };

!
! UIL Enumeration Sets
!
EnumerationSet
    ! This is here to insure that uil compiles correctly because
    ! of dependencies introduced with boolean -> enum resources
    BoolValues : integer
        { FALSE; TRUE; };
    ArrowDirection : integer
        { XmARROW_UP; XmARROW_DOWN; XmARROW_LEFT; XmARROW_RIGHT; };
    ResizePolicy : integer
        { XmRESIZE_NONE; XmRESIZE_ANY; XmRESIZE_GROW; };
    DialogStyle : integer
        { XmDIALOG_SYSTEM_MODAL; XmDIALOG_PRIMARY_APPLICATION_MODAL;
          XmDIALOG_MODELESS; XmDIALOG_WORK_AREA;
          XmDIALOG_FULL_APPLICATION_MODAL; XmDIALOG_APPLICATION_MODAL; };
    DialogType : integer
        { XmDIALOG_PROMPT;  XmDIALOG_SELECTION;
          XmDIALOG_WORK_AREA;  XmDIALOG_FILE_SELECTION;
          XmDIALOG_ERROR; XmDIALOG_INFORMATION; XmDIALOG_MESSAGE;
          XmDIALOG_QUESTION; XmDIALOG_WARNING; XmDIALOG_WORKING;
          XmDIALOG_TEMPLATE; XmDIALOG_COMMAND; };
    ShadowType : integer
        { XmSHADOW_IN; XmSHADOW_OUT;
          XmSHADOW_ETCHED_IN; XmSHADOW_ETCHED_OUT; };
    LabelType : integer
        { XmSTRING; XmPIXMAP; };
    StringDirection : integer
        { XmSTRING_DIRECTION_L_TO_R;  XmSTRING_DIRECTION_R_TO_L; };
    Alignment : integer
        { XmALIGNMENT_CENTER;  XmALIGNMENT_END;  XmALIGNMENT_BEGINNING; };
    Attachment : integer
        { XmATTACH_NONE;  XmATTACH_FORM;  XmATTACH_OPPOSITE_FORM;
          XmATTACH_WIDGET;  XmATTACH_OPPOSITE_WIDGET;
          XmATTACH_POSITION; XmATTACH_SELF; };
    ColorModeType : integer
        { XmListMode; XmScaleMode;  };    
    EListSelectionsType : integer
        { XmSINGLE_SELECT; XmEXTENDED_SELECT;  };
    FillOptionType : integer
        { XmFillNone; XmFillMajor;
          XmFillMinor; XmFillAll;  };
   IconPlacementType : integer
        { XmIconTop; XmIconLeft;
          XmIconRight; XmIconBottom;
          XmIconOnly; XmIconNone;  };
    HierarchyNodeStateType : integer
        { XmAlwaysOpen; XmOpen;
          XmClosed; XmHidden;  };
    ConnectStyle : integer
        { XmTreeLadder; XmTreeDirect;  };
    XmTabMode : integer
        { XmTABS_BASIC; XmTABS_STACKED;
          XmTABS_STACKED_STATIC;  };
    XmTabStyle : integer
        { XmTABS_SQUARED; XmTABS_ROUNDED;
         XmTABS_BEVELED;  };
    XmTabOrientation : integer
        { XmTAB_ORIENTATION_DYNAMIC; XmTABS_RIGHT_TO_LEFT;
          XmTABS_LEFT_TO_RIGHT; XmTABS_TOP_TO_BOTTOM;
          XmTABS_BOTTOM_TO_TOP;  };
    XmTabEdge : integer
        { XmTAB_EDGE_TOP_LEFT; XmTAB_EDGE_BOTTOM_RIGHT;  };
    XmTabSide : integer
        { XmTABS_ON_TOP; XmTABS_ON_BOTTOM;
         XmTABS_ON_RIGHT; XmTABS_ON_LEFT;  };
    XmPixmapPlacement : integer
        { XmPIXMAP_TOP; XmPIXMAP_BOTTOM;
          XmPIXMAP_RIGHT; XmPIXMAP_LEFT;
          XmPIXMAP_NONE; XmPIXMAP_ONLY; };
    BackingStoreType : integer
        { "NotUseful"; "WhenMapped";
          "Always";  };
    SelectionPolicy : integer
        { XmSINGLE_SELECT; XmMULTIPLE_SELECT;
          XmEXTENDED_SELECT; XmBROWSE_SELECT; };
    ScrollingPolicy : integer
        { XmAUTOMATIC; XmAPPLICATION_DEFINED; };
    ScrollBarPlacement : integer
        { XmTOP_LEFT; XmBOTTOM_LEFT; XmTOP_RIGHT; XmBOTTOM_RIGHT; };
    ScrollBarDisplayPolicy : integer
        { XmAS_NEEDED; XmSTATIC; };
    ListSizePolicy : integer
        { XmCONSTANT; XmVARIABLE; XmRESIZE_IF_POSSIBLE; };
    VisualPolicy : integer
        { XmVARIABLE; XmCONSTANT; };
    DefaultButtonType : integer
        { XmDIALOG_CANCEL_BUTTON; XmDIALOG_DEFAULT_BUTTON;
          XmDIALOG_HELP_BUTTON; XmDIALOG_MESSAGE_LABEL;
          XmDIALOG_OK_BUTTON; XmDIALOG_SEPARATOR;
          XmDIALOG_SYMBOL_LABEL; };
    RowColumnType : integer
        { XmWORK_AREA; XmMENU_BAR; XmMENU_PULLDOWN;
          XmMENU_POPUP; XmMENU_OPTION; };
    Packing : integer
        { XmNO_PACKING; XmPACK_TIGHT; XmPACK_COLUMN; XmPACK_NONE; };
    Orientation : integer
        { XmNO_ORIENTATION; XmVERTICAL; XmHORIZONTAL; };
    ProcessingDirection : integer
        { XmMAX_ON_TOP; XmMAX_ON_BOTTOM; XmMAX_ON_LEFT; XmMAX_ON_RIGHT; };
    SeparatorType : integer
        { XmSINGLE_LINE; XmDOUBLE_LINE;
          XmSINGLE_DASHED_LINE; XmDOUBLE_DASHED_LINE;
          XmNO_LINE; XmSHADOW_ETCHED_IN; XmSHADOW_ETCHED_OUT;
          XmSHADOW_ETCHED_IN_DASH; XmSHADOW_ETCHED_OUT_DASH;};
    EditMode : integer
        { XmSINGLE_LINE_EDIT; XmMULTI_LINE_EDIT; };
    IndicatorType : integer
        { XmN_OF_MANY; XmONE_OF_MANY;
          XmONE_OF_MANY_ROUND; XmONE_OF_MANY_DIAMOND; };
    ToggleIndicatorOn : integer
        { XmINDICATOR_NONE; XmINDICATOR_FILL; XmINDICATOR_BOX;
          XmINDICATOR_CHECK; XmINDICATOR_CHECK_BOX;
          XmINDICATOR_CROSS; XmINDICATOR_CROSS_BOX;
          FALSE; TRUE;};
    UnitType : integer
        { XmPIXELS; Xm100TH_MILLIMETERS; Xm1000TH_INCHES;
          Xm100TH_POINTS; Xm100TH_FONT_UNITS; XmINCHES;
          XmCENTIMETERS; XmMILLIMETERS; XmPOINTS; XmFONT_UNITS; };
    NavigationType : integer
        { XmNONE; XmTAB_GROUP; XmSTICKY_TAB_GROUP;
          XmEXCLUSIVE_TAB_GROUP; };
    MultiClick : integer
        { XmMULTICLICK_DISCARD; XmMULTICLICK_KEEP; };
    CommandWindowLocation : integer
        { XmCOMMAND_ABOVE_WORKSPACE; XmCOMMAND_BELOW_WORKSPACE; };
    FileTypeMask : integer
        { XmFILE_REGULAR; XmFILE_DIRECTORY; XmFILE_ANY_TYPE; };
    InitialState : integer
        { NormalState; IconicState; };
    DeleteResponse : integer
        { XmDESTROY; XmUNMAP; XmDO_NOTHING; };
    KeyboardFocusPolicy : integer
        { XmEXPLICIT; XmPOINTER; };
    AudibleWarning : integer
        { XmNONE; XmBELL; };
    VerticalAlignment : integer
        {XmALIGNMENT_BASELINE_TOP; XmALIGNMENT_CENTER;
         XmALIGNMENT_BASELINE_BOTTOM;
         XmALIGNMENT_CONTENTS_TOP; XmALIGNMENT_CONTENTS_BOTTOM; };
    UnpostBehavior : integer
        { XmUNPOST_AND_REPLAY; XmUNPOST; };
    TearOffModel : integer
        { XmTEAR_OFF_ENABLED; XmTEAR_OFF_DISABLED; };
    PositionIndex : integer
        { XmLAST_POSITION; XmFIRST_POSITION; };
    FrameChildType : integer
        { XmFRAME_GENERIC_CHILD; XmFRAME_WORKAREA_CHILD;
          XmFRAME_TITLE_CHILD; };
    ChildVerticalAlignment : integer
        { XmALIGNMENT_BASELINE_TOP; XmALIGNMENT_CENTER;
          XmALIGNMENT_BASELINE_BOTTOM; XmALIGNMENT_WIDGET_BOTTOM;
          XmALIGNMENT_WIDGET_TOP;};
    ChildPlacement : integer
        { XmPLACE_TOP; XmPLACE_ABOVE_SELECTION; XmPLACE_BELOW_SELECTION; };
    TextScanType : integer
        { XmSELECT_POSITION; XmSELECT_WHITESPACE; XmSELECT_WORD;
          XmSELECT_LINE; XmSELECT_ALL; XmSELECT_PARAGRAPH;};
    MwmDecorations : integer
        { MWM_DECOR_ALL; MWM_DECOR_BORDER; MWM_DECOR_RESIZEH; MWM_DECOR_TITLE;
          MWM_DECOR_MENU; MWM_DECOR_MINIMIZE; MWM_DECOR_MAXIMIZE; };
    MwmFunctions : integer
        { MWM_FUNC_ALL; MWM_FUNC_RESIZE; MWM_FUNC_MOVE; MWM_DECOR_MINIMIZE;
          MWM_DECOR_MAXIMIZE; MWM_FUNC_CLOSE; };
    MwmInputMode : integer
        { MWM_INPUT_MODELESS; MWM_INPUT_PRIMARY_APPLICATION_MODAL;
          MWM_INPUT_SYSTEM_MODAL; MWM_INPUT_FULL_APPLICATION_MODAL; };
    ToggleMode : integer
        { XmTOGGLE_BOOLEAN; XmTOGGLE_INDETERMINATE; };
    SliderVisual : integer
        { XmBACKGROUND_COLOR; XmFOREGROUND_COLOR;
              XmTROUGH_COLOR; XmSHADOWED_BACKGROUND; };
    SliderMark : integer
        { XmNONE; XmETCHED_LINE; XmTHUMB_MARK; XmROUND_MARK; };
    SlidingMode : integer
        { XmSLIDER; XmTHERMOMETER; };
    PrimaryOwnership : integer
        { XmOWN_NEVER; XmOWN_ALWAYS; XmOWN_MULTIPLE;
          XmOWN_POSSIBLE_MULTIPLE; };
    SelectionMode : integer
        { XmNORMAL_MODE; XmADD_MODE; };
    MatchBehavior : integer
        { XmQUICK_NAVIGATE; XmINVALID_MATCH_BEHAVIOR; };
    PositionMode : integer
        { XmZERO_BASED; XmONE_BASED; };
    AutoDragModel : integer
        { XmAUTO_DRAG_ENABLED; XmAUTO_DRAG_DISABLED; };
    ShowArrows : integer
        { XmEACH_SIDE; XmMAX_SIDE; XmMIN_SIDE; FALSE; TRUE; };
    TextPath : integer
         { XmSTRING_DIRECTION_L_TO_R; XmSTRING_DIRECTION_R_TO_L;
               XmSTRING_DIRECTION_UNSET; XmSTRING_DIRECTION_DEFAULT;
           XmDEFAULT_DIRECTION; };
    ComboBoxType : integer
        { XmCOMBO_BOX; XmDROP_DOWN_COMBO_BOX; XmDROP_DOWN_LIST; };
    ContainerLineStyle : integer
        { XmSINGLE; };
    EntryViewType : integer
        { XmLARGE_ICON; XmSMALL_ICON; XmANY_ICON; };
    LayoutDirection : integer
        { XmRIGHT_TO_LEFT_TOP_TO_BOTTOM;
          XmLEFT_TO_RIGHT_TOP_TO_BOTTOM;
          XmRIGHT_TO_LEFT_BOTTOM_TO_TOP;
          XmLEFT_TO_RIGHT_BOTTOM_TO_TOP;
          XmTOP_TO_BOTTOM_RIGHT_TO_LEFT;
          XmTOP_TO_BOTTOM_LEFT_TO_RIGHT;
          XmBOTTOM_TO_TOP_RIGHT_TO_LEFT;
          XmBOTTOM_TO_TOP_LEFT_TO_RIGHT;
          XmTOP_TO_BOTTOM;
          XmBOTTOM_TO_TOP;
          XmRIGHT_TO_LEFT;
          XmLEFT_TO_RIGHT;
          XmDEFAULT_DIRECTION; };
    LayoutType : integer
        { XmOUTLINE; XmSPATIAL; XmDETAIL; };
    OutlineButtonPolicy : integer
        { XmOUTLINE_BUTTON_PRESENT; XmOUTLINE_BUTTON_ABSENT; };
    SelectionTechnique : integer
        { XmMARQUEE; XmMARQUEE_EXTEND_START; XmMARQUEE_EXTEND_BOTH;
              XmTOUCH_ONLY; XmTOUCH_OVER; };
    SpatialIncludeModel : integer
        { XmAPPEND; XmCLOSEST; XmFIRST_FIT; };
    SpatialResizeModel : integer
        { XmGROW_MINOR; XmGROW_MAJOR; XmGROW_BALANCED; };
    SpatialSnapModel : integer
        { XmNONE; XmSNAP_TO_GRID; XmCENTER; };
    SpatialStyle : integer
        { XmNONE; XmGRID; XmCELLS; };
    OutlineState : integer
        { XmCOLLAPSED; XmEXPANDED; };
    IconGadgetViewType : integer
        { XmLARGE_ICON; XmSMALL_ICON; };
    VisualEmphasis : integer
        { XmSELECTED; XmNOT_SELECTED; };
    BindingType : integer
        { XmSOLID; XmSPIRAL; XmPIXMAP_OVERLAP_ONLY; };
    ArrowSensitivity : integer
        { XmARROWS_INSENSITIVE; XmARROWS_INCREMENT_SENSITIVE;
          XmARROWS_DECREMENT_SENSITIVE; XmARROWS_SENSITIVE;
          XmARROWS_DEFAULT_SENSITIVITY; };
    ArrowLayout : integer
        { XmARROWS_END; XmARROWS_BEGINNING; XmARROWS_SPLIT;
          XmARROWS_FLAT_END; XmARROWS_FLAT_BEGINNING; };
    ArrowOrientation : integer
        { XmARROWS_VERTICAL; XmARROWS_HORIZONTAL; };
    NotebookChildType : integer
        { XmPAGE; XmMAJOR_TAB; XmMINOR_TAB; XmSTATUS_AREA;
              XmPAGE_SCROLLER; };
    ScrolledWindowChildType : integer
        { XmHOR_SCROLLBAR; XmVERT_SCROLLBAR; XmCOMMAND_WINDOW;
              XmMESSAGE_WINDOW; XmSCROLL_HOR; XmSCROLL_VERT; XmNO_SCROLL;
          XmCLIP_WINDOW; XmGENERIC_CHILD; };
    PositionType : integer
        { XmPOSITION_INDEX; XmPOSITION_VALUE; };
    SpinBoxChildType : integer
        { XmSTRING; XmNUMERIC; };
    InputPolicy : integer
        { XmPER_SHELL; XmPER_WIDGET; XmINHERIT_POLICY; };
    ToggleSetValue : integer
        { XmUNSET; XmSET; XmINDETERMINATE; FALSE; TRUE; };
    ScaleShowValue : integer
        { XmNONE; XmNEAR_SLIDER; XmNEAR_BORDER; FALSE; TRUE; };
    FontType : integer
        { XmAS_IS; XmFONT_IS_FONT; XmFONT_IS_FONTSET; };
    LoadModel : integer
        { XmAS_IS; XmLOAD_IMMEDIATE; XmLOAD_DEFERRED; };
    LineType : integer
        { XmAS_IS; XmSINGLE_LINE; XmDOUBLE_LINE;
          XmSINGLE_DASHED_LINE; XmDOUBLE_DASHED_LINE;
          XmNO_LINE; };
    OffsetModel : integer
        { XmABSOLUTE; XmRELATIVE; };
    CompoundStringComponent : integer
        { XmSTRING_COMPONENT_UNKNOWN;      
          XmSTRING_COMPONENT_CHARSET;
          XmSTRING_COMPONENT_TEXT;      
          XmSTRING_COMPONENT_DIRECTION;
          XmSTRING_COMPONENT_SEPARATOR;   
          XmSTRING_COMPONENT_LOCALE_TEXT;
          XmSTRING_COMPONENT_LOCALE;      
          XmSTRING_COMPONENT_WIDECHAR_TEXT;
          XmSTRING_COMPONENT_LAYOUT_PUSH; 
          XmSTRING_COMPONENT_LAYOUT_POP;
          XmSTRING_COMPONENT_RENDITION_BEGIN; 
          XmSTRING_COMPONENT_RENDITION_END;
          XmSTRING_COMPONENT_TAB; };
    AutomaticSelection : integer
        { XmNO_AUTO_SELECT; XmAUTO_SELECT; FALSE; TRUE;};
    XmAlignment : integer
        { XmALIGNMENT_BEGINNING; XmALIGNMENT_CENTER;
          XmALIGNMENT_END; XmALIGNMENT_UNSPECIFIED;};
    XmFillStyle : integer
        { XmFILL_UNSPECIFIED; XmFILL_FLUSH; XmFILL_RAGGED;};
    XmDistribution : integer
        { XmDISTRIBUTE_TIGHT; XmDISTRIBUTE_SPREAD;};
    XmTreeCompressStyle : integer 
        { XmTreeCompressNone; XmTreeCompressLeaves; XmTreeCompressLeaves;};
    XmTreeLineStyle : integer 
        { LineSolid; LineOnOffDash; LineDoubleDash;};

! Define controls list of common aggregates of widgets

ControlList
    AllWidgetsAndGadgets
        {
        DtEditor;
        DtHelpDialog;
        DtHelpQuickDialog;
        DtMenuButton;
!        DtPrintSetupBox;
!        DtPrintSetupDialog;
        DtTerm;

        XmArrowButton;
        XmArrowButtonGadget;
        XmBulletinBoard;
        XmBulletinBoardDialog;
        XmButtonBox;
        XmCascadeButton;
        XmCascadeButtonGadget;
        XmCheckBox;
        XmColumn;
        XmColorSelector;
        XmComboBox;
        XmCommand;
        XmCommandDialog;
        XmContainer;
        XmDialogShell;
        XmDrawingArea;
        XmDrawnButton;
        XmErrorDialog;
        XmExt18List;
        XmFileSelectionBox;
        XmFileSelectionDialog;
        XmFontSelector;
        XmForm;
        XmFormDialog;
        XmFrame;
        XmIconBox;
        XmIconButton;
        XmIconGadget;
        XmInformationDialog;
        XmLabel;
        XmLabelGadget;
        XmList;
        XmMainWindow;
        XmMenuBar;
        XmMenuShell;
        XmMessageBox;
        XmMessageDialog;
        XmNotebook;
        XmOptionMenu;
        XmOutline;
        XmPaned;
        XmPanedWindow;
        XmPopupMenu;
        XmPromptDialog;
        XmPulldownMenu;
        XmPushButton;
        XmPushButtonGadget;
        XmQuestionDialog;
        XmRadioBox;
        XmRenderTable;
        XmRowColumn;
        XmScale;
        XmScrollBar;
        XmScrolledList;
        XmScrolledText;
        XmScrolledWindow;
        XmSelectionBox;
        XmSelectionDialog;
        XmSeparator;
        XmSeparatorGadget;
        XmSimpleSpinBox;
        XmSpinBox;
        XmTabBox;
	XmTabStack;
        XmTemplateDialog;
        XmText;
        XmTextField;
        XmToggleButton;
        XmToggleButtonGadget;
	XmTree;
        XmWarningDialog;
        XmWorkArea;
        XmWorkingDialog;
        user_defined;
        };

    AllWidgets
        {
        DtEditor;
        DtHelpDialog;
        DtHelpQuickDialog;
        DtMenuButton;
!        DtPrintSetupBox;
!        DtPrintSetupDialog;
        DtTerm;

        XmArrowButton;
        XmBulletinBoard;
        XmBulletinBoardDialog;
        XmButtonBox;
        XmCascadeButton;
        XmCheckBox;
        XmColumn;
        XmColorSelector;
        XmComboBox;
        XmCommand;
        XmCommandDialog;
        XmContainer;
        XmDialogShell;
        XmDrawingArea;
        XmDrawnButton;
        XmErrorDialog;
        XmExt18List;
        XmFileSelectionBox;
        XmFileSelectionDialog;
        XmFontSelector;
        XmForm;
        XmFormDialog;
        XmFrame;
        XmIconButton;
        XmIconBox;
        XmInformationDialog;
        XmLabel;
        XmList;
        XmMainWindow;
        XmMenuBar;
        XmMenuShell;
        XmMessageBox;
        XmMessageDialog;
        XmNotebook;
        XmOptionMenu;
        XmOutline;
        XmPaned;
        XmPanedWindow;
        XmPopupMenu;
        XmPromptDialog;
        XmPulldownMenu;
        XmPushButton;
        XmQuestionDialog;
        XmRadioBox;
        XmRowColumn;
        XmScale;
        XmScrollBar;
        XmScrolledList;
        XmScrolledText;
        XmScrolledWindow;
        XmSelectionBox;
        XmSelectionDialog;
        XmSeparator;
        XmSimpleSpinBox;
        XmSpinBox;
	XmTabBox;
        XmTabStack;
        XmTemplateDialog;
        XmText;
        XmTextField;
        XmToggleButton;
	XmTree;
        XmWarningDialog;
        XmWorkArea;
        XmWorkingDialog;
        user_defined;
        };

    MenuWidgetsAndGadgets
        {
        DtMenuButton;

        XmCascadeButton;
        XmCascadeButtonGadget;
        XmDrawnButton;
        XmLabel;
        XmLabelGadget;
        XmPushButton;
        XmPushButtonGadget;
        XmSeparator;
        XmSeparatorGadget;
        XmToggleButton;
        XmToggleButtonGadget;
        user_defined;
        };

    ManagerWidgets
        {
        DtEditor;
        DtHelpDialog;
        DtHelpQuickDialog;
!        DtPrintSetupBox;
!        DtPrintSetupDialog;

        XmBulletinBoard;
        XmButtonBox;
        XmCheckBox;
        XmColumn;
        XmComboBox;
        XmContainer;
        XmDrawingArea;
        XmForm;
        XmFrame;
        XmIconBox;
        XmNotebook;
        XmOutline;
        XmPaned;
        XmPanedWindow;
        XmScale;
        XmScrolledWindow;
        XmSimpleSpinBox;
        XmSpinBox;
        XmRadioBox;
        XmRowColumn;
        XmTabBox;
	XmTabStack;
	XmTree;
        XmWorkArea;
        XmMessageBox;
        XmSelectionBox;
        XmFileSelectionBox;
        
        };



! The root metaclasses and their resources. RectObj/Windowobj constitutes
! the Core class as documented in the toolkit manual.


Class
    Object : MetaClass
        {
        Resources
            {
            ! new resources
            MrmNcreateCallback;
            XmNdestroyCallback;
            ! inherited resources
            };
        };
Resource
    MrmNcreateCallback : Reason
        { InternalLiteral = MrmNcreateCallback; };
        ! This InternalLiteral is provided so the name can be changed if
        ! desired. The InternalLiteral must NOT be changed.
    XmNdestroyCallback : Reason
        { ResourceLiteral = XmNdestroyCallback; };
        ! This ResourceLiteral setting is included as an example
        ! only. ResourceLiterals are not provided for the rest of
        ! the Motif toolkit because the UIL names are identical
        ! to the toolkit literals (the name supplies the default
        ! literal for each UIL resource).

Class
    RectObj : MetaClass
        {
        SuperClass = Object;
        Resources
            {
            ! new resources
            XmNancestorSensitive;
            XmNborderWidth;
            XmNheight;
            XmNsensitive;
            XmNwidth;
            XmNx;
            XmNy;
            ! inherited resources
            };
        };
Resource
    XmNancestorSensitive : Argument
        { Type = boolean;
          Default = "True"; };
    XmNborderWidth : Argument
        { Type = horizontal_float;
          Default = "1"; };
    XmNheight : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNsensitive : Argument
        { Type = boolean;
          Default = "True"; };
    XmNwidth : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNx : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNy : Argument
        { Type = vertical_float;
          Default = "0"; };


Class
    WindowObj : MetaClass
    {
        SuperClass = RectObj;
        Resources
            {
            ! new resources
            XmNaccelerators;
            XmNbackground;
            XmNbackgroundPixmap;
            XmNborderColor;
            XmNborderPixmap;
            XmNcolormap;
            XmNdepth;
            XmNmappedWhenManaged;
            XmNscreen;
            XmNtranslations;
            XmNinitialResourcesPersistent;
            ! inherited resources
            };
        };
Resource
    XmNaccelerators : Argument
        { Type = translation_table;
          Default = "Null";};
    XmNbackground : Argument
        { Type = color;
          Default = "White"; };
    XmNbackgroundPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNborderColor : Argument
        { Type = color ;
          Default = "Black"; };
    XmNborderPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNcolormap : Argument
        { Type = identifier;
          Default = "XtCopyFromParent"; };
    XmNdepth : Argument
        { Type = identifier;
          Default = "XtCopyFromParent"; };
    XmNmappedWhenManaged : Argument
        { Type = boolean;
          Default = "True"; };
    XmNscreen : Argument
        { Type = identifier ;
          Default = "XtCopyScreen"; };
    XmNtranslations : Argument
        { Type = translation_table;
          Default = "Null"; };
    XmNinitialResourcesPersistent : Argument
        { Type = boolean;
          Default = "True"; };



! Immediate subclasses of WindowObj

Class
    XmPrimitive : MetaClass
        {
        SuperClass = WindowObj;
        Resources
            {
            ! new resources
            XmNbottomShadowColor;
            XmNbottomShadowPixmap;
            XmNconvertCallback;
            XmNforeground;
            XmNhelpCallback;
            XmNhighlightColor;
            XmNhighlightOnEnter;
            XmNhighlightPixmap;
            XmNhighlightThickness;
            XmNnavigationType;
            XmNpopupHandlerCallback;
            XmNshadowThickness;
            XmNtoolTipString;
            XmNtopShadowColor;
            XmNtopShadowPixmap;
            XmNtraversalOn;
            XmNunitType;
            XmNuserData;
            ! inherited resources
            };
        };
Resource
    XmNbottomShadowColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNbottomShadowPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNforeground : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNhelpCallback : Reason
        { };
    XmNhighlightColor : Argument
        { Type = color;
          Default = "Black"; };
    XmNhighlightOnEnter : Argument
        { Type = boolean;
          Default = "False"; };
    XmNhighlightPixmap : Argument
        { Type = pixmap;
          Default = "dynamic"; };
    XmNhighlightThickness : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNnavigationType : Argument
        { Type = integer;
          EnumerationSet = NavigationType;
          Default = "XmNONE"; };
    XmNshadowThickness : Argument
        { Type = horizontal_float;
          Default = "2"; };
    XmNtoolTipString : Argument
           { Type = compound_string;
              Default= "Null"; };
    XmNtopShadowColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNtopShadowPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNtraversalOn : Argument
        { Type = boolean;
          Default = "True"; };
    XmNunitType : Argument
        { Type = integer;
          EnumerationSet = UnitType;
          Default = "XmPIXELS"; };
    XmNuserData : Argument
        { Type = any;
          Default = "Null"; };


Class
    Composite : MetaClass
        {
        SuperClass = WindowObj;
        Resources
            {
            ! new resources
            XmNinsertPosition;
            ! inherited resources
            };
        };
Resource
    XmNinsertPosition : Constraint
        { Type = identifier ;
          Default = "Null"; };



! Immediate subclasses of RectObj

Class
    XmGadget : MetaClass
        {
        SuperClass = RectObj;
        Resources
            {
            ! new resources
            XmNbackground;
            XmNhelpCallback;
            XmNhighlightOnEnter;
            XmNhighlightThickness;
            XmNnavigationType;
            XmNshadowThickness;
            XmNtraversalOn;
            XmNunitType;
            XmNuserData;
            XmNtoolTipString;
            ! inherited resources
            };
        };



! Immediate sublclasses of XmGadget

Class
    XmArrowButtonGadget : Gadget
        {
        SuperClass = XmGadget;
        ConvenienceFunction = XmCreateArrowButtonGadget;
        WidgetClass = XmArrowButton;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNarmCallback;
            XmNarrowDirection;
            XmNbackground;
            XmNdisarmCallback;
            XmNmultiClick;

            ! inherited resources
            };
        };
Resource
    XmNactivateCallback : Reason
        { };
    XmNarmCallback : Reason
        { };
    XmNarrowDirection : Argument
        { Type = integer;
          EnumerationSet = ArrowDirection;
          Default = "XmDYNAMIC"; };
    XmNdisarmCallback : Reason
        { };

Class
    XmSeparatorGadget : Gadget
        {
        SuperClass = XmGadget;
        ConvenienceFunction = XmCreateSeparatorGadget;
        WidgetClass = XmSeparator;
        Resources
            {
            ! new resources
            XmNbackground;
            XmNmargin;
            XmNorientation;
            XmNseparatorType;
            ! inherited resources
            XmNtraversalOn { Default = "False"; };
            };
        };
Resource
    XmNmargin : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNorientation : Argument
        { Type = integer;
          EnumerationSet = Orientation;
          Default = "XmHORIZONTAL"; };
    XmNseparatorType : Argument
        { Type = integer;
          EnumerationSet = SeparatorType;
          Default = "XmSHADOW_ETCHED_IN"; };

Class
    XmIconGadget : Gadget
        {
        SuperClass = XmGadget;
        ConvenienceFunction = XmCreateIconGadget;
        WidgetClass = XmIconGadget;
        Resources
            {
            ! new resources
            XmNalignment;
            XmNbackground;
            XmNdetail;
            XmNdetailCount;
            XmNfontList;
            XmNlabelString;
            XmNlargeIconMask;
            XmNlargeIconPixmap;
            XmNmarginHeight;
            XmNmarginWidth;
            XmNrecomputeSize;
            XmNrenderTable;
            XmNsmallIconMask;
            XmNsmallIconPixmap;
            XmNspacing;
            XmNviewType;
            XmNvisualEmphasis;

            ! undocumented resources
            ! XmNdotCache;
            };
        Controls {
                XmRenderTable;
                };
    };

Resource
    XmNdetail : Argument
        { Type = string_table;
          Default = "NULL";
          Related = XmNdetailCount; };
    XmNdetailCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNlargeIconMask : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNlargeIconPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNsmallIconMask : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNsmallIconPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNviewType : Argument
        { Type = integer;
          EnumerationSet = IconGadgetViewType; };
    XmNvisualEmphasis : Argument
        { Type = integer;
          EnumerationSet = VisualEmphasis; };

Class
    XmLabelGadget : Gadget
        {
        SuperClass = XmGadget;
        ConvenienceFunction = XmCreateLabelGadget;
        WidgetClass = XmLabel;
        Resources
            {
            ! new resources
            XmNaccelerator;
            XmNacceleratorText;
            XmNalignment;
            XmNbackground;
            XmNfontList;
            XmNrenderTable;
            XmNlabelInsensitivePixmap;
            XmNlabelPixmap;
            XmNlabelString;
            XmNlabelType;
            XmNmarginBottom;
            XmNmarginHeight;
            XmNmarginLeft;
            XmNmarginRight;
            XmNmarginTop;
            XmNmarginWidth;
            XmNmnemonic;
            XmNmnemonicCharSet;
            XmNrecomputeSize;
            XmNstringDirection;
            ! inherited resources
            XmNshadowThickness {Default = "0"; };
            XmNtraversalOn { Default = "False"; };
            };
        Controls {
                XmRenderTable;
                    };
        };
Resource
    XmNaccelerator : Argument
        { Type = string;
          Default = "Null"; };
    XmNacceleratorText : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNalignment : Argument
        { Type = integer;
          EnumerationSet = Alignment;
          Default = "XmALIGNMENT_CENTER"; };
    XmNfontList : Argument
        { Type = font_table;
          Default = "Fixed"; };
    XmNrenderTable : Argument
        { Type = widget_ref;
          Default = "Fixed"; };
    XmNlabelInsensitivePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNlabelPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNlabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNlabelType : Argument
        { Type = integer;
          EnumerationSet = LabelType;
          Default = "XmSTRING"; };
    XmNmarginBottom : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNmarginHeight : Argument
        { Type = vertical_float;
          Default = "2"; };
    XmNmarginLeft : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNmarginRight : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNmarginTop : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNmarginWidth : Argument
        { Type = horizontal_float;
          Default = "2"; };
    XmNmnemonic : Argument
        { Type = keysym;
          Default = "NULL"; };
    XmNmnemonicCharSet : Argument
        { Type = string;
          Default = "dynamic"; };
    XmNrecomputeSize : Argument
        { Type = boolean;
          Default = "True"; };
    XmNstringDirection : Argument
        { Type = integer;
          EnumerationSet = StringDirection;
          Default = "XmSTRING_DIRECTION_L_TO_R"; };

Class
    XmTextField : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateTextField;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNcursorPosition;
            XmNdestinationCallback;
            XmNeditable;
            XmNfocusCallback;
            XmNgainPrimaryCallback;
            XmNlosePrimaryCallback;
            XmNlosingFocusCallback;
            XmNmarginHeight { Default = "3"; };
            XmNmarginWidth { Default = "3"; };
            XmNmaxLength;
            XmNmodifyVerifyCallback;
            XmNmodifyVerifyCallbackWcs;
            XmNmotionVerifyCallback;
            XmNvalue;
            XmNvalueWcs;
            XmNvalueChangedCallback;
            XmNverifyBell;
            ! Input resource set
            XmNpendingDelete;
            XmNselectionArray;
            XmNselectionArrayCount;
            XmNselectThreshold;
            ! Output resource set
            XmNblinkRate;
            XmNcolumns;
            XmNfontList;
            XmNrenderTable;
            XmNcursorPositionVisible;
            XmNresizeHeight;
            XmNresizeWidth;
            XmNrows;
            XmNwordWrap;
            !inherited resources
            XmNnavigationType { Default = "XmTAB_GROUP"; };
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };

Resource
    XmNdestinationCallback : Reason
        { };


! Immediate subclasses of XmLabelGadget

Class
    XmCascadeButtonGadget : Gadget
        {
        SuperClass = XmLabelGadget;
        ConvenienceFunction = XmCreateCascadeButtonGadget;
        WidgetClass = XmCascadeButton;
        ControlsMapToResource = XmNsubMenuId;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNcascadePixmap;
            XmNcascadingCallback;
            XmNmappingDelay;
            XmNsubMenuId;
            ! inherited resources
            XmNaccelerator { Exclude = True;};
            XmNacceleratorText { Exclude = True;};
            XmNtraversalOn { Default = "True"; };
            };
        Controls
            {
            XmPulldownMenu;
            };
        };
Resource
    XmNcascadingCallback : Reason
        { };
    XmNcascadePixmap : Argument
        { Type = pixmap;
          Default = "menu-cascade"; };
    XmNmappingDelay : Argument
        { Type = integer;
          Default = "100"; };
    XmNsubMenuId : Argument
        { Type = widget_ref;
          Default = "Null"; };

Class
    XmPushButtonGadget : Gadget
        {
        SuperClass = XmLabelGadget;
        ConvenienceFunction = XmCreatePushButtonGadget;
        WidgetClass = XmPushButton;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNarmCallback;
            XmNarmColor;
            XmNarmPixmap;
            XmNdefaultButtonShadowThickness;
            XmNdisarmCallback;
            XmNfillOnArm;
            XmNmultiClick;
            XmNshowAsDefault ;
            ! inherited resources
            };
        };
Resource
    XmNarmColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNarmPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNdefaultButtonShadowThickness: Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNfillOnArm : Argument
        { Type = boolean;
          Default = "True"; };
    XmNmultiClick : Argument
        { Type = integer;
          EnumerationSet = MultiClick;
          Default = "XmMULTICLICK_DISCARD"; };
    XmNshowAsDefault : Argument
        { Type = integer;
          Default = "0"; };

Class
    XmToggleButtonGadget : Gadget
        {
        SuperClass = XmLabelGadget;
        ConvenienceFunction = XmCreateToggleButtonGadget;
        WidgetClass = XmToggleButton;
        Resources
            {
            ! new resources
            XmNarmCallback;
            XmNdetailShadowThickness;
            XmNdisarmCallback;
            XmNfillOnSelect;
            XmNhighlightThickness { Default = "dynamic"; };
            XmNindeterminatePixmap;
            XmNindeterminateInsensitivePixmap;
            XmNindicatorOn;
            XmNindicatorSize;
            XmNindicatorType;
            XmNselectColor;
            XmNselectInsensitivePixmap;
            XmNselectPixmap;
            XmNset;
            XmNspacing;
            XmNtoggleMode;
            XmNunselectColor;
            XmNvalueChangedCallback;
            XmNvisibleWhenOff;
            ! inherited resources
            XmNtraversalOn { Default = "True"; };
            };
        };
Resource
    XmNdetailShadowThickness : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNfillOnSelect : Argument
        { Type = boolean;
          Default = "True"; };
    XmNindeterminatePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNindeterminateInsensitivePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNindicatorOn : Argument
        { Type = integer;
          EnumerationSet = ToggleIndicatorOn;
          Default = "XmINDICATOR_FILL"; };
    XmNindicatorType : Argument
        { Type = integer;
          EnumerationSet = IndicatorType;
          Default = "XmN_OF_MANY"; };
    XmNindicatorSize : Argument
        { Type = horizontal_float;
          Default = "XmINVALID_DIMENSION"; };
    XmNselectColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNselectInsensitivePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNselectPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNset : Argument
        { Type = integer;
          EnumerationSet = ToggleSetValue;
          Default = "False"; };
    XmNspacing : Argument
        { Type = horizontal_float;
          Default = "4"; };
    XmNtoggleMode : Argument
        { Type = integer;
          EnumerationSet = ToggleMode;  };
    XmNunselectColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNvalueChangedCallback : Reason
        { };
    XmNvisibleWhenOff : Argument
        { Type = boolean;
          Default = "True"; };



! Immediate subclasses of XmPrimitive

Class
    XmArrowButton : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateArrowButton;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNarmCallback;
            XmNarrowDirection;
            XmNdisarmCallback;
            XmNmultiClick;
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            };
        };

Class
    XmScrollBar : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateScrollBar;
        Resources
            {
            ! new resources
            XmNdecrementCallback;
            XmNdragCallback;
            XmNeditable;
            XmNincrement;
            XmNincrementCallback;
            XmNinitialDelay;
            XmNmaximum;
            XmNminimum;
            XmNorientation { Default = "XmVERTICAL"; };
            XmNpageDecrementCallback;
            XmNpageIncrement;
            XmNpageIncrementCallback;
            XmNprocessingDirection;
            XmNrepeatDelay;
            XmNshowArrows;
            XmNsliderVisual;
            XmNsliderMark;
            XmNsliderSize;
            XmNslidingMode;
            XmNsnapBackMultiple;
            XmNtoBottomCallback;
            XmNtoTopCallback;
            XmNtroughColor;
            XmNvalue;
            XmNvalueChangedCallback;
            ! inherited resources
            XmNnavigationType { Default = "XmSTICKY_TAB_GROUP"; };
            XmNtraversalOn { Default = "dynamic"; };
            };
        Controls {
            XmPopupMenu;
            };
        };
Resource
    XmNdecrementCallback : Reason
        { };
    XmNdragCallback : Reason
        { };
    XmNincrement : Argument
        { Type = integer;
          Default = "1"; };
    XmNincrementCallback : Reason
        { };
    XmNinitialDelay : Argument
        { Type = integer;
          Default = "250"; };
    XmNmaximum : Argument
        { Type = integer;
          Default = "0"; };
    XmNminimum : Argument
        { Type = integer;
          Default = "0"; };
    XmNpageDecrementCallback : Reason
        { };
    XmNpageIncrement : Argument
        { Type = integer;
          Default = "10"; };
    XmNpageIncrementCallback : Reason
        { };
    XmNprocessingDirection : Argument
        { Type = integer;
          EnumerationSet = ProcessingDirection;
          Default = "XmMAX_ON_BOTTOM"; };
    XmNrepeatDelay : Argument
        { Type = integer;
          Default = "50"; };
    XmNshowArrows : Argument
        { Type = integer;
          EnumerationSet = ShowArrows;
          Default = "XmEACH_SIDE"; };
    XmNsliderSize : Argument
        { Type = integer;
          Default = "10"; };
    XmNsliderVisual : Argument
        { Type = integer;
          EnumerationSet = SliderVisual;
          Default = "dynamic"; };
    XmNsliderMark : Argument
        { Type = integer;
          EnumerationSet = SliderMark;
          Default = "dynamic"; };
    XmNslidingMode : Argument
        { Type = integer;
          EnumerationSet = SlidingMode;
          Default = "XmSLIDER"; };
    XmNsnapBackMultiple : Argument
        { Type = integer; };
    XmNtoBottomCallback : Reason
        { };
    XmNtoTopCallback : Reason
        { };
    XmNtroughColor : Argument
        { Type = color;
          Default = "dynamic"; };
    XmNvalue : Argument
        { Type = any;
          Default = "Null"; };

Class
    XmSeparator : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateSeparator;
        Resources
            {
            ! new resources
            XmNmargin;
            XmNorientation;
            XmNseparatorType;
            ! inherited resources
            XmNtraversalOn { Default = "False"; };
            };
        Controls {
            XmPopupMenu;
            };
        };

Class
    XmLabel : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateLabel;
        Resources
            {
            ! new resources
            XmNaccelerator;
            XmNacceleratorText;
            XmNalignment;
            XmNfontList;
            XmNrenderTable;
            XmNlabelInsensitivePixmap;
            XmNlabelPixmap;
            XmNlabelString;
            XmNlabelType;
            XmNmarginBottom;
            XmNmarginHeight;
            XmNmarginLeft;
            XmNmarginRight;
            XmNmarginTop;
            XmNmarginWidth;
            XmNmnemonic;
            XmNmnemonicCharSet;
            XmNrecomputeSize;
            XmNstringDirection;
            ! inherited resources
            XmNshadowThickness { Default = "0"; };
            XmNtraversalOn { Default = "False"; };
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };


! Immediate subclass of XmPrimitive. The ScrolledList variant is treated
! as a subclass

Class
    XmList : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateList;
        Resources
            {
            ! new resources
            XmNautomaticSelection;
            XmNbrowseSelectionCallback;
            XmNdefaultActionCallback;
            XmNdestinationCallback;
            XmNdoubleClickInterval;
            XmNextendedSelectionCallback;
            XmNfontList;
            XmNrenderTable;
            XmNitemCount;
            XmNitems;
            XmNlistMarginHeight;
            XmNlistMarginWidth;
            XmNlistSizePolicy;
            XmNlistSpacing;
            XmNmatchBehavior;
            XmNmultipleSelectionCallback;
            XmNprimaryOwnership;
            XmNselectedItemCount;
            XmNselectedItems;
            XmNselectedPositions;
            XmNselectedPositionCount;
            XmNselectionMode;
            XmNselectionPolicy;
            XmNsingleSelectionCallback;
            XmNstringDirection;
            XmNtopItemPosition;
            XmNvisibleItemCount;
            ! inherited resources
            XmNnavigationType { Default = "XmTAB_GROUP"; };
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };
Resource
    XmNautomaticSelection : Argument
        { Type = integer;
          EnumerationSet = AutomaticSelection;
          Default = "FALSE"; };
    XmNbrowseSelectionCallback : Reason
        { };
    XmNdefaultActionCallback : Reason
        { };
    XmNdoubleClickInterval : Argument
        { Type = integer;
          Default = "250"; };
    XmNextendedSelectionCallback : Reason
        { };
    XmNitemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNitems : Argument
        { Type = string_table;
          Default = "Null";
              Related = XmNitemCount; };
    XmNlistMarginHeight : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNlistMarginWidth : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNlistSpacing : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNmatchBehavior : Argument
        { Type = integer;
          EnumerationSet = MatchBehavior;
          Default = "XmQUICK_NAVIGATE"; };
    XmNmultipleSelectionCallback : Reason
        { };
    XmNprimaryOwnership : Argument
        { Type = integer;
          EnumerationSet = PrimaryOwnership;
          Default = "XmOWN_NEVER"; };
    XmNselectedItemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNselectedItems : Argument
        { Type = string_table;
          Default = "Null";
              Related = XmNselectedItemCount; };
    XmNselectionMode : Argument
        { Type = integer;
          EnumerationSet = SelectionMode;
          Default = "XmNORMAL_MODE"; };
    XmNselectionPolicy : Argument
        { Type = integer;
          EnumerationSet = SelectionPolicy;
          Default = "XmBROWSE_SELECT"; };
    XmNselectedPositions : Argument
        { Type = integer_table;
          Default = "Null";
          Related = XmNselectedPositionCount; };
    XmNselectedPositionCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNsingleSelectionCallback : Reason
        { };
    XmNtopItemPosition : Argument
        { Type = integer;
          Default = "0"; };
    XmNvisibleItemCount : Argument
        { Type = integer;
          Default = "1"; };

Class
    XmScrolledList : Widget
        {
        SuperClass = XmList;
        ParentClass = XmScrolledWindow;
        ConvenienceFunction = XmCreateScrolledList;
        Resources
            {
            ! new resources
            XmNautoDragModel;
            XmNhorizontalScrollBar;
            XmNlistSizePolicy;
            XmNscrollBarDisplayPolicy;
            XmNscrollBarPlacement;
            XmNscrolledWindowMarginHeight;
            XmNscrolledWindowMarginWidth;
            XmNspacing;
            XmNtraverseObscuredCallback;
            XmNverticalScrollBar;
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };
Resource
    XmNautoDragModel : Argument
        { Type = integer;
          EnumerationSet = AutoDragModel;
          Default = "XmAUTO_DRAG_ENABLED"; };
    XmNhorizontalScrollBar : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNlistSizePolicy : Argument
        { Type = integer ;
          EnumerationSet = ListSizePolicy;
          Default = "XmVARIABLE"; };
    XmNscrollBarDisplayPolicy : Argument
        { Type = integer ;
          EnumerationSet = ScrollBarDisplayPolicy;
          Default = "XmAS_NEEDED"; };
    XmNscrollBarPlacement : Argument
        { Type = integer ;
          EnumerationSet = ScrollBarPlacement;
          Default = "XmBOTTOM_RIGHT"; };
    XmNscrolledWindowMarginHeight : Argument
        { Type = integer ;
          Default = "0"; };
    XmNscrolledWindowMarginWidth : Argument
        { Type = integer ;
          Default = "0"; };
    XmNverticalScrollBar : Argument
        { Type = widget_ref;
          Default = "Null"; };


! Immediate subclass of XmPrimitive. The Scrolled variant is treated
! as a subclass

Class
    XmText : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = XmCreateText;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNautoShowCursorPosition;
            XmNcursorPosition;
            XmNdestinationCallback;
            XmNeditable;
            XmNeditMode;
            XmNfocusCallback;
            XmNgainPrimaryCallback;
            XmNlosePrimaryCallback;
            XmNlosingFocusCallback;
            XmNmarginHeight { Default = "3"; };
            XmNmarginWidth { Default = "3"; };
            XmNmaxLength;
            XmNmodifyVerifyCallback;
            XmNmodifyVerifyCallbackWcs;
            XmNmotionVerifyCallback;
            XmNsource;
            XmNtopCharacter;
            XmNvalue;
            XmNvalueWcs;
            XmNvalueChangedCallback;
            XmNverifyBell;
            ! Input resource set
            XmNpendingDelete;
            XmNselectionArray;
            XmNselectionArrayCount;
            XmNselectThreshold;
            ! Output resource set
            XmNblinkRate;
            XmNcolumns;
            XmNcursorPositionVisible;
            XmNfontList;
            XmNrenderTable;
            XmNresizeHeight;
            XmNresizeWidth;
            XmNrows;
            XmNwordWrap;
            ! inherited resources
            XmNnavigationType { Default = "XmTAB_GROUP"; };
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };
Resource
    XmNautoShowCursorPosition : Argument
        { Type = boolean;
          Default = "True"; };
    XmNcursorPosition : Argument
        { Type = integer;
          Default = "0"; };
    XmNeditable : Argument
        { Type = boolean;
          Default = "True"; };
    XmNeditMode : Argument
        { Type = integer;
          EnumerationSet = EditMode;
          Default = "XmSINGLE_LINE_EDIT"; };
    XmNfocusCallback : Reason
        { };
    XmNgainPrimaryCallback : Reason
        { };
    XmNlosePrimaryCallback : Reason
        { };
    XmNlosingFocusCallback : Reason
        { };
    XmNmaxLength : Argument
        { Type = integer;
          Default = "MAXINT"; };
    XmNmodifyVerifyCallback : Reason
        { };
    XmNmodifyVerifyCallbackWcs : Reason
        { };
    XmNmotionVerifyCallback : Reason
        { };
    XmNpendingDelete : Argument
        { Type = boolean;
          Default = "True"; };
    XmNsource : Argument
        { Type = any;
          Default = "Default source"; };
    XmNselectionArray : Argument
        { Type = integer_table;
          Default = "{XmSELECT_POSITION, XmSELECT_WORD, XmSELECT_LINE, XmSELECT_ALL};" ;
          Related = XmNselectionArrayCount; };
    XmNselectionArrayCount : Argument
        { Type = integer;
          Default = "4"; };
    XmNselectThreshold : Argument
        { Type = integer;
          Default = "5"; };
    XmNblinkRate : Argument
        { Type = integer;
          Default = "500"; };
    XmNtopCharacter : Argument
        { Type = integer;
          Default = "0"; };
    XmNverifyBell : Argument
        { Type = boolean;
          Default = "True"; };
    XmNcolumns : Argument
        { Type = integer;
          Default = "20"; };
    XmNcursorPositionVisible : Argument
        { Type = boolean;
          Default = "True"; };
    XmNresizeHeight : Argument
        { Type = boolean;
          Default = "False"; };
    XmNresizeWidth : Argument
        { Type = boolean;
          Default = "False"; };
    XmNrows : Argument
        { Type = integer;
          Default = "1"; };
    XmNvalueWcs : Argument
        { Type = wide_character;
          Default = "Null"; };
    XmNwordWrap : Argument
        { Type = boolean;
          Default = "False"; };

Class
    XmScrolledText : Widget
        {
        SuperClass = XmText;
        ParentClass = XmScrolledWindow;
        ConvenienceFunction = XmCreateScrolledText;
        Resources
            {
            ! new resources
            XmNautoDragModel;
            XmNhorizontalScrollBar;
            XmNscrollBarDisplayPolicy;
            XmNscrollBarPlacement;
            XmNscrollHorizontal;
            XmNscrollLeftSide;
            XmNscrollTopSide;
            XmNscrollVertical;
            XmNscrolledWindowMarginHeight;
            XmNscrolledWindowMarginWidth;
            XmNspacing;
            XmNtraverseObscuredCallback;
            XmNverticalScrollBar;
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };
Resource
    XmNscrollHorizontal : Argument
        { Type = boolean;
          Default = "True"; };
    XmNscrollLeftSide : Argument
        { Type = boolean;
          Default = "True"; };
    XmNscrollTopSide : Argument
        { Type = boolean;
          Default = "False"; };
    XmNscrollVertical : Argument
        { Type = boolean;
          Default = "False"; };


! Immediate subclasses of XmLabel

Class
    XmCascadeButton : Widget
        {
        SuperClass = XmLabel;
        ConvenienceFunction = XmCreateCascadeButton;
        ControlsMapToResource = XmNsubMenuId;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNcascadePixmap;
            XmNcascadingCallback;
            XmNmappingDelay;
            XmNsubMenuId;
            ! inherited resources
            XmNaccelerator { Exclude = True;};
            XmNacceleratorText { Exclude = True;};
            XmNtraversalOn { Default = "True"; };
            };
        Controls
            {
            XmPulldownMenu;
            XmPopupMenu;
            };
        };

Class
    XmDrawnButton : Widget
        {
        SuperClass = XmLabel;
        ConvenienceFunction = XmCreateDrawnButton;
        Resources
            {
            ! new resources
            XmNarmCallback;
            XmNactivateCallback;
            XmNdisarmCallback;
            XmNexposeCallback;
            XmNmultiClick;
            XmNresizeCallback;
            XmNpushButtonEnabled;
            XmNshadowType { Default = "XmSHADOW_ETCHED_IN"; };
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            };
        };
Resource
    XmNpushButtonEnabled : Argument
        { Type = boolean;
          Default = "False"; };



! This is a virtual class needed for accessing the automatically created
! TearOffControl for TearOff Menus.  It cannot be instantiated directly.
Class
    XmTearOffButton : Widget
        {
        SuperClass = XmPushButton;
        ConvenienceFunction = "";
        Resources
            {
            ! new resources
            XmNseparatorType
                { Default = "XmSHADOW_ETCHED_OUT_DASH"; };
            XmNmargin;
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            };
        };

Class
    XmPushButton : Widget
        {
        SuperClass = XmLabel;
        ConvenienceFunction = XmCreatePushButton;
        Resources
            {
            ! new resources
            XmNactivateCallback;
            XmNarmCallback;
            XmNarmColor;
            XmNarmPixmap;
            XmNdefaultButtonShadowThickness;
            XmNdisarmCallback;
            XmNfillOnArm;
            XmNmultiClick;
            XmNshowAsDefault;
            ! inherited resources
            };
        Controls {
            XmPopupMenu;
            };
        };

Class
    XmToggleButton : Widget
        {
        SuperClass = XmLabel;
        ConvenienceFunction = XmCreateToggleButton;
        Resources
            {
            ! new resources
            XmNarmCallback;
            XmNdetailShadowThickness;
            XmNdisarmCallback;
            XmNfillOnSelect;
            XmNhighlightThickness { Default = "dynamic"; };
            XmNindeterminateInsensitivePixmap;
            XmNindeterminatePixmap;
            XmNindicatorOn;
            XmNindicatorSize;
            XmNindicatorType;
            XmNselectColor;
            XmNselectInsensitivePixmap;
            XmNselectPixmap;
            XmNset;
            XmNspacing;
            XmNtoggleMode;
            XmNunselectColor;
            XmNvalueChangedCallback;
            XmNvisibleWhenOff;
            ! inherited resources
            XmNtraversalOn { Default = "True"; };
            };
        Controls {
            XmPopupMenu;
            };
        };


! Immediate subclasses of Composite.

Class
    "Constraint" : MetaClass    ! Also a keyword, so quote Constraint
        {
        SuperClass = Composite;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        };

Class
    Shell : MetaClass
    {
    SuperClass = Composite;
    Resources
        {
        ! new resources
        XmNallowShellResize;
        XmNcreatePopupChildProc;
        XmNgeometry;
        XmNoverrideRedirect;
        XmNpopdownCallback;
        XmNpopupCallback;
        XmNsaveUnder;
        XmNvisual;
        ! inherited resources
        };
    };

Resource
    XmNallowShellResize : Argument
        { Type = boolean;
          Default = "False"; };
    XmNcreatePopupChildProc : Argument
        { Type = any;
          Default = "NULL"; };
    XmNgeometry : Argument
        { Type = string;
          Default = "NULL"; };
    XmNoverrideRedirect : Argument
          { Type = boolean;
          Default = "False"; };
    XmNpopdownCallback : Reason
          { };
    XmNpopupCallback : Reason
        { };
    XmNsaveUnder : Argument
          { Type = boolean;
          Default = "False"; };
    XmNvisual : Argument
          { Type = any ;
          Default = "CopyFromParent"; };


! Immediate subclasses of Constraint

Class
    XmManager : MetaClass
        {
        SuperClass = "Constraint";
        Resources
            {
            ! new resources
            XmNbottomShadowColor;
            XmNbottomShadowPixmap;
            XmNforeground;
            XmNhelpCallback;
            XmNhighlightColor;
            XmNhighlightPixmap;
            XmNinitialFocus;
            XmNlayoutDirection;
            XmNnavigationType { Default = "XmTAB_GROUP"; };
            XmNpopupHandlerCallback;
            XmNshadowThickness { Default = "0"; };
            XmNstringDirection;
            XmNtopShadowColor;
            XmNtopShadowPixmap;
            XmNtraversalOn;
            XmNunitType;
            XmNuserData;
            ! inherited resources
            };
        };

Resource
    XmNinitialFocus : Argument
        { Type = widget_ref;
          Default = "NULL"; };
    XmNpopupHandlerCallback : Reason
        { };
    XmNtraversalCallback : Reason
        { };
    XmNtraverseObscuredCallback : Reason
        { };


! Immediate subclasses of Shell

Class
    OverrideShell : MetaClass
    {
    SuperClass = Shell;
    Resources
        {
        ! new resources
        ! inherited resources
        XmNoverrideRedirect { Default = "True"; };
        XmNsaveUnder { Default = "True"; };
        };
    };

Class
    WMShell : MetaClass
    {
    SuperClass = Shell;
    Resources
        {
        ! new resources
        XmNbaseHeight;
        XmNbaseWidth;
        XmNheightInc;
        XmNiconMask;
        XmNiconPixmap;
        XmNiconWindow;
        XmNiconX;
        XmNiconY;
        XmNinitialState;
        XmNinput;
        XmNmaxAspectX;
        XmNmaxAspectY;
        XmNmaxHeight;
        XmNmaxWidth;
        XmNminAspectX;
        XmNminAspectY;
        XmNminHeight;
        XmNminWidth;
        XmNtitle;
        XmNtitleEncoding;
        XmNtransient;
        XmNwaitForWm;
        XmNwidthInc;
        XmNwindowGroup;
        XmNwinGravity;
        XmNwmTimeout;
        };
    };

Resource
    XmNbaseHeight : Argument
        { Type = vertical_float;
          Default = "dynamic"; };
    XmNbaseWidth : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNheightInc : Argument
        { Type = vertical_float;
          Default = "dynamic"; };
    XmNiconMask : Argument
        { Type = pixmap;
          Default = "NULL"; };
    XmNiconPixmap : Argument
        { Type = pixmap;
          Default = "NULL"; };
    XmNiconWindow : Argument
        { Type = any;
          Default = "NULL"; };
    XmNiconX : Argument
        { Type = horizontal_float;
          Default = "-1"; };
    XmNiconY : Argument
        { Type = vertical_float;
          Default = "-1"; };
    XmNinitialState : Argument
        { Type = integer;
          EnumerationSet = InitialState;
          Default = "NormalState"; };
    XmNinput : Argument
        { Type = boolean;
          Default = "False"; };
    XmNmaxAspectX : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNmaxAspectY : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNmaxHeight : Argument
        { Type = vertical_float;
          Default = "dynamic"; };
    XmNmaxWidth : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNminAspectX : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNminAspectY : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNminHeight : Argument
        { Type = vertical_float;
          Default = "dynamic"; };
    XmNminWidth : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNtitle : Argument
        { Type = string;
          Default = "dynamic"; };
    XmNtitleEncoding : Argument
        { Type = any;
          Default = "dynamic"; };
    XmNtransient : Argument
        { Type = boolean;
          Default = "False"; };
    XmNwaitForWm : Argument
        { Type = boolean;
          Default = "True"; };
    XmNwidthInc : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNwindowGroup : Argument
        { Type = any;
          Default = "dynamic"; };
    XmNwinGravity : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNwmTimeout : Argument
        { Type = integer;
          Default = "5000"; };


! Immediate subclasses of WMShell
Class
    VendorShell : MetaClass
        {
        SuperClass = WMShell;
        Resources
            {
            ! new resources
            XmNaudibleWarning;
            XmNbuttonFontList;
            XmNlabelFontList;
            XmNtextFontList;
            XmNbuttonRenderTable;
            XmNlabelRenderTable;
            XmNtextRenderTable;
            XmNdarkThreshold;
            XmNdefaultFontList;
            XmNdeleteResponse;
            XmNfocusMovedCallback;
            XmNforegroundThreshold;
            XmNinputMethod;
            XmNinputPolicy;
            XmNkeyboardFocusPolicy;
            XmNlightThreshold;
            XmNmwmDecorations;
            XmNmwmFunctions;
            XmNmwmInputMode;
            XmNmwmMenu;
            XmNpreeditType;
            XmNrealizeCallback;
            XmNshellUnitType;
            XmNtoolTipEnable;
            XmNtoolTipPostDuration;
            XmNtoolTipPostDelay;
            ! This is really a Shell resource
            XmNuseAsyncGeometry;
            ! inherited resources
            };
        Controls {
                XmRenderTable;
                    };
        };

Resource
    XmNtoolTipEnable : Argument
        { Type = boolean;
          Default = "False"; };
    XmNtoolTipPostDuration : Argument
        { Type = integer;
          Default = "1000"; };
    XmNtoolTipPostDelay : Argument
        { Type = integer;
          Default = "1000"; };
    XmNaudibleWarning : Argument
        { Type = integer;
          EnumerationSet = AudibleWarning;
          Default = "XmBELL"; };
    XmNdarkThreshold : Argument
        { Type = integer; };
    XmNdefaultFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    XmNdeleteResponse : Argument
        { Type = integer;
          EnumerationSet = DeleteResponse;
          Default = "XmDESTROY"; };
    XmNfocusMovedCallback : Reason
        { };
    XmNforegroundThreshold : Argument
        { Type = integer; };
    XmNinputMethod : Argument
        { Type = string;
          Default = "Null"; };
    XmNinputPolicy : Argument
        { Type = integer;
          EnumerationSet = InputPolicy; };
    XmNkeyboardFocusPolicy : Argument
        { Type = integer;
          EnumerationSet = KeyboardFocusPolicy;
          Default = "XmEXPLICIT"; };
    XmNlightThreshold : Argument
        { Type = integer; };
    XmNmwmDecorations : Argument
        { Type = integer;
          EnumerationSet = MwmDecorations;
          Default = "-1"; };
    XmNmwmFunctions : Argument
        { Type = integer;
          EnumerationSet = MwmFunctions;
          Default = "-1"; };
    XmNmwmInputMode : Argument
        { Type = integer;
          EnumerationSet = MwmInputMode;
          Default = "-1"; };
    XmNmwmMenu : Argument
        { Type = string;
          Default = "NULL"; };
    XmNrealizeCallback : Reason
        { };
    XmNpreeditType : Argument
        { Type = string;
          Default = "OverTheSpot,OffTheSpot,Root"; };
    XmNshellUnitType : Argument
        { Type = integer;
          EnumerationSet = UnitType;
          Default = "XmPIXELS"; };
    XmNuseAsyncGeometry : Argument
        { Type = boolean;
          Default = "False"; };


! Immediate subclasses of VendorShell

Class
    TopLevelShell : MetaClass
        {
        SuperClass = VendorShell;
        Resources
            {
            ! new resources
            XmNiconic;
            XmNiconName;
            XmNiconNameEncoding;
            ! inherited resources
        };
    };

Resource
    XmNiconic : Argument
        { Type = boolean;
          Default = "False"; };
    XmNiconName : Argument
        { Type = string;
          Default = "NULL"; };
    XmNiconNameEncoding : Argument
        { Type = any;
          Default = "dynamic"; };

Class
    TransientShell : MetaClass
        {
        SuperClass = VendorShell;
        Resources
            {
            ! new resources
            XmNtransientFor;
            ! inherited resources
        };
    };

Resource
    XmNtransientFor : Argument
        { Type = widget_ref;
          Default = "NULL"; };


! Immediate subclasses of TransientShell

Class
    XmDialogShell : Widget
        {
        SuperClass = TransientShell;
        ConvenienceFunction = XmCreateDialogShell;
        Resources
            {
            ! new resources
            ! inherited resources
            XmNdeleteResponse { Default = "XmUNMAP"; };
            };
        Controls
            {
            ManagerWidgets;
            };
    };


! Immediate subclasses of OverrideShell

Class
    XmMenuShell : Widget
        {
        SuperClass = OverrideShell;
        ConvenienceFunction = XmCreateMenuShell;
        Resources
            {
            ! new resources
            XmNbuttonFontList;
            XmNdefaultFontList;
            XmNlabelFontList;
            XmNbuttonRenderTable;
            XmNlabelRenderTable;
            XmNtextRenderTable;
            ! inherited resources
            XmNallowShellResize { Default = "True"; };
        };
        Controls
            {
            XmRowColumn;
            XmRenderTable;
            };
    };


! Immediate subclasses of XmManager

Class
    XmDrawingArea : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateDrawingArea;
        Resources
            {
            ! new resources
            XmNconvertCallback;
            XmNdestinationCallback;
            XmNexposeCallback;
            XmNinputCallback;
            XmNmarginHeight { Default = "10"; };
            XmNmarginWidth { Default = "10"; };
            XmNresizeCallback;
            XmNresizePolicy;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Resource
    XmNconvertCallback : Reason
        { };
    XmNexposeCallback : Reason
        { };
    XmNinputCallback : Reason
        { };
    XmNresizeCallback : Reason
        { };
    XmNresizePolicy : Argument
        { Type = integer;
          EnumerationSet = ResizePolicy;
          Default = "XmRESIZE_ANY"; };

Class
    XmFrame : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateFrame;
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Resources
            {
            ! new resources
            XmNmarginHeight { Default = "0"; };
            XmNmarginWidth  { Default = "0"; };
            XmNshadowType;
            ! constraint resources
            XmNchildHorizontalAlignment;
            XmNchildHorizontalSpacing;
            XmNchildType;
            XmNframeChildType;
            XmNchildVerticalAlignment;
            ! inherited resources
            XmNshadowThickness { Default = "dynamic"; };
            };
        };
Resource
    XmNshadowType : Argument
        { Type = integer;
          EnumerationSet = ShadowType;
          Default = "XmSHADOW_ETCHED_IN"; };
! constraints
    XmNchildHorizontalAlignment : Constraint
        { Type = integer;
          EnumerationSet = Alignment;
          Default = "XmALIGNMENT_BEGINNING"; };
    XmNchildHorizontalSpacing : Constraint
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNchildType : Constraint
        { Type = integer;
          EnumerationSet = FrameChildType;
          Default = "XmFRAME_WORKAREA_CHILD"; };
    XmNframeChildType : Constraint
        { Type = integer;
          EnumerationSet = FrameChildType;
          Default = "XmFRAME_WORKAREA_CHILD"; };
    XmNchildVerticalAlignment : Constraint
        { Type = integer;
          EnumerationSet = ChildVerticalAlignment;
          Default = "XmALIGNMENT_CENTER"; };

Class
    XmPanedWindow : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreatePanedWindow;
        Resources
            {
            ! new resources
            XmNmarginHeight { Default = "3"; };
            XmNmarginWidth { Default = "3"; };
            XmNorientation;
            XmNrefigureMode;
            XmNsashHeight;
            XmNsashIndent;
            XmNsashShadowThickness;
            XmNsashWidth;
            XmNseparatorOn;
            XmNspacing { Default = "8"; };
            ! constraint resources
            XmNpaneMinimum;
            XmNpaneMaximum;
            XmNpositionIndex;
            XmNskipAdjust;
            XmNallowResize;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Resource
    XmNpositionIndex : Argument
        { Type = integer;
          EnumerationSet = PositionIndex;
          Default = "XmLAST_POSITION"; };
    XmNrefigureMode : Argument
        { Type = boolean;
          Default = "True"; };
    XmNsashHeight : Argument
        { Type = horizontal_float;
          Default = "10"; };
    XmNsashIndent : Argument
        { Type = horizontal_float;
          Default = "-10"; };
    XmNsashShadowThickness : Argument
        { Type = horizontal_float;
          Default = "2"; };
    XmNsashWidth : Argument
        { Type = horizontal_float;
          Default = "10"; };
    XmNseparatorOn : Argument
        { Type = boolean;
          Default = "True"; };
    XmNpaneMinimum : Constraint
        { Type = horizontal_float;
          Default = "1"; };
    XmNpaneMaximum : Constraint
        { Type = horizontal_float;
          Default = "1000"; };
    XmNskipAdjust : Constraint
        { Type = boolean;
          Default = "False"; };
    XmNallowResize : Constraint
        { Type = boolean;
          Default = "False"; };

Class
    XmScale : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateScale;
        Resources
            {
            ! new resources
            XmNconvertCallback;
            XmNdecimalPoints;
            XmNdragCallback;
            XmNeditable;
            XmNfontList { Default = "Fixed"; };
            XmNrenderTable;
            XmNhighlightOnEnter { Default = "False"; };
            XmNhighlightThickness { Default = "0"; };
            XmNmaximum { Default = "100"; };
            XmNminimum { Default = "0"; };
            XmNorientation { Default = "XmVERTICAL"; };
            XmNprocessingDirection {Default = "XmMAX_ON_TOP"; };
            XmNscaleHeight;
            XmNscaleMultiple;
            XmNscaleWidth;
            XmNshowArrows;
            XmNshowValue;
            XmNsliderVisual;
            XmNslidingMode;
            XmNtitleString;
            XmNvalue { Default = "0"; };
            XmNvalueChangedCallback;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_Title;
            };
        };

Resource

!    XmNdecimalPoints: Argument
!        { Type = integer;
!          Default = "0"; };
    XmNdecimalPoints: Constraint
        { Type = integer;
          Default = "0"; };
    XmNscaleHeight: Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNscaleMultiple: Argument
        { Type = integer;
          Default = "1"; };
    XmNscaleWidth: Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNshowValue: Argument
        { Type = integer;
          EnumerationSet = ScaleShowValue;
          Default = "XmNONE"; };
    XmNtitleString: Argument
        { Type = compound_string;
          Default = "Null"; };

Class
    XmScrolledWindow : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateScrolledWindow;
        Resources
            {
            ! new resources
            XmNautoDragModel;
            XmNclipWindow { Exclude = True; };
            XmNhorizontalScrollBar { Default = "Null"; };
            XmNscrollBarDisplayPolicy { Default = "XmSTATIC"; };
            XmNscrollBarPlacement { Default = "XmBOTTOM_RIGHT"; };
            XmNscrolledWindowMarginHeight;
            XmNscrolledWindowMarginWidth;
            XmNscrollingPolicy;
            XmNspacing { Default = "4"; };
            XmNtraverseObscuredCallback;
            XmNverticalScrollBar { Default = "Null"; };
            XmNvisualPolicy;
            XmNworkWindow;
            ! inherited resources
            ! constraint resources
            XmNscrolledWindowChildType;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_VertScrollBar;
            Xm_HorScrollBar;
            };
        };
Child
    Xm_VertScrollBar : XmScrollBar;
    Xm_HorScrollBar : XmScrollBar;

Resource
    XmNclipWindow : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNscrollingPolicy : Argument
        { Type = integer;
          EnumerationSet = ScrollingPolicy;
          Default = "XmAPPLICATION_DEFINED"; };
    XmNvisualPolicy : Argument
        { Type = integer;
          EnumerationSet = VisualPolicy;
          Default = "XmVARIABLE"; };
    XmNworkWindow : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNscrolledWindowChildType : Constraint
        { Type = integer;
          EnumerationSet = ScrolledWindowChildType; };

Class
    XmComboBox : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateComboBox;
        Resources
            {
            ! new resources
            XmNarrowSize;
            XmNarrowSpacing;
            XmNcolumns { Default = "XmUNSPECIFIED_COUNT"; };
            XmNcomboBoxType;
            XmNfontList;
            XmNhighlightThickness;
            XmNitems { Default = "XmUNSPECIFIED"; };
            XmNitemCount { Default = "XmUNSPECIFIED_COUNT"; };
            XmNmarginHeight;
            XmNmarginWidth;
            XmNmatchBehavior;
            XmNlist;
            XmNpositionMode;
            XmNrenderTable;
            XmNselectionCallback;
            XmNselectedItem;
            XmNselectedPosition;
            XmNtextField;
            XmNvisibleItemCount { Default = "XmUNSPECIFIED_COUNT";};

            ! inherited resources
            XmNnavigationType { Default = "XmSTICKY_TAB_GROUP"; };
            XmNshadowThickness { Default = "dynamic"; };
            };
!
! Do the XmNtextField and XmNlist need to be defined in the Children/Controls
!
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_List;
            Xm_Text;
            Xm_TextField;
            };
        };

Child
    Xm_List : XmList;
    Xm_TextField : XmTextField;

Resource
    XmNarrowSize : Argument
        { Type = horizontal_float;
          Default = XmINVALID_DIMENSION; };
    XmNarrowSpacing : Argument
        { Type = horizontal_float;
          Default = XmINVALID_DIMENSION; };
    XmNselectionCallback : Reason
        { };
    XmNselectedItem : Argument
        { Type = compound_string;
          Default = "NULL"; };
    XmNselectedPosition : Argument
        { Type = integer;
          Default = "0"; };
    XmNcomboBoxType : Argument
        { Type = integer;
          EnumerationSet = ComboBoxType;
          Default = "XmDROP_DOWN_LIST"; };
    XmNlist : Argument
        { Type = widget_ref;
          Default = "NULL"; };
    XmNtextField : Argument
        { Type = widget_ref;
          Default = "NULL"; };
    XmNpositionMode : Argument
        { Type = integer;
          EnumerationSet = PositionMode;
          Default = "XmZERO_BASED"; };

Class
    XmContainer : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateContainer;
        Resources
            {
            ! new resources
            XmNautomaticSelection { Default = "XmAUTO_SELECT"; };
            XmNcollapsedStatePixmap;
            XmNconvertCallback;
            XmNdefaultActionCallback;
            XmNdestinationCallback;
            XmNdetailColumnHeading;
            XmNdetailColumnHeadingCount;
            XmNdetailOrder;
            XmNdetailOrderCount;
            XmNdetailTabList;
            XmNentryViewType;
            XmNexpandedStatePixmap;
            XmNlargeCellHeight;
            XmNlargeCellWidth;
            XmNlayoutType;
            XmNmarginHeight;
            XmNmarginWidth;
            XmNoutlineButtonPolicy;
            XmNoutlineChangedCallback;
            XmNoutlineColumnWidth;
            XmNoutlineIndentation;
            XmNoutlineLineStyle;
            XmNprimaryOwnership;
            XmNrenderTable;
            XmNresizeHeight;
            XmNresizeWidth;
            XmNselectColor;
            ! Cannot support the next two without
            ! a widget table data type
            ! XmNselectedObjects;
            ! XmNselectedObjectCount;
            XmNselectionCallback;
            XmNselectionPolicy;
            XmNselectionTechnique;
            XmNsmallCellHeight;
            XmNsmallCellWidth;
            XmNspatialIncludeModel;
            XmNspatialResizeModel;
            XmNspatialSnapModel;
            XmNspatialStyle;
            ! constraint resources
            XmNentryParent;
            XmNoutlineState;
            XmNlargeIconX;
            XmNlargeIconY;
            XmNpositionIndex;
            XmNsmallIconX;
            XmNsmallIconY;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Resource
    XmNcollapsedStatePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNdetailColumnHeading : Argument
        { Type = string_table;
          Default = "NULL";
          Related = XmNdetailColumnHeadingCount; };
    XmNdetailColumnHeadingCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNdetailOrder : Argument
        { Type = integer_table;
          Default = "NULL";
          Related = XmNdetailOrderCount; };
    XmNdetailOrderCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNdetailTabList : Argument
        { Type = widget_ref;
          Default = "NULL"; };
    XmNentryViewType : Argument
        { Type = integer;
          EnumerationSet = EntryViewType;
          Default = "XmLARGE_ICON"; };
    XmNexpandedStatePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNlargeCellHeight : Argument
        { Type = vertical_float; };
    XmNlargeCellWidth : Argument
        { Type = horizontal_float; };
    XmNlayoutDirection : Argument
        { Type = integer;
          EnumerationSet = LayoutDirection;
           Default = "XmLEFT_TO_RIGHT_TOP_TO_BOTTOM"; };
    XmNlayoutType : Argument
        { Type = integer;
          EnumerationSet = LayoutType;
          Default = "XmSPATIAL"; };
    XmNoutlineButtonPolicy : Argument
        { Type = integer;
          EnumerationSet = OutlineButtonPolicy;
          Default = "XmOUTLINE_BUTTON_PRESENT"; };
    XmNoutlineChangedCallback : Reason
        { };
    XmNoutlineColumnWidth : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNoutlineIndentation : Argument
        { Type = horizontal_float;
          Default = "100"; };
    XmNoutlineLineStyle : Argument
        { Type = integer;
          EnumerationSet = ContainerLineStyle;
          Default = "XmSINGLE"; };
    XmNselectionTechnique : Argument
        { Type = integer;
          EnumerationSet = SelectionTechnique;
          Default = "XmTOUCH_OVER"; };
    XmNsmallCellHeight : Argument
        { Type = vertical_float; };
    XmNsmallCellWidth : Argument
        { Type = horizontal_float; };
    XmNspatialIncludeModel : Argument
        { Type = integer;
          EnumerationSet = SpatialIncludeModel;
          Default = "XmAPPEND"; };
    XmNspatialResizeModel : Argument
        { Type = integer;
          EnumerationSet = SpatialResizeModel;
          Default = "XmGROW_MINOR"; };
    XmNspatialSnapModel : Argument
        { Type = integer;
          EnumerationSet = SpatialSnapModel;
          Default = "XmNONE"; };
    XmNspatialStyle : Argument
        { Type = integer;
          EnumerationSet = SpatialStyle;
          Default = "XmSPECIFIC"; };
    ! constraint resources
    XmNentryParent : Constraint
        { Type = widget_ref;
          Default = "NULL"; };
    XmNoutlineState : Constraint
        { Type = integer;
          EnumerationSet = OutlineState;
          Default = "XmCOLLAPSED"; };
    XmNlargeIconX : Constraint
        { Type = horizontal_float; };
    XmNlargeIconY : Constraint
        { Type = vertical_float; };
    XmNsmallIconX : Constraint
        { Type = horizontal_float; };
    XmNsmallIconY : Constraint
        { Type = vertical_float; };

Class
    XmNotebook : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateNotebook;
        Resources
            {
            ! new resources
            XmNcurrentPageNumber;
            XmNfirstPageNumber;
            XmNlastPageNumber;
            XmNorientation;
            XmNbackPagePlacement;
            XmNbackPageNumber;
            XmNbackPageSize;
            XmNbackPageForeground;
            XmNbackPageBackground;
            XmNframeBackground;
            XmNbindingType;
            XmNbindingPixmap;
            XmNbindingWidth;
            XmNinnerMarginWidth;
            XmNinnerMarginHeight;
            XmNmajorTabSpacing;
            XmNminorTabSpacing;
            XmNframeShadowThickness;
            XmNpageChangedCallback;
            ! constraint resources
            XmNnotebookChildType;
            XmNpageNumber;
            XmNresizable;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Resource
    XmNcurrentPageNumber : Argument
        { Type = integer; };
    XmNfirstPageNumber : Argument
        { Type = integer;
          Default = "1"; };
    XmNlastPageNumber : Argument
        { Type = integer; };
    XmNbackPagePlacement : Argument
        { Type = integer; };
    XmNbackPageNumber : Argument
        { Type = integer; };
    XmNbackPageSize : Argument
        { Type = horizontal_float; };
    XmNbackPageForeground : Argument
        { Type = color; };
    XmNbackPageBackground : Argument
        { Type = color; };
    XmNframeBackground : Argument
        { Type = color; };
    XmNbindingType : Argument
        { Type = integer;
          EnumerationSet = BindingType; };
    XmNbindingPixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    XmNbindingWidth : Argument
        { Type = horizontal_float;
          Default = "25"; };
    XmNinnerMarginWidth : Argument
        { Type = horizontal_float; };
    XmNinnerMarginHeight : Argument
        { Type = vertical_float; };
    ! I am going out on a limb here, but I think tabs will usually
    ! be situated vertically up and down the notebook. Therefore,
    ! let us make the next two resources vertical floats even though
    ! spacing resources which are used for both vertical and
    ! horizontal dimensions are type as horizontal float by default.
    XmNmajorTabSpacing : Argument
        { Type = vertical_float; };
    XmNminorTabSpacing : Argument
        { Type = vertical_float; };
    XmNnotebookChildType : Constraint
        { Type = integer;
          EnumerationSet = NotebookChildType; };
    XmNframeShadowThickness : Argument
        { Type = horizontal_float; };
    XmNpageChangedCallback : Reason
        { };
    XmNpageNumber : Constraint
        { Type = integer; };

Class
    XmSpinBox : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateSpinBox;
        Resources
            {
            ! new resources
            XmNarrowLayout;
            XmNarrowOrientation;
            XmNarrowSize;
            XmNdefaultArrowSensitivity;
            XmNinitialDelay;
            XmNmarginWidth;
            XmNmarginHeight;
            XmNmodifyVerifyCallback;
            XmNrepeatDelay;
            XmNspacing { Default = "0"; };
            XmNvalueChangedCallback;

            ! inherited resources
            !XmNactivateCallback;
            !XmNlosingFocusCallback;
            !XmNnavigationType;
            !XmNtraversalOn;

            ! constraint resources
            XmNarrowSensitivity;
            XmNdecimalPoints;
            XmNincrementValue;
            XmNmaximumValue;
            XmNminimumValue;
            XmNnumValues;
            XmNposition;
            XmNpositionType;
            XmNspinBoxChildType;
            XmNvalues;

            ! undocumented resources
            !XmNwrap;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Resource
    XmNdefaultArrowSensitivity : Argument
        { Type = integer;
          EnumerationSet = ArrowSensitivity;
          Default = "XmARROWS_SENSITIVE"; };
    XmNarrowLayout : Argument
        { Type = integer;
          EnumerationSet = ArrowLayout;
          Default = "XmARROWS_END"; };
    XmNarrowOrientation : Argument
        { Type = integer;
          EnumerationSet = ArrowOrientation;
          Default = "XmARROWS_VERTICAL"; };
    XmNspinBoxChildType : Constraint
        { Type = integer;
          EnumerationSet = SpinBoxChildType; };
    XmNpositionType : Constraint
        { Type = integer;
          EnumerationSet = PositionType;
          Default = "XmPOSITION_VALUE"; };
    XmNposition : Constraint
        { Type = integer;
          Default = "0"; };
    XmNnumValues : Constraint
        { Type = integer;
         Default = "0"; };
    XmNvalues : Constraint
        { Type = string_table;
          Default = "NULL";
          Related = XmNnumValues; };
    XmNminimumValue : Constraint
        { Type = integer;
          Default = "0"; };
    XmNmaximumValue : Constraint
        { Type = integer;
          Default = "10"; };
    XmNincrementValue : Constraint
        { Type = integer;
          Default = "1"; };
    XmNarrowSensitivity : Constraint
        { Type = integer;
          EnumerationSet = ArrowSensitivity;
          Default = "XmARROWS_DEFAULT_SENSITIVITY"; };
    XmNwrap : Constraint
        { Type = boolean;
          Default = "True"; };



Class
    XmSimpleSpinBox : Widget
        {
        SuperClass = XmSpinBox;
        ConvenienceFunction = XmCreateSimpleSpinBox;
        Resources
            {
            ! inherited resources
            XmNshadowThickness { Default = "1"; };
            ! new resources
            XmNarrowSensitivity;
            XmNcolumns;
            XmNdecimalPoints;
            XmNeditable;
            XmNincrementValue;
            XmNmaximumValue;
            XmNminimumValue;
            XmNnumValues;
            XmNposition;
            XmNpositionType;
            XmNspinBoxChildType { Default = "XmSTRING"; };
            XmNtextField;
            XmNvalues;
            ! undocumented resources
            !XmNwrap;
            };
!
! Does the XmNtextField need to be defined in the Children/Controls
!
        Controls
            {
            XmTextField;
            };
        };



! Bulletin board inherits from XmManager. Its Dialog variant is treated
! as a subclass

Class
    XmBulletinBoard : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateBulletinBoard;
        Resources
            {
            ! new resources
            XmNallowOverlap;
            XmNautoUnmanage;
            XmNbuttonFontList;
            XmNcancelButton;
            XmNdefaultButton;
            XmNdefaultPosition;
            XmNdialogStyle;
            XmNdialogTitle;
            XmNfocusCallback;
            XmNlabelFontList;
            XmNlosingFocusCallback;
            XmNmapCallback;
            XmNmarginHeight { Default = "10";};
            XmNmarginWidth { Default = "10";};
            XmNnoResize;
            XmNresizePolicy{ Default = "XmRESIZE_ANY"; };
            XmNshadowType { Default = "XmSHADOW_OUT";};
            XmNtextFontList;
            XmNtextTranslations;
            XmNunmapCallback;
            XmNbuttonRenderTable;
            XmNlabelRenderTable;
            XmNtextRenderTable;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };
Resource
    XmNallowOverlap : Argument
        { Type = boolean;
          Default = "True"; };
    XmNautoUnmanage : Argument
        { Type = boolean;
          Default = "True"; };
    XmNbuttonFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    XmNcancelButton : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNdefaultButton : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNdefaultPosition: Argument
        { Type = boolean;
          Default = "True"; };
    XmNdialogStyle : Argument
        { Type = integer;
          EnumerationSet = DialogStyle;
          Default = "dynamic"; };
    XmNdialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNlabelFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
        XmNmapCallback : Reason
        { };
        XmNnoResize : Argument
        { Type = boolean;
          Default = "False"; };
    XmNtextFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    XmNtextTranslations : Argument
        { Type = translation_table;
          Default = "Null"; };
        XmNunmapCallback : Reason
        { };
    XmNbuttonRenderTable : Argument
        { Type = widget_ref;
          Default = "dynamic"; };
    XmNlabelRenderTable : Argument
        { Type = widget_ref;
          Default = "dynamic"; };
    XmNtextRenderTable : Argument
        { Type = widget_ref;
          Default = "dynamic"; };

Class
    XmBulletinBoardDialog : Widget
        {
        SuperClass = XmBulletinBoard;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateBulletinBoardDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };



! RowColumn is instantiated as a number of different apparent widget
! classes. There is a UIL widget for each creation routine, which
! appears like a discrete class. All inherit from XmManager in fact,
! but are made to appear as subclasses of RowColumn to make resource
! specification easier

Class
    XmRowColumn : Widget
        {
        SuperClass = XmManager;
        ConvenienceFunction = XmCreateRowColumn;
        Resources
            {
            ! new resources
            XmNadjustLast;
            XmNadjustMargin;
            XmNentryAlignment;
            XmNentryBorder;
                XmNentryCallback;
            XmNentryClass;
            XmNentryVerticalAlignment;
            XmNisAligned;
            XmNisHomogeneous;
            XmNlabelString { Default = "Null"; };
                XmNmapCallback;
            XmNmarginHeight{ Default = "dynamic";};
            XmNmarginWidth { Default = "3";};
            XmNmenuAccelerator;
            XmNmenuHelpWidget;
            XmNmenuHistory;
            XmNmenuPost;
            XmNmnemonic { Default = "dynamic"; };
            XmNmnemonicCharSet;
            XmNnumColumns;
            XmNorientation { Default = "dynamic"; };
            XmNpacking;
            XmNpopupEnabled;
            XmNradioAlwaysOne;
            XmNradioBehavior;
                XmNresizeHeight { Default = "True"; };
                XmNresizeWidth { Default = "True"; };
            XmNrowColumnType;
            XmNspacing { Default = "dynamic"; };
            XmNsubMenuId { Default = "Null";};
            XmNtearOffMenuActivateCallback;
            XmNtearOffMenuDeactivateCallback;
            XmNtearOffModel;
            XmNtearOffTitle;
                XmNunmapCallback;
            XmNwhichButton;
            ! constraint resources
            XmNpositionIndex;
            ! inherited resources
            XmNborderWidth { Default = "0"; };
            XmNheight { Default = "dynamic"; };
            XmNnavigationType { Default = "dynamic"; };
            XmNwidth { Default = "dynamic"; };
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Resource
    XmNadjustLast : Argument
        { Type = boolean;
          Default = "True"; };
    XmNadjustMargin    : Argument
        { Type = boolean;
          Default = "True"; };
    XmNentryAlignment : Argument
        { Type = integer;
          EnumerationSet = Alignment;
          Default = "dynamic"; };
    XmNentryBorder    : Argument
        { Type = horizontal_float;
          Default = "dynamic"; };
    XmNentryCallback : Reason
        { };
    XmNentryClass    : Argument
        { Type = class_rec_name;
          Default = "dynamic"; };
    XmNentryVerticalAlignment : Argument
        { Type = integer;
          EnumerationSet = VerticalAlignment;
          Default = "XmALIGNMENT_CENTER"; };
    XmNisAligned    : Argument
        { Type = boolean;
          Default = "True"; };
    XmNisHomogeneous    : Argument
        { Type = boolean;
          Default = "dynamic"; };
    XmNmenuAccelerator : Argument
        { Type = string;
          Default = "dynamic"; };
!    XmNmenuTranslation : Argument
!        { Type = translation_table;
!          Default = "NULL"; };
    XmNmenuHelpWidget : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNmenuHistory    : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNmenuPost    : Argument
        { Type = string;
          Default = "Null"; };
    XmNnumColumns    : Argument
        { Type = integer;
          Default = "dynamic"; };
    XmNpacking : Argument
        { Type = integer;
          EnumerationSet = Packing;
          Default = "dynamic"; };
    XmNpopupEnabled    : Argument
        { Type = boolean;
          Default = "True"; };
    XmNradioAlwaysOne : Argument
        { Type = boolean;
          Default = "True"; };
    XmNradioBehavior : Argument
        { Type = boolean;
          Default = "False"; };
    XmNrowColumnType : Argument
        { Type = integer;
          EnumerationSet = RowColumnType;
          Default = "XmWORK_AREA"; };
    XmNtearOffMenuActivateCallback : Reason
        { };
    XmNtearOffMenuDeactivateCallback : Reason
        { };
    XmNtearOffModel : Argument
        { Type = integer;
          EnumerationSet = TearOffModel;
          Default = "XmTEAR_OFF_DISABLED"; };
    XmNtearOffTitle : Argument
        { Type = string;
          Default = "NULL"; };
    XmNunpostBehavior : Argument
        { Type = integer;
          EnumerationSet = UnpostBehavior;
          Default = "XmUNPOST_AND_REPLAY"; };
    XmNwhichButton : Argument
        { Type = integer;
          Default = "dynamic"; };

Class
    XmWorkArea : Widget
        {
        SuperClass = XmRowColumn;
        ConvenienceFunction = XmCreateWorkArea;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmMenuBar : Widget
        {
        SuperClass = XmRowColumn;
        ConvenienceFunction = XmCreateMenuBar;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            MenuWidgetsAndGadgets;
            XmPopupMenu;
            XmPulldownMenu;
            };
        };


Class
    XmOptionMenu : Widget
        {
        SuperClass = XmRowColumn;
        ConvenienceFunction = XmCreateOptionMenu;
        ControlsMapToResource = XmNsubMenuId;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            XmPulldownMenu;
            };
        Children
            {
            Xm_OptionLabel;
            Xm_OptionButton;
            };
        };

Child
    Xm_OptionLabel     : XmLabelGadget;
    Xm_OptionButton    : XmCascadeButtonGadget;

Class
    XmPopupMenu : Widget
        {
        SuperClass = XmRowColumn;
        ParentClass = XmMenuShell;
        ConvenienceFunction = XmCreatePopupMenu;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            MenuWidgetsAndGadgets;
            };
        Children
            {
            Xm_TearOffControl;
            };
        };

Child
    Xm_TearOffControl : XmTearOffButton;

Class
    XmPulldownMenu : Widget
        {
        SuperClass = XmRowColumn;
        ParentClass = XmMenuShell;
        ConvenienceFunction = XmCreatePulldownMenu;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            MenuWidgetsAndGadgets;
            };
        Children
            {
            Xm_TearOffControl;
            };
        };

Class
    XmRadioBox : Widget
        {
        SuperClass = XmRowColumn;
        ConvenienceFunction = XmCreateRadioBox;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

!
! Fix for CR 5651 - add information for the CheckBox
!
Class
    XmCheckBox : Widget
        {
        SuperClass = XmRowColumn;
        ConvenienceFunction = XmCreateSimpleCheckBox;
        Resources
            {
            XmNbuttonCount;
            XmNbuttons;
            XmNsimpleCallback;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };
Resource
    XmNbuttons : Argument
        { Type = string_table;
          Default = "NULL";
          Related = XmNbuttonCount; };
    XmNbuttonCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNsimpleCallback : Reason
        { };
!
! End Fix for CR 5651
!


! Immediate subclasses of XmScrolledWindow

Class
    XmMainWindow : Widget
        {
        SuperClass = XmScrolledWindow;
        ConvenienceFunction = XmCreateMainWindow;
        DialogClass = True;
        Resources
            {
            ! new resources
            XmNcommandWindow;
            XmNcommandWindowLocation;
            XmNmainWindowMarginHeight;
            XmNmainWindowMarginWidth;
            XmNmenuBar;
            XmNmessageWindow;
            XmNshowSeparator;
            ! inherited constraint resources
            XmNscrolledWindowChildType;
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_Separator1;
            Xm_Separator2;
            Xm_Separator3;
            };
        };
Child
    Xm_Separator1 : XmSeparator;
    Xm_Separator2 : XmSeparator;
    Xm_Separator3 : XmSeparator;

Resource
    XmNcommandWindow : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNcommandWindowLocation : Argument
        { Type = integer;
          EnumerationSet = CommandWindowLocation;
          Default = "XmCOMMAND_ABOVE_WORKSPACE"; };
    XmNmainWindowMarginHeight : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNmainWindowMarginWidth : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNmenuBar : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNmessageWindow : Argument
        { Type = widget_ref;
          Default = "Null"; };
    XmNshowSeparator : Argument
        { Type = boolean;
          Default = "False"; };


! Immediate subclasses of XmBulletinBoard
! For each class, the Dialog variant is treated as a subclass

Class
    XmForm : Widget
        {
        SuperClass = XmBulletinBoard;
        ConvenienceFunction = XmCreateForm;
        Resources
            {
            ! new resources
            XmNfractionBase;
            XmNhorizontalSpacing;
            XmNrubberPositioning;
            XmNverticalSpacing;
            ! constraint resources
                XmNbottomAttachment;
                XmNbottomOffset;
                XmNbottomPosition;
                XmNbottomWidget;
                XmNleftAttachment;
                XmNleftOffset;
                XmNleftPosition;
                XmNleftWidget;
                XmNresizable;
                XmNrightAttachment;
                XmNrightOffset;
                XmNrightPosition;
                XmNrightWidget;
                XmNtopAttachment;
                XmNtopOffset;
                XmNtopPosition;
                XmNtopWidget;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };
Resource
    XmNfractionBase : Argument
        { Type = integer;
          Default = "100"; };
    XmNhorizontalSpacing : Argument
        { Type = horizontal_float;
          Default = "0"; };
    XmNverticalSpacing : Argument
        { Type = vertical_float;
          Default = "0"; };
    XmNrubberPositioning : Argument
        { Type = boolean;
          Default = "False"; };
! constraints
    XmNbottomAttachment : Constraint
        { Type = integer;
          EnumerationSet = Attachment;
          Default = "XmATTACH_NONE"; };
    XmNbottomOffset : Constraint
        { Type = vertical_float;
          Default = "0"; };
    XmNbottomPosition : Constraint
        { Type = integer;
          Default = "0"; };
    XmNbottomWidget : Constraint
        { Type = widget_ref;
          Default = "Null"; };
    XmNleftAttachment : Constraint
        { Type = integer;
          EnumerationSet = Attachment;
          Default = "XmATTACH_NONE"; };
    XmNleftOffset : Constraint
        { Type = horizontal_float;
          Default = "0"; };
    XmNleftPosition : Constraint
        { Type = integer;
          Default = "0"; };
    XmNleftWidget : Constraint
        { Type = widget_ref;
          Default = "Null"; };
    XmNresizable : Constraint
        { Type = boolean;
          Default = "True"; };
    XmNrightAttachment : Constraint
        { Type = integer;
          EnumerationSet = Attachment;
          Default = "XmATTACH_NONE"; };
    XmNrightOffset : Constraint
        { Type = horizontal_float;
          Default = "0"; };
    XmNrightPosition : Constraint
        { Type = integer;
          Default = "0"; };
    XmNrightWidget : Constraint
        { Type = widget_ref;
          Default = "Null"; };
    XmNtopAttachment : Constraint
        { Type = integer;
          EnumerationSet = Attachment;
          Default = "XmATTACH_NONE"; };
    XmNtopOffset : Constraint
        { Type = vertical_float;
          Default = "0"; };
    XmNtopWidget : Constraint
        { Type = widget_ref;
          Default = "Null"; };
    XmNtopPosition : Constraint
        { Type = integer;
          Default = "0"; };

Class
    XmFormDialog : Widget
        {
        SuperClass = XmForm;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateFormDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };



! Immediate subclass of XmBulletinBoard

! Most Dialogs are variants of MessageBox, and are treated as subclasses.

Class
    XmMessageBox : Widget
        {
        SuperClass = XmBulletinBoard;
        ConvenienceFunction = XmCreateMessageBox;
        Resources
            {
            ! new resources
                XmNcancelCallback;
                XmNcancelLabelString;
                XmNdefaultButtonType;
                XmNdialogType;
                XmNhelpLabelString;
                XmNmessageAlignment;
                XmNmessageString;
                XmNminimizeButtons;
                XmNokCallback;
                XmNokLabelString;
                XmNsymbolPixmap;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_Symbol;
            Xm_Separator;
            Xm_Message;
            Xm_OK;
            Xm_Cancel;
            Xm_Help;
            };
        };
Child
    Xm_Symbol : XmLabel;
    Xm_Separator : XmSeparator;
    Xm_Message : XmLabel;
    Xm_OK : XmPushButton;
    Xm_Cancel : XmPushButton;
    Xm_Help : XmPushButton;

Resource
        XmNcancelCallback : Reason
        { };
    XmNcancelLabelString : Argument
        { Type = compound_string;
          Default = "Cancel"; };
    XmNdefaultButtonType : Argument
        { Type = integer;
          EnumerationSet = DefaultButtonType;
          Default = "XmDIALOG_OK_BUTTON"; };
    XmNdialogType : Argument
        { Type = integer;
          EnumerationSet = DialogType;
          Default = "XmDIALOG_MESSAGE"; };
    XmNhelpLabelString : Argument
        { Type = compound_string;
          Default = "Help"; };
    XmNmessageAlignment : Argument
        { Type = integer;
          EnumerationSet = Alignment;
          Default = "XmALIGNMENT_BEGINNING"; };
    XmNmessageString : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNminimizeButtons : Argument
        { Type = boolean;
          Default = "False"; };
        XmNokCallback : Reason
        { };
    XmNokLabelString : Argument
        { Type = compound_string;
          Default = "OK"; };
    XmNsymbolPixmap : Argument
        { Type = pixmap;
          Default = "XmDEFAULT_PIXMAP"; };


Class
    XmMessageDialog : Widget
        {
        SuperClass = XmMessageBox;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateMessageDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmErrorDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateErrorDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmInformationDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateInformationDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmQuestionDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateQuestionDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Class
    XmTemplateDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateTemplateDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Class
    XmWarningDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateWarningDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmWorkingDialog : Widget
        {
        SuperClass = XmMessageDialog;
        ConvenienceFunction = XmCreateWorkingDialog;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };



! Immediate subclass of XmBulletinBoard

! Dialog variants are treated as subclasses

Class
    XmSelectionBox : Widget
        {
        SuperClass = XmBulletinBoard;
        ConvenienceFunction = XmCreateSelectionBox;
        Resources
            {
            ! new resources
            XmNapplyCallback;
            XmNapplyLabelString;
            XmNcancelCallback;
            XmNcancelLabelString { Default = "cancel"; };
            XmNdialogType { Default = "dynamic"; };
            XmNhelpLabelString { Default = "help"; };
            XmNlistItemCount;
            XmNlistItems;
            XmNlistLabelString;
            XmNlistVisibleItemCount;
            XmNminimizeButtons { Default = "False"; };
            XmNmustMatch;
            XmNnoMatchCallback;
            XmNokCallback;
            XmNokLabelString;
            XmNselectionLabelString;
            XmNtextAccelerators;
            XmNtextColumns;
            XmNtextString;
            XmNchildPlacement;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_Items;
            Xm_ItemsList;
            Xm_Selection;
            Xm_Text;
            Xm_Separator;
            Xm_OK;
            Xm_Cancel;
            Xm_Help;
            Xm_Apply;
            };
        };
Child
    Xm_Items             : XmLabel;
    Xm_ItemsList             : XmScrolledList;
    Xm_Selection             : XmLabel;
    Xm_Text             : XmText;
    Xm_Apply             : XmPushButton;

Resource
        XmNapplyCallback : Reason
        { };
    XmNapplyLabelString : Argument
        { Type = compound_string;
          Default = "Apply"; };
    XmNlistItemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNlistItems : Argument
        { Type = string_table;
          Default = "Null";
          Related = XmNlistItemCount; };
    XmNlistLabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNlistVisibleItemCount : Argument
        { Type = integer;
          Default = "8"; };
    XmNmustMatch : Argument
        { Type = boolean;
          Default = "False"; };
        XmNnoMatchCallback: Reason
        { };
    XmNselectionLabelString : Argument
        { Type = compound_string;
          Default = "Selection"; };
    XmNtextAccelerators : Argument
        { Type = translation_table;
          Default = ""; };
    XmNtextColumns : Argument
        { Type = integer;
          Default = "20"; };
    XmNtextString : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNchildPlacement : Constraint
        { Type = integer;
          EnumerationSet = ChildPlacement;
          Default = "XmPLACE_ABOVE_SELECTION"; };

Class
    XmSelectionDialog : Widget
        {
        SuperClass = XmSelectionBox;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateSelectionDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


Class
    XmPromptDialog : Widget
        {
        SuperClass = XmSelectionBox;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreatePromptDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };



! Immediate subclasses of XmSelectionBox

Class
    XmCommand : Widget
        {
        SuperClass = XmSelectionBox;
        ConvenienceFunction = XmCreateCommand;
        Resources
            {
            ! new resources
                XmNcommand;
            XmNcommandChangedCallback;
            XmNcommandEnteredCallback;
            XmNhistoryItems;
            XmNhistoryItemCount;
            XmNhistoryMaxItems;
            XmNhistoryVisibleItemCount;
            XmNpromptString;
            ! inherited resources
            XmNapplyCallback { Exclude = True; };
            XmNapplyLabelString { Exclude = True; };
            XmNautoUnmanage {Exclude = True;};
            XmNcancelCallback { Exclude = True; };
            XmNcancelLabelString { Exclude = True; };
            XmNhelpLabelString { Exclude = True; };
            XmNlistLabelString { Exclude = True; };
            XmNminimizeButtons { Exclude = True; };
            XmNmustMatch { Exclude = True; };
            XmNnoMatchCallback { Exclude = True; };
            XmNokCallback { Exclude = True; };
            XmNokLabelString { Exclude = True; };
            XmNallowOverlap { Exclude = True; };
            XmNbuttonFontList { Exclude = True; };
            XmNcancelButton { Exclude = True; };
            XmNdefaultButton { Exclude = True; };
            XmNdialogType { Default = "XmDIALOG_COMMAND"; };
            };
        Controls
            {
            XmPopupMenu;
            };
        };
Resource
    XmNcommand : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNcommandChangedCallback : Reason
        { };
    XmNcommandEnteredCallback : Reason
        { };
    XmNhistoryItems : Argument
        { Type = string_table;
          Default = "Null";
          Related = XmNhistoryItemCount; };
    XmNhistoryItemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNhistoryMaxItems : Argument
        { Type = integer;
          Default = "100"; };
    XmNhistoryVisibleItemCount : Argument
        { Type = integer;
          Default = "8"; };
    XmNpromptString : Argument
        { Type = compound_string;
          Default = ">"; };

Class
    XmCommandDialog : Widget
        {
        SuperClass = XmCommand;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateCommandDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };



! Immediate subclass of SelectionBox
! The Dialog variant is treated as a subclass

Class
    XmFileSelectionBox : Widget
        {
        SuperClass = XmSelectionBox;
        ConvenienceFunction = XmCreateFileSelectionBox;
        Resources
            {
            ! new resources
            XmNdirMask;
            XmNdirSpec;
            XmNfileSearchProc;
            XmNfileTypeMask;
            XmNfilterLabelString;
            XmNlistUpdated;
            XmNdirectory;
            XmNdirectoryValid;
            XmNpattern;
            XmNdirListLabelString;
            XmNdirListItems;
            XmNdirListItemCount;
            XmNfileListItemCount;
            XmNfileListItems;
            XmNnoMatchString;
            XmNqualifySearchDataProc;
            XmNdirSearchProc;
            XmNfileListLabelString;
            ! inherited resources
            XmNapplyLabelString { Default = "Filter"; };
            XmNlistLabelString { Default = "Files"; };
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        Children
            {
            Xm_FilterLabel;
            Xm_FilterText;
            Xm_DirList;
            Xm_Dir;
            Xm_Filter;
            };
        };
Child
    Xm_FilterLabel             : XmLabel;
    Xm_FilterText             : XmText;
    Xm_DirList             : XmScrolledList;
    Xm_Dir                 : XmLabel;
    Xm_Filter             : XmPushButton;

Resource
    XmNdirMask : Argument
        { Type = compound_string;
          Default = "*"; };
    XmNdirSpec : Argument
        { Type = compound_string;
          Default = "Null"; };
    XmNfileSearchProc : Argument
        { Type = any;
          Default = "default"; };
    XmNfilterLabelString : Argument
        { Type = compound_string;
          Default = "File Filter"; };
    XmNlistUpdated : Argument
          { Type = boolean;
          Default = "True"; };
    XmNfileTypeMask : Argument
        { Type = integer;
          EnumerationSet = FileTypeMask;
          Default = "XmFILE_REGULAR"; };
    XmNdirectory: Argument
        { Type = compound_string;
          Default = "current working directory"; };
    XmNdirectoryValid : Argument
        { Type = boolean;
          Default = "True"; };
    XmNpattern: Argument
        { Type = compound_string;
          Default = "*"; };
    XmNdirListLabelString: Argument
        { Type = compound_string;
          Default = "Directories"; };
    XmNdirListItemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNdirListItems : Argument
        { Type = string_table;
          Default = "dynamic";
          Related = XmNdirListItemCount; };
    XmNfileListItemCount : Argument
        { Type = integer;
          Default = "0"; };
    XmNfileListItems : Argument
        { Type = string_table;
          Default = "NULL";
          Related = XmNfileListItemCount; };
    XmNnoMatchString: Argument
        { Type = compound_string;
          Default = " [    ] "; };
    XmNqualifySearchDataProc : Argument
        { Type = any;
          Default = "default"; };
    XmNdirSearchProc : Argument
        { Type = any;
          Default = "default"; };
    XmNfileListLabelString: Argument
        { Type = compound_string;
          Default = "Files"; };

Class
    XmFileSelectionDialog : Widget
        {
        SuperClass = XmFileSelectionBox;
        ParentClass = XmDialogShell;
        ConvenienceFunction = XmCreateFileSelectionDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };


! pseudo-classes for renditions
Class
    XmRenderTable : Widget
        {
        SuperClass = Object;
        ConvenienceFunction = _XmCreateRenderTable;
        Controls
            {
            XmRendition;
            };
        };

Class
    XmRendition : Widget
        {
        SuperClass = Object;
        ConvenienceFunction = _XmCreateRendition;
        Resources
            {
            XmNfontName;
            XmNfontType;
            XmNloadModel;
            XmNfont;
            XmNrenditionBackground;
            XmNrenditionForeground;
            XmNunderlineType;
            XmNstrikethruType;
            };
        Controls
            {
            XmTabList;
            };
        };

Resource
    XmNfontName : Argument
         { Type = string;
           Default = "XmAS_IS"; };
    XmNfontType : Argument
         { Type = integer;
           EnumerationSet = FontType;
           Default = "XmAS_IS"; };
    XmNloadModel : Argument
         { Type = integer;
           EnumerationSet = LoadModel;
           Default = "XmAS_IS"; };
    XmNfont : Argument
         { Type = font;
           Default = "XmAS_IS"; };
    XmNrenditionBackground : Argument
        { Type = color;
          Default = "XmUNSPECIFIED_PIXEL"; };
    XmNrenditionForeground : Argument
        { Type = color;
          Default = "XmUNSPECIFIED_PIXEL"; };
    XmNunderlineType : Argument
         { Type = integer;
           EnumerationSet = LineType;
           Default = "XmAS_IS"; };
    XmNstrikethruType : Argument
         { Type = integer;
           EnumerationSet = LineType;
           Default = "XmAS_IS"; };

Class
    XmTabList : Widget
        {
        SuperClass = Object;
        ConvenienceFunction = _XmCreateTabList;
        Controls
            {
            XmTab;
            };
        };

Class
    XmTab : Widget
        {
        SuperClass = Object;
        ConvenienceFunction = _XmCreateTab;
        Resources
            {
            XmNtabValue;
            XmNunitType;
            XmNoffsetModel;
            XmNalignment { Default = "XmALIGNMENT_BEGINNING"; };
            XmNdecimal;
            };
        };

Resource
    XmNtabValue : Argument
        { Type = float;
          Default = "0.0"; };
    XmNoffsetModel : Argument
        { Type = integer;
          EnumerationSet = OffsetModel;
          Default = "XmABSOLUTE"; };
    XmNdecimal : Argument
        { Type = string;
          Default = "."; };


! the user-defined class
Class
    user_defined : Widget
        {
        ConvenienceFunction = user_defined ;
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

! Fake resource for COMPOUND_STRING_COMPONENT
Resource
    XmStringComponent : Argument
        { Type = integer;
          EnumerationSet = CompoundStringComponent; };


!
! Dt Enumeration Sets
!
EnumerationSet
    DtCharCursorStyle : integer
        { DtTERM_CHAR_CURSOR_BOX;
          DtTERM_CHAR_CURSOR_BAR;
          DtTERM_CHAR_CURSOR_INVISIBLE; };
    DtExecutionPolicy : integer
        { DtHELP_EXECUTE_NONE;
          DtHELP_EXECUTE_QUERY_ALL;
          DtHELP_EXECUTE_QUERY_UNALIASED;
          DtHELP_EXECUTE_ALL; };
    DtHelpType : integer
        { DtHELP_TYPE_TOPIC;
          DtHELP_TYPE_STRING;
          DtHELP_TYPE_MAN_PAGE;
          DtHELP_TYPE_FILE;
          DtHELP_TYPE_DYNAMIC_STRING; };
!    DtPaperSize : integer
!        { DtHELP_PAPERSIZE_LETTER;
!          DtHELP_PAPERSIZE_LEGAL;
!          DtHELP_PAPERSIZE_EXECUTIVE;
!          DtHELP_PAPERSIZE_A4;
!          DtHELP_PAPERSIZE_B5; };
!    DtPrintDestination : integer
!        { DtPRINT_NO_DESTINATION;
!          DtPRINT_TO_PRINTER;
!          DtPRINT_TO_FILE; };
!    DtPrinterNameMode : integer
!        { DtSHORT_NAME;
!          DtMEDIUM_NAME;
!          DtLONG_NAME; };
!    DtPrinterResetConnectionMode : integer
!        { DtPRINT_CLOSE_CONNECTION;
!          DtPRINT_RELEASE_CONNECTION; };
    DtScrollBarPolicy : integer
        { DtHELP_NO_SCROLLBARS;
          DtHELP_STATIC_SCROLLBARS;
          DtHELP_AS_NEEDED_SCROLLBARS; };
    DtShadowType : integer
        { DtSHADOW_IN;
          DtSHADOW_OUT;
          DtSHADOW_ETCHED_IN;
          DtSHADOW_ETCHED_OUT; };
!    DtSetupMode : integer
!        { DtPRINT_SETUP_PLAIN;
!          DtPRINT_SETUP_XP; };
!    DtWorkAreaLocation : integer
!        { DtWORK_AREA_NONE;
!          DtWORK_AREA_TOP;
!          DtWORK_AREA_TOP_AND_BOTTOM;
!          DtWORK_AREA_BOTTOM; };

!
! Dt Widgets
!
Class
    DtEditor : Widget
        {
        SuperClass = XmForm;
        ConvenienceFunction = DtCreateEditor;
        Resources
            {
            ! new resources
                    DtNautoShowCursorPosition;
                    DtNbuttonFontList;
            DtNblinkRate { Default = "500"; };
                    DtNcenterToggleLabel;
                    DtNchangeAllButtonLabel;
                    DtNchangeButtonLabel;
                    DtNchangeFieldLabel;
                    DtNcolumns;
                    DtNcurrentLineLabel;
            DtNcursorPosition;
                    DtNcursorPositionVisible;
                    DtNdialogTitle;
                    DtNeditable;
                    DtNfindButtonLabel;
                    DtNfindChangeDialogTitle;
                    DtNfindFieldLabel;
                    DtNformatAllButtonLabel;
                    DtNformatParagraphButtonLabel;
                    DtNformatSettingsDialogTitle;
                    DtNinformationDialogTitle;
                    DtNinsertLabel;
                    DtNjustifyToggleLabel;
                    DtNlabelFontList;
                    DtNleftAlignToggleLabel;
                    DtNleftMarginFieldLabel;
            DtNmaxLength;
                    DtNmisspelledListLabel;
                    DtNoverstrike;
                    DtNoverstrikeLabel;
                    DtNrightAlignToggleLabel;
                    DtNrightMarginFieldLabel;
                    DtNrows;
                    DtNscrollHorizontal;
                    DtNscrollLeftSide;
                    DtNscrollTopSide;
                    DtNscrollVertical;
                    DtNshowStatusLine;
                    DtNspellDialogTitle;
                    DtNspellFilter;
                    DtNtextBackground;
                    DtNtextDeselectCallback;
                    DtNtextForeground;
                    DtNtextFontList;
                    DtNtextSelectCallback;
            DtNtextTranslations;
                    DtNtopCharacter;
                    DtNtotalLineCountLabel;
                    DtNwordWrap;
            ! inherited resources
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Class
    DtHelpDialog : Widget
        {
        SuperClass = XmBulletinBoard;
        ParentClass = XmDialogShell;
        ConvenienceFunction = DtCreateHelpDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            DtNcloseCallback;
            DtNcolumns { Default = "70"; };
            DtNexecutionPolicy;
            DtNhelpFile;
            DtNhelpOnHelpVolume;
!            DtNhelpPrint;
            DtNhelpType;
            DtNhelpVolume;
            DtNhyperLinkCallback;
            DtNlocationId;
            DtNmanPage;
            DtNmarginWidth;
            DtNmarginHeight;
!            DtNpaperSize;
!            DtNprinter;
            DtNrows { Default = "25"; };
            DtNscrollBarPolicy;
            DtNshowNewWindowButton;
            DtNstringData;
            DtNtopicTitle;
            DtNvisiblePathCount;

            ! private resources
            ! DtNshowTopLevelButton;
            ! DtNsrchHitPrefixFont;

            ! inherited resources
            XmNnavigationType { Default = "dynamic"; };
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Class
    DtHelpQuickDialog : Widget
        {
        SuperClass = XmBulletinBoard;
        ParentClass = XmDialogShell;
        ConvenienceFunction = DtCreateHelpQuickDialog;
        DialogClass = True;
        Resources
            {
            ! new resources
            DtNbackLabelString;
            DtNcloseCallback;
            DtNcloseLabelString;
            DtNcolumns { Default = "50"; };
            DtNexecutionPolicy;
            DtNhelpFile;
            DtNhelpLabelString;
            DtNhelpOnHelpVolume;
!            DtNhelpPrint;
!            DtNhelpVolume;
            DtNhelpType;
            DtNhyperLinkCallback;
            DtNlocationId;
            DtNmanPage;
            DtNminimizeButtons;
            DtNmoreLabelString;
!            DtNpaperSize;
!            DtNprinter;
!            DtNprintLabelString;
            DtNrows { Default = "15"; };
            DtNscrollBarPolicy;
            DtNstringData;
            DtNtopicTitle;
            ! inherited resources
            XmNnavigationType { Default = "dynamic"; };
            };
        Controls
            {
            AllWidgetsAndGadgets;
            };
        };

Class
    DtMenuButton : Widget
        {
        SuperClass = XmLabel;
        ConvenienceFunction = DtCreateMenuButton;
        Resources
            {
            ! new resources
            DtNcascadingCallback;
            DtNcascadePixmap;
            DtNsubMenuId;

            ! inherited resources
            XmNhighlightThickness { Default = "2"; };
            XmNmarginWidth { Default = "6"; };
            XmNtraversalOn { Default = "True"; };
            };
        Controls {
            XmPopupMenu;
            XmRenderTable;
            };
        };

! Class
!     DtPrintSetupBox : Widget
!         {
!         SuperClass = XmBulletinBoard;
!         ConvenienceFunction = DtCreatePrintSetupBox;
!         Resources
!             {
!             ! new resources
!             DtNcancelCallback;
!             DtNclosePrintDisplayCallback;
!             DtNcopies;
!             DtNdescription;
!             DtNfileName;
!             DtNminimizeButtons;
!             DtNprintCallback;
!             DtNprintDestination;
!             DtNprinterInfoProc;
!             DtNprinterName;
!             DtNprintSetupMode;
!             DtNselectFileProc;
!             DtNselectPrinterProc;
!             DtNsetupCallback;
!             DtNverifyPrinterProc;
!             DtNworkAreaLocation;
! 
!             ! inherited resources
!             XmNnoResize { Default = "True"; };
!             };
!         Controls {
!             AllWidgetsAndGadgets;
!             };
!         };
! 
! Class
!     DtPrintSetupDialog : Widget
!         {
!         SuperClass = DtPrintSetupBox;
!         ParentClass = XmDialogShell;
!         ConvenienceFunction = DtCreatePrintSetupDialog;
!         DialogClass = True;
!         Resources
!             {
!             ! new resources
!             ! inherited resources
!             };
!         Controls {
!             AllWidgetsAndGadgets;
!             };
!         };

Class
    DtTermPrimitive : Widget
        {
        SuperClass = XmPrimitive;
        ConvenienceFunction = DtCreateTermPrimitive;
        Resources
            {
            ! new resources
            DtNallowSendEvents;
            DtNbackgroundIsSelect;
            DtNblinkRate;
            DtNbaseWidth;
            DtNbaseHeight;
            DtNcharCursorStyle;
            DtNcolumns { Default = "80"; };
            DtNconsoleMode;
            DtNcsWidth;
            DtNemulationId;
            DtNheightInc;
            DtNinputVerifyCallback;
            DtNjumpScroll;
            DtNkshMode;
            DtNlogging;
            DtNlogFile;
            DtNlogInhibit;
            DtNmapOnOutput;
            DtNmapOnOutputDelay;
            DtNmarginBell;
            DtNmarginHeight { Default = "2"; };
            DtNmarginWidth { Default = "2"; };
            DtNnMarginBell;
            DtNoutputLogCallback;
            DtNpointerBlank;
            DtNpointerBlankDelay;
            DtNpointerShape;
            DtNpointerColor;
            DtNpointerColorBackground;
            DtNreverseVideo;
            DtNrows { Default = "24"; };
            DtNsaveLines;
            DtNshadowType;
            DtNstatusChangeCallback;
            DtNsubprocessArgv;
            DtNsubprocessCmd;
            DtNsubprocessExec;
            DtNsubprocessLoginShell;
            DtNsubprocessPid;
            DtNsubprocessTerminationCallback;
            DtNsubprocessTerminationCatch;
            DtNtermDevice;
            DtNtermDeviceAllocate;
            DtNtermId;
            DtNtermName;
            DtNtermSlaveName;
            DtNttyModes;
            DtNuserBoldFont;
            DtNuserFont;
            DtNverticalScrollBar;
            DtNvisualBell;
            DtNwidthInc;

            ! inherited resources
            XmNhighlightThickness { Default = "2"; };
            XmNtraversalOn { Default = "True"; };
            };
        };

Class
    DtTerm : Widget
        {
        SuperClass = DtTermPrimitive;
        ConvenienceFunction = DtCreateTerm;
        Resources
            {
            ! new resources
            DtNappCursorDefault;
            DtNappKeypadDefault;
            DtNautoWrap;
            DtNc132;
            DtNemulationId { Default = "DtTermWidget"; };
            DtNreverseWrap;
            DtNsunFunctionKeys;
            DtNtermId { Default = "vt220"; };
            DtNtermName { Default = "dtterm"; };

            ! commented out
            ! DtNstickyPrevCursor;
            ! DtNstickyNextCursor;
            ! DtNstatusChangeCallback;
            ! DtNverticalScrollBar;

            ! inherited resources
            };
        };

Resource
    DtNallowSendEvents : Argument
        { Type = boolean;
          Default = "False"; };
    DtNappCursorDefault : Argument
        { Type = boolean;
          Default = "False"; };
    DtNappKeypadDefault : Argument
        { Type = boolean;
          Default = "False"; };
    DtNautoShowCursorPosition : Argument
        { Type = boolean;
          Default = "True"; };
    DtNautoWrap : Argument
        { Type = boolean;
          Default = "True"; };
    DtNbackLabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNbackgroundIsSelect : Argument
        { Type = boolean;
          Default = "False"; };
    DtNbaseHeight : Argument
        { Type = integer;
          Default = "0"; };
    DtNbaseWidth : Argument
        { Type = integer;
          Default = "0"; };
    DtNblinkRate : Argument
        { Type = integer;
          Default = "250"; };
    DtNbuttonFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    DtNc132 : Argument
        { Type = boolean;
          Default = "False"; };
!    DtNcancelCallback : Reason
!        { };
    DtNcascadePixmap : Argument
        { Type = pixmap;
          Default = "XmUNSPECIFIED_PIXMAP"; };
    DtNcascadingCallback : Reason
        { };
    DtNcenterToggleLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNchangeAllButtonLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNchangeButtonLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNchangeFieldLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNcharCursorStyle : Argument
        { Type = integer;
          EnumerationSet = DtCharCursorStyle;
          Default = "DtTERM_CHAR_CURSOR_BOX"; };
    DtNcloseCallback : Reason
        { };
    DtNcloseLabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
!    DtNclosePrintDisplayCallback : Reason
!        { };
    DtNcolumns : Argument
        { Type = integer;
          Default = "DtUNSPECIFIED"; };
    DtNconsoleMode : Argument
        { Type = boolean;
          Default = "False"; };
!    DtNcopies : Argument
!        { Type = integer;
!          Default = "1"; };
    DtNcsWidth : Argument
        { Type = string;
          Default = "Null"; };
    DtNcurrentLineLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNcursorPosition : Argument
        { Type = integer;
          Default = "0"; };
    DtNcursorPositionVisible : Argument
        { Type = boolean;
          Default = "True"; };
!    DtNdescription : Argument
!        { Type = compound_string;
!          Default = "Null"; };
    DtNdialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNeditable : Argument
        { Type = boolean;
          Default = "True"; };
    DtNemulationId : Argument
        { Type = string;
          Default = "Null"; };
    DtNexecutionPolicy : Argument
        { Type = integer;
          EnumerationSet = DtExecutionPolicy;
          Default = "DtHELP_EXECUTE_QUERY_UNALIASED"; };
!    DtNfileName : Argument
!        { Type = string;
!          Default = "Null"; };
    DtNfindButtonLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNfindChangeDialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNfindFieldLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNformatAllButtonLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNformatParagraphButtonLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNformatSettingsDialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNheightInc : Argument
        { Type = integer;
          Default = "0"; };
    DtNhelpFile : Argument
        { Type = string;
          Default = "Null"; };
    DtNhelpLabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNhelpOnHelpVolume : Argument
        { Type = string;
          Default = "Null"; };
!    DtNhelpPrint : Argument
!        { Type = string;
!          Default = "Null"; };
    DtNhelpType : Argument
        { Type = integer;
          EnumerationSet = DtHelpType;
          Default = "DtHELP_TYPE_TOPIC"; };
    DtNhelpVolume : Argument
        { Type = string;
          Default = "Null"; };
    DtNhyperLinkCallback : Reason
        { };
    DtNinformationDialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNinputVerifyCallback : Reason
        { };
    DtNinsertLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNjumpScroll : Argument
        { Type = boolean;
          Default = "True"; };
    DtNjustifyToggleLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNkshMode : Argument
        { Type = boolean;
          Default = "False"; };
    DtNlabelFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    DtNleftAlignToggleLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNleftMarginFieldLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNlocationId : Argument
        { Type = string;
          Default = "Null"; };
    DtNlogFile : Argument
        { Type = string;
          Default = "Null"; };
    DtNlogInhibit : Argument
        { Type = boolean;
          Default = "False"; };
    DtNlogging : Argument
        { Type = boolean;
          Default = "False"; };
    DtNmanPage : Argument
        { Type = string;
          Default = "Null"; };
    DtNmapOnOutput : Argument
        { Type = boolean;
          Default = "False"; };
    DtNmapOnOutputDelay : Argument
        { Type = integer;
          Default = "0"; };
    DtNmarginBell : Argument
        { Type = boolean;
          Default = "False"; };
    DtNmarginHeight : Argument
        { Type = vertical_float;
          Default = "4"; };
    DtNmarginWidth : Argument
        { Type = horizontal_float;
          Default = "1"; };
    DtNmaxLength : Argument
        { Type = integer;
          Default = "DtUNSPECIFIED"; };
    DtNminimizeButtons : Argument
        { Type = boolean;
          Default = "False"; };
    DtNmisspelledListLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNmoreLabelString : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNnMarginBell : Argument
        { Type = integer;
          Default = "8"; };
    DtNoutputLogCallback : Reason
        { };
    DtNoverstrike : Argument
        { Type = boolean;
          Default = "False"; };
    DtNoverstrikeLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
!    DtNpaperSize : Argument
!        { Type = integer;
!          EnumerationSet = DtPaperSize;
!          Default = "DtHELP_PAPERSIZE_LETTER"; };
    DtNpointerBlank : Argument
        { Type = boolean;
          Default = "False"; };
    DtNpointerBlankDelay : Argument
        { Type = integer;
          Default = "2"; };
    DtNpointerColor : Argument
        { Type = color;
          Default = "XtDefaultForeground"; };
    DtNpointerColorBackground : Argument
        { Type = color;
          Default = "XtDefaultBackground"; };
    DtNpointerShape : Argument
        { Type = any;
          Default = "xterm"; };
!     DtNprintCallback : Reason
!         { };
!     DtNprintDestination : Argument
!         { Type = integer;
!           EnumerationSet = DtPrintDestination;
!           Default = "DtPRINT_TO_PRINTER"; };
!     DtNprintLabelString : Argument
!         { Type = compound_string;
!           Default = "Null"; };
!     DtNprintSetupMode : Argument
!         { Type = integer;
!           EnumerationSet = DtSetupMode;
!           Default = "DtPRINT_SETUP_XP"; };
!     DtNprinter : Argument
!         { Type = string;
!           Default = "Null"; };
!     DtNprinterInfoProc : Argument
!         { Type = any;
!           Default = "DtUNSPECIFIED"; };
!     DtNprinterName : Argument
!         { Type = string;
!           Default = "Null"; };
    DtNreverseVideo : Argument
        { Type = boolean;
          Default = "False"; };
    DtNreverseWrap : Argument
        { Type = boolean;
          Default = "False"; };
    DtNrightAlignToggleLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNrightMarginFieldLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNrows : Argument
        { Type = integer;
          Default = "DtUNSPECIFIED"; };
    DtNsaveLines : Argument
        { Type = string;
          Default = "null"; };
    DtNscrollBarPolicy : Argument
        { Type = integer;
          EnumerationSet = DtScrollBarPolicy;
          Default = "DtHELP_AS_NEEDED_SCROLLBARS"; };
    DtNscrollHorizontal : Argument
        { Type = boolean;
          Default = "True"; };
    DtNscrollLeftSide : Argument
        { Type = boolean;
          Default = "UNSPECIFIED"; };
    DtNscrollTopSide : Argument
        { Type = boolean;
          Default = "UNSPECIFIED"; };
    DtNscrollVertical : Argument
        { Type = boolean;
          Default = "True"; };
!    DtNselectFileProc : Argument
!        { Type = any;
!          Default = "default"; };
!    DtNselectPrinterProc : Argument
!        { Type = any;
!          Default = "DtUNSPECIFIED"; };
!    DtNsetupCallback : Reason
!        { };
    DtNshadowType : Argument
        { Type = integer;
          EnumerationSet = DtShadowType;
          Default = "DtSHADOW_IN"; };
    DtNshowNewWindowButton : Argument
        { Type = boolean;
          Default = "False"; };
    DtNshowStatusLine : Argument
        { Type = boolean;
          Default = "False"; };
    ! DtNshowTopLevelButton : Argument
    !    { Type = boolean;
    !      Default = "False"; };
    DtNspellDialogTitle : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNspellFilter : Argument
        { Type = string;
          Default = "Null"; };
    ! DtNsrchHitPrefixFont : Argument
    !    { Type = string;
    !      Default = "dynamic"; };
    DtNstatusChangeCallback : Reason
        { };
    DtNstickyNextCursor : Argument
        { Type = boolean;
          Default = "False"; };
    DtNstickyPrevCursor : Argument
        { Type = boolean;
          Default = "False"; };
    DtNstringData : Argument
        { Type = string;
          Default = "Null"; };
    DtNsubMenuId : Argument
        { Type = widget_ref;
          Default = "Null"; };
    DtNsubprocessArgv : Argument
        { Type = any;
          Default = "NULL"; };
    DtNsubprocessCmd : Argument
        { Type = string;
          Default = "Null"; };
    DtNsubprocessExec : Argument
        { Type = boolean;
          Default = "True"; };
    DtNsubprocessLoginShell : Argument
        { Type = boolean;
          Default = "False"; };
    DtNsubprocessPid : Argument
        { Type = integer;
          Default = "-1"; };
    DtNsubprocessTerminationCallback : Reason
        { };
    DtNsubprocessTerminationCatch : Argument
        { Type = boolean;
          Default = "True"; };
    DtNsunFunctionKeys : Argument
        { Type = boolean;
          Default = "False"; };
    DtNtermDevice : Argument
        { Type = integer;
          Default = "-1"; };
    DtNtermDeviceAllocate : Argument
        { Type = boolean;
          Default = "True"; };
    DtNtermId : Argument
        { Type = string;
          Default = "Null"; };
    DtNtermName : Argument
        { Type = string;
          Default = "Null"; };
    DtNtermSlaveName : Argument
        { Type = string;
          Default = "Null"; };
    DtNtextBackground : Argument
        { Type = color;
          Default = "DtUNSPECIFIED"; };
    DtNtextDeselectCallback : Reason
        { };
    DtNtextFontList : Argument
        { Type = font_table;
          Default = "dynamic"; };
    DtNtextForeground : Argument
        { Type = color;
          Default = "DtUNSPECIFIED"; };
    DtNtextSelectCallback : Reason
        { };
    DtNtextTranslations : Argument
        { Type = translation_table;
          Default = "Null"; };
    DtNtopCharacter : Argument
        { Type = integer;
          Default = "0"; };
    DtNtopicTitle : Argument
        { Type = string;
          Default = "Null"; };
    DtNtotalLineCountLabel : Argument
        { Type = compound_string;
          Default = "Null"; };
    DtNttyModes : Argument
        { Type = string;
          Default = "Null"; };
    DtNuserBoldFont : Argument
        { Type = font_table;
          Default = "dynamic"; };
    DtNuserFont : Argument
        { Type = font_table;
          Default = "dynamic"; };
!    DtNverifyPrinterProc : Argument
!        { Type = any;
!          Default = "DtUNSPECIFIED"; };
    DtNverticalScrollBar : Argument
        { Type = widget_ref;
          Default = "Null"; };
    DtNvisiblePathCount : Argument
        { Type = integer;
          Default = "7"; };
    DtNvisualBell : Argument
        { Type = boolean;
          Default = "False"; };
    DtNwidthInc : Argument
        { Type = integer;
          Default = "0"; };
    DtNwordWrap : Argument
        { Type = boolean;
          Default = "False"; };
!    DtNworkAreaLocation : Argument
!        { Type = integer;
!          EnumerationSet = DtWorkAreaLocation;
!          Default = "DtWORK_AREA_BOTTOM"; };
! 
! Motif 2.2 widgets and resources
!
! --- XmColumn Resources
Resource
  XmNdefaultEntryLabelFontList : Argument {
    Type = font_table;
  };
  XmNdefaultEntryLabelAlignment : Argument {
    Type = integer;
    EnumerationSet = XmAlignment;
  };
  XmNdefaultFillStyle : Argument {
    Type = integer;
    EnumerationSet = XmFillStyle;
    Default = "XmFILL_RAGGED";
  };
  XmNitemSpacing : Argument {
    Type = integer;
    Default = "2";
  };
  XmNlabelSpacing : Argument {
    Type = integer;
    Default = "10";
  };
  XmNdistribution : Argument {
    Type = integer;
    EnumerationSet = XmDistribution;
    Default = "XmDISTRIBUTE_TIGHT";
  };

! --- XmColumn Constraints
  XmNentryLabelFontList : Constraint {
    Type = font_table;
    Default = "Null";
  };
  XmNentryLabelAlignment : Constraint {
    Type = integer;
    EnumerationSet = XmAlignment;
    Default = "XmALIGNMENT_UNSPECIFIED";
  };
  XmNfillStyle : Constraint {
    Type = integer;
    EnumerationSet = XmFillStyle;
    Default = "XmFILL_UNSPECIFIED";
  };
  XmNentryLabelType : Constraint {
    Type = integer;
!    EnumerationSet = LabelType;
    Default = "XmSTRING";
  };
  XmNentryLabelString : Constraint {
    Type = compound_string;
  };
  XmNentryLabelPixmap : Constraint {
    Type = pixmap;
    Default = "Null";
  };
  XmNshowEntryLabel : Constraint {
    Type = boolean;
    Default = "True";
  };
  XmNstretchable : Constraint {
    Type = boolean;
    Default = "True";
  };

!
! --- XmColumn Widget
!
Class XmColumn : Widget {
  SuperClass = "XmBulletinBoard";
  ConvenienceFunction = XmCreateColumn;
  Resources {
    XmNdefaultEntryLabelFontList;
    XmNdefaultEntryLabelAlignment;
!   XmNdefaultEntryLabelPosition;
    XmNdefaultFillStyle;
    XmNitemSpacing;
    XmNlabelSpacing;
    XmNorientation;
    XmNdistribution;
    ! -- Constraint Resources
    XmNentryLabelFontList;
    XmNentryLabelAlignment;
!   XmNentryLabelPosition;
    XmNfillStyle;
    XmNentryLabelType;
    XmNentryLabelString;
    XmNentryLabelPixmap;
    XmNshowEntryLabel;
    XmNstretchable;
  };
  Controls {
    AllWidgets;
  };
};

!- XmButton Box Resources
Resource
  XmNequalSize : Argument {
    Type = boolean;
  };
  XmNfillOption : Argument {
    Type = integer;
    EnumerationSet = FillOptionType;
    Default = "XmFillNone";
  };

Class XmButtonBox : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateButtonBox;
  Resources {
    XmNbottomShadowColor;
    XmNbottomShadowPixmap;
    XmNforeground;
    XmNhighlightColor;
    XmNhighlightPixmap;
    XmNshadowThickness;
    XmNtopShadowColor;
    XmNtopShadowPixmap;
    XmNequalSize;
    XmNfillOption;
    XmNmarginHeight;
    XmNmarginWidth;
    XmNorientation;
  };
  Controls {
    AllWidgets;
  };
  };
  !
  ! Resources for XmPaned
  !
  Resource
  XmNcursor : Argument {
    Type = identifier;
  };
  XmNsashTranslations : Argument {
    Type = translation_table;
  };
  XmNpreferredPaneSize : Constraint {
    Type = integer;
  };
  XmNresizeToPreferred : Constraint {
    Type = boolean;
  };
  XmNshowSash : Constraint {
    Type = boolean;
  };

Class XmPaned : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreatePaned;
  Resources {
    XmNbottomShadowColor;
    XmNbottomShadowPixmap;
    XmNforeground;
    XmNhighlightColor;
    XmNhighlightPixmap;
    XmNshadowThickness;
    XmNtopShadowColor;
    XmNtopShadowPixmap;
    XmNspacing;
    XmNmarginWidth;
    XmNmarginHeight;
    XmNrefigureMode;
    XmNorientation;
    XmNseparatorOn;
    XmNcursor;
    XmNsashIndent;
    XmNsashTranslations;
    XmNsashWidth;
    XmNsashHeight;
    XmNsashShadowThickness;
    XmNallowResize;
    XmNpaneMinimum;
    XmNpaneMaximum;
    XmNpreferredPaneSize;
    XmNresizeToPreferred;
    XmNskipAdjust;
    XmNshowSash;
  };
  Controls {
    AllWidgets;
  };
};
Resource
  XmNshowLabel : Argument {
    Type = boolean;
  };
  XmNverticalMargin : Argument {
    Type = integer;
  };
  XmNhorizontalMargin : Argument {
    Type = integer;
  };
  XmNverify : Argument {
    Type = boolean;
  };
  XmNcustomizedCombinationBox : Argument {
    Type = boolean;
  };
  XmNuseTextField : Argument {
    Type = boolean;
  };
  XmNverifyTextCallback : Reason {  };
  XmNupdateTextCallback : Reason {  };
  XmNupdateShellCallback : Reason {  };
  XmNpopupShellWidget : Argument {
    Type = widget_ref;
  };
  XmNpopupOffset : Argument {
    Type = integer;
  };
  XmNpopupCursor : Argument {
    Type = identifier;
  };
  XmNcomboTranslations : Argument {
    Type = translation_table;
  };
  XmNnewVisualStyle : Argument {
    Type = boolean;
    Default = "True";
  };

Class XmCombinationBox2: Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateCombinationBox2;
  Resources {
    XmNhorizontalMargin;
    XmNverticalMargin;
    XmNverify;
    XmNeditable;
    XmNshadowThickness;
    XmNcustomizedCombinationBox;
    XmNverifyTextCallback;
    XmNupdateTextCallback;
    XmNupdateShellCallback;
    XmNpopupShellWidget;
    XmNshowLabel;
    XmNpopupOffset;
    XmNpopupCursor;
    XmNcomboTranslations;
    XmNnavigationType;
    XmNuseTextField;
    ! Label resources
    XmNlabelPixmap;
    XmNlabelString;
    XmNlabelType;
    XmNmarginBottom;
    XmNmarginLeft;
    XmNmarginRight;
    XmNmarginTop;
    XmNrecomputeSize;
    XmNlabelString;
    XmNselectionPolicy;
    XmNnewVisualStyle;
    XmNitems;
    XmNitemCount;
    XmNvisibleItemCount;
    XmNfontList;
    XmNmarginHeight;
    XmNmarginWidth;
    XmNvalue {
      Type = string;
    };
  };
  Controls {
    XmPopupMenu;
    XmLabel;
    XmTextField;
    XmArrowButton;
    XmList;
  };
  Children {
    Xm_Label;
    Xm_Text;
    Xm_Arrow;
    Xm_List;
  };
};

Child
  Xm_Label : XmLabel;
  Xm_Arrow : XmArrowButton;

!
! Resources for XmIconBox
!
Resource
  XmNminimumHorizontalCells : Argument {
    Type = integer;
  };
  XmNminimumVerticalCells : Argument {
    Type = integer;
  };
  XmNminimumCellHeight : Argument {
    Type = integer;
  };
  XmNminimumCellWidth : Argument {
    Type = integer;
  };
  XmNcellX : Constraint {
    Type = integer;
  };
  XmNcellY : Constraint {
    Type = integer;
  };

Class XmIconBox : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateIconBox;
  Resources {
    XmNbottomShadowColor;
    XmNbottomShadowPixmap;
    XmNforeground;
    XmNhighlightColor;
    XmNhighlightPixmap;
    XmNshadowThickness;
    XmNtopShadowColor;
    XmNtopShadowPixmap;
    XmNhorizontalMargin;
    XmNverticalMargin;
    XmNminimumHorizontalCells;
    XmNminimumVerticalCells;
    XmNminimumCellWidth;
    XmNminimumCellHeight;
    XmNcellX;
    XmNcellY;
  };
  Controls {
    AllWidgets;
  };
};

!
! Resources for XmIconButton
!
Resource
  XmNlabel : Argument {
    Type = string;
  };
  XmNpixmap : Argument {
    Type = pixmap;
  };
  XmNiconPlacement : Argument {
    Type = integer;
    EnumerationSet = IconPlacementType;
    Default = "XmIconTop";
  };
  XmNiconTextPadding : Argument {
    Type = integer;
  };
  XmNdoubleClickCallback : Reason {
  };

Class XmIconButton : Widget {
  SuperClass = "XmPrimitive";
  ConvenienceFunction = XmCreateIconButton;
  Resources {
    XmNalignment;
    XmNlabel;
    XmNlabelString;
    XmNpixmap;
    XmNfontList;
    XmNiconPlacement;
    XmNrecomputeSize;
    XmNarmColor;
    XmNset;
    XmNverticalMargin;
    XmNhorizontalMargin;
    XmNiconTextPadding;
    XmNactivateCallback;
    XmNdoubleClickCallback;
    XmNstringDirection;
  };
  Controls {
    XmPopupMenu;
    XmDialogShell;
  };
};
!
! resources for the XmColorSelector
Resource
  XmNblueSliderLabel : Argument {
    Type = compound_string;
  };
  XmNcolorName : Argument {
    Type = string;
  };
  XmNcolorListTogLabel : Argument {
    Type = compound_string;
  };
  XmNcolorMode : Argument {
    Type = integer;
    EnumerationSet = ColorModeType;
  };
  XmNfileReadError : Argument {
    Type = compound_string;
  };
  XmNgreenSliderLabel : Argument {
    Type = compound_string;
  };
  XmNnoCellError : Argument {
    Type = compound_string;
  };
  XmNredSliderLabel : Argument {
    Type = compound_string;
  };
  XmNrgbFile : Argument {
    Type = string;
  };
  XmNsliderTogLabel : Argument {
    Type = compound_string;
  };

Class XmColorSelector : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateColorSelector;
  Resources {
    XmNblueSliderLabel { Default = "Blue"; };
    XmNcolorListTogLabel {
      Default = "Color List";
    };
    XmNcolorMode;
    XmNcolorName {
      Default = "white";
    };
    XmNfileReadError;
    XmNfontList;
    XmNgreenSliderLabel {
      Default = "Green";
    };
    XmNmarginWidth;
    XmNmarginHeight;
    XmNnavigationType;
    XmNnoCellError {
      Default = "\n\nNo Color Cell Available";
    };
    XmNredSliderLabel {
      Default = "Red";
    };
    XmNrgbFile;
    XmNsliderTogLabel {
      Default = "Color Sliders";
    };
  };
  Controls {
    XmList;
    XmToggleButton;
    XmPopupMenu;
  };
  Children {
    Xm_List;
    Xm_ColorListToggle;
    Xm_ColorSlidersToggle;
  };
};

Child
  Xm_ColorListToggle : XmToggleButton;
  Xm_ColorSlidersToggle : XmToggleButton;

!
! Resources for the XmFontSelector
!
Resource
  XmN100DPIstring : Argument {
    Type = compound_string;
  };
  XmN75DPIstring : Argument {
    Type = compound_string;
  };
  XmNanyLowerString : Argument {
    Type = compound_string;
  };
  XmNanyString : Argument {
    Type = compound_string;
  };
  XmNboldString : Argument {
    Type = compound_string;
  };
  XmNbothString : Argument {
    Type = compound_string;
  };
  XmNcurrentFont : Argument {
    Type = string;
  };
  XmNdefaultEncodingString : Argument {
    Type = string;
  };
  XmNencodingString : Argument {
    Type = compound_string;
  };
  XmNencodingList : Argument {
    Type = asciz_table;
  };
  XmNfamilyString : Argument {
    Type = compound_string;
  };
  XmNitalicString : Argument {
    Type = compound_string;
  };
  XmNmonoSpaceString : Argument {
    Type = compound_string;
  };
  XmNoptionString : Argument {
    Type = compound_string;
  };
  XmNotherString : Argument {
    Type = compound_string;
  };
  XmNpropSpaceString : Argument {
    Type = compound_string;
  };
  XmNsampleText : Argument {
    Type = compound_string;
  };
  XmNscalingString : Argument {
    Type = compound_string;
  };
  XmNshowFontName : Argument {
    Type = boolean;
  };
  XmNshowNameString : Argument {
    Type = compound_string;
  };
  XmNsizeString : Argument {
    Type = compound_string;
  };
  XmNtextRows : Argument {
    Type = integer;
  };
  XmNuseScaling : Argument {
    Type = boolean;
  };
  XmNxlfdString : Argument {
    Type = compound_string;
  };

Class XmFontSelector : Widget {
  SuperClass = "XmPaned";
  ConvenienceFunction = XmCreateFontSelector;
  Resources {
    XmN100DPIstring {
      Default = "100 dpi";
    };
    XmN75DPIstring {
      Default = "75 dpi";
    };
    XmNanyLowerString {
      Default = "any";
    };
    XmNanyString {
      Default = "Any";
    };
    XmNboldString {
      Default = "Bold";
    };
    XmNbothString {
      Default = "Both";
    };
    XmNcurrentFont;
    XmNdefaultEncodingString { Default = "iso8859-1"; };
    XmNencodingString  {
      Default = "Encoding";
    };
    XmNencodingList;
    XmNfamilyString {
      Default = "Family";
    };
    XmNitalicString {
      Default = "Italic";
    };
    XmNmonoSpaceString  {
      Default = "Fixed Width Fonts";
    };
    XmNoptionString {
      Default = "Options...";
    };
    XmNotherString {
      Default = "Other Fonts";
    };
    XmNpropSpaceString {
      Default = "Proportional Fonts";
    };
    XmNsampleText {
      Default = "adcdef...";
    };
    XmNscalingString {
      Default = "Use Font Scaling";
    };
    XmNshowFontName;
    XmNshowNameString;
    XmNsizeString {
      Default = "Size";
    };
    XmNspacing ;
    XmNtextRows;
    XmNuseScaling;
    XmNfontList;
    XmNforeground;
    ! to prevent shooting foot off
    XmNnavigationType;
    XmNorientation;
    XmNseparatorOn;
    XmNsashIndent;
    XmNsashTranslations;
    XmNsashWidth;
    XmNsashHeight;
    XmNsashShadowThickness;
    XmNvalueChangedCallback;
    XmNxlfdString {
      Default = "Xlfd String";
    };
  };
  Controls {
    XmPopupMenu;
  };
};

!
! Resources for the XmTree Widget
!
Resource
  XmNconnectStyle : Argument {
    Type = integer;
    EnumerationSet = ConnectStyle;
    Default = XiTreeDirect;
  };
  XmNopenFolderPixmap : Argument {
    Type = pixmap;
  };
  XmNcloseFolderPixmap : Argument {
    Type = pixmap;
  };
  XmNnodeOpenFolderPixmap: Constraint {
    Type = pixmap;
  };
  XmNnodeCloseFolderPixmap: Constraint {
    Type = pixmap;
  };
  XmNnodeStateChangedCallback : Reason {
  };
  XmNnodeStateBegEndCallback : Reason {
  };
  XmNverticalDelta : Argument {
    Type = integer;
  };
  XmNhorizontalDelta : Argument {
    Type = integer;
  };
  XmNcompressStyle : Argument {
    Type = integer;
    EnumerationSet = XmTreeCompressStyle;
  };
  XmNlineBackgroundColor : Constraint {
    Type = color;
  };
  XmNlineStyle : Constraint {
    Type = integer;
    EnumerationSet = XmTreeLineStyle;
  };

Class XmTree : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateTree;
  Resources {
    XmNautoClose;
    XmNrefigureMode;
    XmNverticalMargin;
    XmNhorizontalMargin;
    XmNnodeStateChangedCallback;
    XmNnodeStateBegEndCallback;
    XmNnodeState;
    XmNparentNode;
    XmNnodeOpenFolderPixmap;
    XmNnodeCloseFolderPixmap;
    XmNinsertBefore;
    XmNconnectStyle;
    XmNlineStyle;
    XmNlineBackgroundColor;
    XmNopenClosePadding;
    XmNlineColor;
    XmNlineWidth;
    XmNbottomShadowColor;
    XmNbottomShadowPixmap;
    XmNforeground;
    XmNhighlightColor;
    XmNhighlightPixmap;
    XmNhorizontalNodeSpace;
    XmNshadowThickness;
    XmNtopShadowColor;
    XmNtopShadowPixmap;
    XmNverticalNodeSpace;
    XmNopenFolderPixmap;
    XmNcloseFolderPixmap;
    XmNorientation;
    XmNcompressStyle;
    XmNverticalDelta;
    XmNhorizontalDelta;
  };
  Controls {
    AllWidgets;
  };
};

!
! Resources for the XmOutline Widget

Resource
  XmNhorizontalNodeSpace : Argument {
    Type = integer;
  };
  XmNverticalNodeSpace : Argument {
    Type = integer;
  };
  XmNopenClosePadding : Constraint {
    Type = integer;
  };
  XmNlineWidth : Constraint {
    Type = integer;
  };
  XmNlineColor : Constraint {
    Type = color;
  };
  XmNautoClose : Argument {
    Type = boolean;
  };
  XmNconstrainWidth: Argument {
    Type = boolean;
  };
  XmNconnectNodes: Argument {
    Type = boolean;
  };
  XmNnodeState : Constraint {
    Type = integer;
    EnumerationSet = HierarchyNodeStateType;
  };
  XmNparentNode : Constraint {
    Type = widget_ref;
  };
  XmNinsertBefore : Constraint {
    Type = widget_ref;
  };

  XmNindentSpace : Argument {
    Type = integer;
  };

Class XmOutline : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateOutline;
  Resources {
    XmNconstrainWidth;
    XmNautoClose;
    XmNconnectNodes;
    XmNrefigureMode;
    XmNverticalMargin;
    XmNhorizontalMargin;
    XmNnodeOpenFolderPixmap;
    XmNnodeCloseFolderPixmap;
    XmNnodeState;
    XmNnodeStateChangedCallback;
    XmNnodeStateBegEndCallback;
    XmNparentNode;
    XmNinsertBefore;
    XmNbottomShadowColor;
    XmNbottomShadowPixmap;
    XmNforeground;
    XmNhighlightColor;
    XmNhighlightPixmap;
    XmNshadowThickness;
    XmNtopShadowColor;
    XmNtopShadowPixmap;
    XmNindentSpace;
    XmNopenFolderPixmap;
    XmNcloseFolderPixmap;
  };
  Controls {
    AllWidgets;
  };
};

! resources for the Ext18List Widget
Resource
  XmNnumRows : Argument {
    Type = integer;
  };
  XmNselectedColumn : Argument {
    Type = integer;
  };
  XmNcolumnTitles : Argument {
    Type = string_table;
    Related = XmNnumColumns;
  };
  XmNentryData : Argument {
    Type = identifier;
  };
  XmNfirstColumnPixmaps : Argument {
    Type = boolean;
  };
  XmNfirstRow : Argument {
    Type = integer;
  };
  XmNfirstColumn : Argument {
    Type = integer;
  };
  XmNsortFunctions : Argument {
    Type = identifier;
  };
  XmNshowFind : Argument {
    Type = boolean;
  };
  XmNfindLabel : Argument {
    Type = compound_string;
  };
  XmNitemFoundCallback : Reason {
  };
  XmNitemNotFoundCallback : Reason {
  }; 
  XmNselectCallback : Reason {
  };
!  XmNvisibleItemCount : Argument {
!    Type = integer;
!  };
!  XmNverticalScrollBar : Argument {
!    Type = widget;
!  };
!  XmNhorizontalScrollBar : Argument {
!    Type = widget;
!  };
!

Class XmExt18List : Widget {
  SuperClass = "XmManager";
  ConvenienceFunction = XmCreateExtended18List;
  Resources {
    XmNalignment;
    XmNtitleString;
    XmNnumColumns;
    XmNnumRows;
    XmNselectedColumn;
    XmNcolumnTitles;
    XmNentryData;
    XmNfirstColumnPixmaps;
    XmNfontList;
    XmNfirstRow;
    XmNfirstColumn;
    XmNsortFunctions;
    XmNselectionPolicy;
    XmNselectCallback;
    XmNdoubleClickCallback;
    XmNfindLabel;
    XmNshowFind;
    XmNitemFoundCallback;
    XmNitemNotFoundCallback;
    XmNvisibleItemCount;
    XmNverticalScrollBar;
    XmNhorizontalScrollBar;
    XmNnewVisualStyle;
  };
  Controls {
    XmLabel;
    XmPushButton;
    XmText;
    XmPopupMenu;
  };
  Children {
    Xm_Title;
    Xm_Find;
    Xm_FindText;
  };
};

Child
  Xm_Title : XmLabel;
  Xm_Find : XmPushButton;
  Xm_FindText : XmText;

!
! Resources for the XmTabBox Widget
Resource
  XmNtabMode : Argument {
    Type = integer;
    EnumerationSet = XmTabMode;
  };
  XmNtabAutoSelect : Argument {
    Type = boolean;
  };
  XmNtabSelectPixmap : Argument {
    Type = pixmap;
  };
  XmNtabCornerPercent : Argument {
    Type = integer;
  };
  XmNuniformTabSize : Argument {
    Type = boolean;
  };
  XmNstackedEffect : Argument {
    Type = boolean;
  };
  XmNtabLabelSpacing : Argument {
    Type = integer;
  };
  XmNunselectCallback : Reason {
  };
  XmNtabMarginHeight : Argument {
    Type = integer;
  };
  XmNtabEdge : Argument {
    Type = integer;
    EnumerationSet = XmTabEdge;
  };
  XmNtabSelectColor : Argument {
    Type = color;
  };
  XmNtabList : Argument {
    Type = identifier;
  };
  XmNuseImageCache : Argument {
    Type = boolean;
  };
  XmNtabOrientation : Argument {
    Type = integer;
    EnumerationSet = XmTabOrientation;
  };
  XmNnumStacks : Argument {
    Type = integer;
  };
  XmNtabOffset : Argument {
    Type = integer;
  };
  XmNtabStyle : Argument {
    Type = integer;
    EnumerationSet = XmTabStyle;
  };
  XmNtabMarginWidth : Argument {
    Type = integer;
  };

Class XmTabBox : Widget {
  SuperClass = XmPrimitive;
  ConvenienceFunction = XmCreateTabBox;
  Resources {
    XmNhighlightThickness;
    XmNtabMode;
    XmNtabAutoSelect;
    XmNtabSelectPixmap;
    XmNtabCornerPercent;
    XmNuniformTabSize;
    XmNstackedEffect;
    XmNtabLabelSpacing;
    XmNunselectCallback;
    XmNtabMarginHeight;
    XmNtabMarginWidth;
    XmNselectCallback;
    XmNtabEdge;
    XmNtabSelectColor;
    XmNtabList;
    XmNuseImageCache;
    XmNtabOrientation;
    XmNtabOffset;
    XmNtabStyle;
    XmNfontList;
    XmNorientation;
    XmNtabMarginWidth;
  };
  Controls {
    XmPopupMenu;
  };
};

!
! Resources for XmTabStack

Resource
  XmNtabSelectedCallback : Reason {
  };
  XmNtabSide : Argument {
    Type = integer;
    EnumerationSet = XmTabSide;
  };
  XmNtabLabelPixmap : Constraint {
    Type = pixmap;
  };
  XmNtabStringDirection : Constraint {
    Type = integer;
    EnumerationSet = StringDirection;
  };
  XmNtabLabelString : Constraint {
    Type = compound_string;
  };
  XmNtabPixmapPlacement : Constraint {
    Type = integer;
    EnumerationSet = XmPixmapPlacement;
  };
  XmNtabAlignment : Constraint {
    Type = integer;
    EnumerationSet = Alignment;
  };
  XmNfreeTabPixmap : Constraint {
    Type = boolean;
  };
  XmNtabBackgroundPixmap : Constraint {
    Type = pixmap;
  };
  XmNtabBackground : Constraint {
    Type = color;
  };
  XmNtabForeground : Constraint {
    Type = color;
  };

Class XmTabStack : Widget {
  SuperClass = XmBulletinBoard;
  ConvenienceFunction = XmCreateTabStack;
  Resources {
    XmNtabAutoSelect;
    XmNtabSelectedCallback;
    XmNhighlightThickness;
    XmNtabMode;
    XmNtabSelectPixmap;
    XmNuniformTabSize;
    XmNstackedEffect;
    XmNtabMarginHeight;
    XmNtabSelectColor;
    XmNtabOrientation;
    XmNtabStyle;
    XmNfontList;
    XmNtabSide;
    XmNtabMarginWidth;
    XmNtabLabelPixmap;
    XmNtabStringDirection;
    XmNtabLabelString;
    XmNtabPixmapPlacement;
    XmNtabAlignment;
    XmNtabLabelSpacing;
    XmNtabCornerPercent;
    XmNnumStacks;
    XmNtabOffset;
    XmNuseImageCache;
    XmNfreeTabPixmap;
    XmNtabBackgroundPixmap;
    XmNtabBackground;
    XmNtabForeground;
  };
  Controls {
    AllWidgetsAndGadgets;
  };
};
